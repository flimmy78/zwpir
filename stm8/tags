!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t APR; \/*!< AWU Asynchronous prescalar buffer *\/$/;"	m	struct:AWU_struct
APR_Array	./STM8L10x_StdPeriph_Driver/src/stm8l10x_awu.c	/^CONST uint8_t APR_Array[17] = {0, 8, 16, 32, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 61, 36, 14};$/;"	v
AREA	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1423;"	d
ARR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ARR;  \/*!< auto-reload register *\/$/;"	m	struct:TIM4_struct
ARRH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ARRH;  \/*!< auto-reload register high  *\/$/;"	m	struct:TIM_struct
ARRL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ARRL;  \/*!< auto-reload register low    *\/$/;"	m	struct:TIM_struct
AWU	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1287;"	d
AWU_APR_APR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	239;"	d
AWU_APR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	224;"	d
AWU_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1258;"	d
AWU_CSR_AWUEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	236;"	d
AWU_CSR_AWUF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	235;"	d
AWU_CSR_MSR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	237;"	d
AWU_CSR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	223;"	d
AWU_Cmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_awu.c	/^void AWU_Cmd(FunctionalState NewState)$/;"	f
AWU_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_awu.c	/^void AWU_DeInit(void)$/;"	f
AWU_GetFlagStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_awu.c	/^FlagStatus AWU_GetFlagStatus(void)$/;"	f
AWU_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  AWU_IRQn                      = (uint8_t)4,   \/*!< Auto Wake-Up interrupt   *\/$/;"	e	enum:__anon56
AWU_IdleModeEnable	./STM8L10x_StdPeriph_Driver/src/stm8l10x_awu.c	/^void AWU_IdleModeEnable(void)$/;"	f
AWU_Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_awu.c	/^void AWU_Init(AWU_Timebase_TypeDef AWU_TimeBase)$/;"	f
AWU_Init_60s	./main.c	/^static void AWU_Init_60s(void)$/;"	f	file:
AWU_LSICalibrationConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_awu.c	/^void AWU_LSICalibrationConfig(uint32_t LSIFreqHz)$/;"	f
AWU_TBR_AWUTB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	241;"	d
AWU_TBR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	225;"	d
AWU_TIMEOUT_SEC	./main.c	12;"	d	file:
AWU_TIMEOUT_SEC	./main.c	8;"	d	file:
AWU_Timebase_128ms	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_128ms  = (uint8_t)10,   \/*!< AWU Timebase equals 128 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_12s	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_12s    = (uint8_t)15,   \/*!< AWU Timebase equals 12 s *\/$/;"	e	enum:__anon20
AWU_Timebase_16ms	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_16ms   = (uint8_t)7,    \/*!< AWU Timebase equals 16 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_1ms	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_1ms    = (uint8_t)3,    \/*!< AWU Timebase equals 1 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_1s	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_1s     = (uint8_t)13,   \/*!< AWU Timebase equals 1 s *\/$/;"	e	enum:__anon20
AWU_Timebase_250us	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_250us  = (uint8_t)1,    \/*!< AWU Timebase equals 0.25 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_256ms	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_256ms  = (uint8_t)11,   \/*!< AWU Timebase equals 256 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_2ms	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_2ms    = (uint8_t)4,    \/*!< AWU Timebase equals 2 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_2s	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_2s     = (uint8_t)14,   \/*!< AWU Timebase equals 2 s *\/$/;"	e	enum:__anon20
AWU_Timebase_30s	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_30s    = (uint8_t)16    \/*!< AWU Timebase equals 30 s *\/$/;"	e	enum:__anon20
AWU_Timebase_32ms	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_32ms   = (uint8_t)8,    \/*!< AWU Timebase equals 32 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_4ms	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_4ms    = (uint8_t)5,    \/*!< AWU Timebase equals 4 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_500us	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_500us  = (uint8_t)2,    \/*!< AWU Timebase equals 0.5 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_512ms	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_512ms  = (uint8_t)12,   \/*!< AWU Timebase equals 512 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_64ms	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_64ms   = (uint8_t)9,    \/*!< AWU Timebase equals 64 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_8ms	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_8ms    = (uint8_t)6,    \/*!< AWU Timebase equals 8 ms *\/$/;"	e	enum:__anon20
AWU_Timebase_No_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^  AWU_Timebase_No_IT  = (uint8_t)0,    \/*!< No AWU interrupt selected *\/$/;"	e	enum:__anon20
AWU_Timebase_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	/^} AWU_Timebase_TypeDef;$/;"	t	typeref:enum:__anon20
AWU_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^AWU_TypeDef;$/;"	t	typeref:struct:AWU_struct
AWU_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct AWU_struct$/;"	s
AffBit	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1397;"	d
BEEP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1288;"	d
BEEP_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1260;"	d
BEEP_CALIBRATION_DEFAULT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_beep.h	62;"	d
BEEP_CSR_BEEPDIV	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	275;"	d
BEEP_CSR_BEEPEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	274;"	d
BEEP_CSR_BEEPSEL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	273;"	d
BEEP_CSR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	263;"	d
BEEP_Cmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_beep.c	/^void BEEP_Cmd(FunctionalState NewState)$/;"	f
BEEP_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_beep.c	/^void BEEP_DeInit(void)$/;"	f
BEEP_Frequency_1KHz	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_beep.h	/^  BEEP_Frequency_1KHz = (uint8_t)0x00,  \/*!< Beep signal output frequency equals to 1 KHz *\/$/;"	e	enum:__anon104
BEEP_Frequency_2KHz	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_beep.h	/^  BEEP_Frequency_2KHz = (uint8_t)0x40,  \/*!< Beep signal output frequency equals to 2 KHz *\/$/;"	e	enum:__anon104
BEEP_Frequency_4KHz	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_beep.h	/^  BEEP_Frequency_4KHz = (uint8_t)0x80   \/*!< Beep signal output frequency equals to 4 KHz *\/$/;"	e	enum:__anon104
BEEP_Frequency_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_beep.h	/^} BEEP_Frequency_TypeDef;$/;"	t	typeref:enum:__anon104
BEEP_Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_beep.c	/^void BEEP_Init(BEEP_Frequency_TypeDef BEEP_Frequency)$/;"	f
BEEP_LSICalibrationConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_beep.c	/^void BEEP_LSICalibrationConfig(uint32_t LSIFreqHz)$/;"	f
BEEP_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^BEEP_TypeDef;$/;"	t	typeref:struct:BEEP_struct
BEEP_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct BEEP_struct$/;"	s
BKR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t BKR;  \/*!< Break Register *\/$/;"	m	struct:TIM_struct
BRR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t BRR1;  \/*!<  USART baud rate register   *\/$/;"	m	struct:USART_struct
BRR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t BRR2;  \/*!<  USART DIV mantissa[11:8] SCIDIV fraction *\/$/;"	m	struct:USART_struct
BUAD	./main.c	17;"	d	file:
BYTE_0	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1404;"	d
BYTE_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1405;"	d
BYTE_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1406;"	d
BYTE_3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1407;"	d
BitAction	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {RESET = 0, SET = !RESET} FlagStatus, ITStatus, BitStatus, BitAction;$/;"	t	typeref:enum:__anon13
BitClr	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1425;"	d
BitSet	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1426;"	d
BitStatus	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {RESET = 0, SET = !RESET} FlagStatus, ITStatus, BitStatus, BitAction;$/;"	t	typeref:enum:__anon13
BitVal	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1427;"	d
CCER1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCER1;  \/*!< CC enable register 1     *\/$/;"	m	struct:TIM_struct
CCMR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCMR1;  \/*!< CC mode register 1      *\/$/;"	m	struct:TIM_struct
CCMR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCMR2;  \/*!< CC mode register 2      *\/$/;"	m	struct:TIM_struct
CCOR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCOR;       \/*!< Configurable Clock Output Register *\/$/;"	m	struct:CLK_struct
CCR1H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCR1H;  \/*!< capture\/compare register 1 high   *\/$/;"	m	struct:TIM_struct
CCR1L	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCR1L;  \/*!< capture\/compare register 1 low     *\/$/;"	m	struct:TIM_struct
CCR2H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCR2H;  \/*!< capture\/compare register 2 high   *\/$/;"	m	struct:TIM_struct
CCR2L	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCR2L;  \/*!< capture\/compare register 2 low     *\/$/;"	m	struct:TIM_struct
CCRH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCRH;   \/*!< I2C clock control register high *\/$/;"	m	struct:I2C_struct
CCRL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCRL;   \/*!< I2C clock control register low *\/$/;"	m	struct:I2C_struct
CCS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CCS;   \/*!< Comparator Channel Selection   *\/$/;"	m	struct:COMP_struct
CFG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1297;"	d
CFG_GCR_AL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	308;"	d
CFG_GCR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	297;"	d
CFG_GCR_SWD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	307;"	d
CFG_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^CFG_TypeDef;$/;"	t	typeref:struct:CFG_struct
CFG_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct CFG_struct$/;"	s
CKDIVR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CKDIVR;      \/*!< Clock Divider Register *\/$/;"	m	struct:CLK_struct
CLK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1284;"	d
CLK_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1254;"	d
CLK_CCOCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_clk.c	/^void CLK_CCOCmd(FunctionalState NewState)$/;"	f
CLK_CCOConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_clk.c	/^void CLK_CCOConfig(CLK_Output_TypeDef CLK_Output)$/;"	f
CLK_CCOR_CCOEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	360;"	d
CLK_CCOR_CCOSEL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	359;"	d
CLK_CCOR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	339;"	d
CLK_CKDIVR_HSIDIV	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	348;"	d
CLK_CKDIVR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	337;"	d
CLK_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_clk.c	/^void CLK_DeInit(void)$/;"	f
CLK_GetClockFreq	./STM8L10x_StdPeriph_Driver/src/stm8l10x_clk.c	/^uint32_t CLK_GetClockFreq(void)$/;"	f
CLK_MasterPrescalerConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_clk.c	/^void CLK_MasterPrescalerConfig(CLK_MasterPrescaler_TypeDef CLK_MasterPrescaler)$/;"	f
CLK_MasterPrescaler_HSIDiv1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_MasterPrescaler_HSIDiv1   = (uint8_t)0x00,  \/*!< High speed internal clock prescaler: 1 *\/$/;"	e	enum:__anon103
CLK_MasterPrescaler_HSIDiv2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_MasterPrescaler_HSIDiv2   = (uint8_t)0x01,  \/*!< High speed internal clock prescaler: 2 *\/$/;"	e	enum:__anon103
CLK_MasterPrescaler_HSIDiv4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_MasterPrescaler_HSIDiv4   = (uint8_t)0x02,  \/*!< High speed internal clock prescaler: 4 *\/$/;"	e	enum:__anon103
CLK_MasterPrescaler_HSIDiv8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_MasterPrescaler_HSIDiv8   = (uint8_t)0x03  \/*!< High speed internal clock prescaler: 8 *\/$/;"	e	enum:__anon103
CLK_MasterPrescaler_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^} CLK_MasterPrescaler_TypeDef;$/;"	t	typeref:enum:__anon103
CLK_Output_ClockMaster	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Output_ClockMaster          = (uint8_t)0x00, \/*!< Clock Output CKM *\/$/;"	e	enum:__anon101
CLK_Output_ClockMasterDiv16	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Output_ClockMasterDiv16     = (uint8_t)0x06  \/*!< Clock Output CKM\/16 *\/$/;"	e	enum:__anon101
CLK_Output_ClockMasterDiv2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Output_ClockMasterDiv2      = (uint8_t)0x02, \/*!< Clock Output CKM\/2 *\/$/;"	e	enum:__anon101
CLK_Output_ClockMasterDiv4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Output_ClockMasterDiv4      = (uint8_t)0x04, \/*!< Clock Output CKM\/4 *\/$/;"	e	enum:__anon101
CLK_Output_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^} CLK_Output_TypeDef;$/;"	t	typeref:enum:__anon101
CLK_PCKENR_AWU	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	356;"	d
CLK_PCKENR_I2C	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	353;"	d
CLK_PCKENR_PXS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	357;"	d
CLK_PCKENR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	338;"	d
CLK_PCKENR_SPI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	354;"	d
CLK_PCKENR_TIM2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	350;"	d
CLK_PCKENR_TIM3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	351;"	d
CLK_PCKENR_TIM4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	352;"	d
CLK_PCKENR_USART	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	355;"	d
CLK_PeripheralClockConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_clk.c	/^void CLK_PeripheralClockConfig(CLK_Peripheral_TypeDef CLK_Peripheral, FunctionalState NewState)$/;"	f
CLK_Peripheral_AWU	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Peripheral_AWU     = (uint8_t)0x40  \/*!< Peripheral Clock Enable 1, AWU *\/$/;"	e	enum:__anon102
CLK_Peripheral_I2C	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Peripheral_I2C     = (uint8_t)0x08,  \/*!< Peripheral Clock Enable 1, I2C *\/$/;"	e	enum:__anon102
CLK_Peripheral_SPI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Peripheral_SPI     = (uint8_t)0x10,  \/*!< Peripheral Clock Enable 1, SPI *\/$/;"	e	enum:__anon102
CLK_Peripheral_TIM2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Peripheral_TIM2  = (uint8_t)0x01,  \/*!< Peripheral Clock Enable 1, TIM2 *\/$/;"	e	enum:__anon102
CLK_Peripheral_TIM3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Peripheral_TIM3  = (uint8_t)0x02,  \/*!< Peripheral Clock Enable 1, TIM3 *\/$/;"	e	enum:__anon102
CLK_Peripheral_TIM4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Peripheral_TIM4  = (uint8_t)0x04,  \/*!< Peripheral Clock Enable 1, TIM4 *\/$/;"	e	enum:__anon102
CLK_Peripheral_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^} CLK_Peripheral_TypeDef;$/;"	t	typeref:enum:__anon102
CLK_Peripheral_USART	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	/^  CLK_Peripheral_USART   = (uint8_t)0x20,  \/*!< Peripheral Clock Enable 1, USART *\/$/;"	e	enum:__anon102
CLK_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^CLK_TypeDef;$/;"	t	typeref:struct:CLK_struct
CLK_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct CLK_struct$/;"	s
CNTR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CNTR;  \/*!< counter register  *\/$/;"	m	struct:TIM4_struct
CNTRH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CNTRH;  \/*!< counter high       *\/$/;"	m	struct:TIM_struct
CNTRL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CNTRL;  \/*!< counter low       *\/$/;"	m	struct:TIM_struct
COMP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1299;"	d
COMP_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1246;"	d
COMP_CCS_COMP1CH1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	418;"	d
COMP_CCS_COMP1CH2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	417;"	d
COMP_CCS_COMP1CH3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	416;"	d
COMP_CCS_COMP1CH4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	415;"	d
COMP_CCS_COMP2CH1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	414;"	d
COMP_CCS_COMP2CH2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	413;"	d
COMP_CCS_COMP2CH3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	412;"	d
COMP_CCS_COMP2CH4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	411;"	d
COMP_CCS_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	383;"	d
COMP_CR_BIASEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	400;"	d
COMP_CR_CNFTIM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	395;"	d
COMP_CR_COMP1EN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	399;"	d
COMP_CR_COMP2EN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	398;"	d
COMP_CR_COMPREF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	397;"	d
COMP_CR_IC1BK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	394;"	d
COMP_CR_POL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	396;"	d
COMP_CR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	381;"	d
COMP_CSR_CEF1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	406;"	d
COMP_CSR_CEF2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	404;"	d
COMP_CSR_COMP1OUT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	408;"	d
COMP_CSR_COMP2OUT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	407;"	d
COMP_CSR_ITEN1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	405;"	d
COMP_CSR_ITEN2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	403;"	d
COMP_CSR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	382;"	d
COMP_ClearFlag	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_ClearFlag(COMP_FLAG_TypeDef COMP_Flag)$/;"	f
COMP_ClearITPendingBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_ClearITPendingBit(COMP_IT_TypeDef COMP_ITPendingBit)$/;"	f
COMP_Cmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_Cmd(FunctionalState NewState)$/;"	f
COMP_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_DeInit(void)$/;"	f
COMP_FLAG_COMP1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_FLAG_COMP1 = ((uint8_t)0x10),  \/*!< First comparator event flag. *\/$/;"	e	enum:__anon97
COMP_FLAG_COMP2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_FLAG_COMP2 = ((uint8_t)0x40)   \/*!< Second comparator event flag. *\/$/;"	e	enum:__anon97
COMP_FLAG_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^}COMP_FLAG_TypeDef;$/;"	t	typeref:enum:__anon97
COMP_GetFlagStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^FlagStatus COMP_GetFlagStatus(COMP_FLAG_TypeDef COMP_Flag)$/;"	f
COMP_GetITStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^ITStatus COMP_GetITStatus(COMP_IT_TypeDef COMP_ITPendingBit)$/;"	f
COMP_GetOutputStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^FlagStatus COMP_GetOutputStatus(COMP_Output_TypeDef COMP_Output)$/;"	f
COMP_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  COMP_IRQn                     = (uint8_t)18,  \/*!< Comparator interrupt *\/$/;"	e	enum:__anon56
COMP_ITConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_ITConfig(COMP_IT_TypeDef COMP_IT,$/;"	f
COMP_IT_CEF1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_IT_CEF1     = ((uint8_t)0x10), \/*!< First comparator pending bit *\/$/;"	e	enum:__anon96
COMP_IT_CEF2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_IT_CEF2     = ((uint8_t)0x40)  \/*!< Second comparator pending bit *\/$/;"	e	enum:__anon96
COMP_IT_ITEN1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_IT_ITEN1    = ((uint8_t)0x20), \/*!< First comparator interrupt enable *\/$/;"	e	enum:__anon96
COMP_IT_ITEN2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_IT_ITEN2    = ((uint8_t)0x80), \/*!< Second comparator interrupt enable *\/$/;"	e	enum:__anon96
COMP_IT_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^}COMP_IT_TypeDef;$/;"	t	typeref:enum:__anon96
COMP_Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_Init(COMP_Selection_TypeDef COMP_Selection,$/;"	f
COMP_Output_COMP1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Output_COMP1 = ((uint8_t)0x01),  \/*!< First comparator output. *\/$/;"	e	enum:__anon98
COMP_Output_COMP2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Output_COMP2 = ((uint8_t)0x02)   \/*!< Second comparator output. *\/$/;"	e	enum:__anon98
COMP_Output_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^}COMP_Output_TypeDef;$/;"	t	typeref:enum:__anon98
COMP_Polarity_High	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Polarity_High  = ((uint8_t)0x00), \/*!< For a detected event, output comparator is 1 *\/$/;"	e	enum:__anon94
COMP_Polarity_Low	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Polarity_Low     = ((uint8_t)0x10)  \/*!< For a detected event, output comparator is 0 *\/$/;"	e	enum:__anon94
COMP_Polarity_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^}COMP_Polarity_TypeDef;$/;"	t	typeref:enum:__anon94
COMP_Reference_External	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Reference_External = ((uint8_t)0x08)  \/*!< Comparator reference is external *\/$/;"	e	enum:__anon95
COMP_Reference_Internal	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Reference_Internal = ((uint8_t)0x00), \/*!< Comparator reference is internal *\/$/;"	e	enum:__anon95
COMP_Reference_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^}COMP_Reference_TypeDef;$/;"	t	typeref:enum:__anon95
COMP_SelectPolarity	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_SelectPolarity(COMP_Polarity_TypeDef COMP_Polarity)$/;"	f
COMP_SelectionConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_SelectionConfig(COMP_Selection_TypeDef COMP_Selection,$/;"	f
COMP_Selection_All	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Selection_All     = ((uint8_t)0x06)  \/*!< Both comparator enable. *\/$/;"	e	enum:__anon93
COMP_Selection_COMP1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Selection_COMP1   = ((uint8_t)0x02), \/*!< First comparator enable.*\/$/;"	e	enum:__anon93
COMP_Selection_COMP2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Selection_COMP2   = ((uint8_t)0x04), \/*!< Second comparator enable. *\/$/;"	e	enum:__anon93
COMP_Selection_None	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Selection_None    = ((uint8_t)0x00), \/*!< None comparator enable. *\/$/;"	e	enum:__anon93
COMP_Selection_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^}COMP_Selection_TypeDef;$/;"	t	typeref:enum:__anon93
COMP_SetReference	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_SetReference(COMP_Reference_TypeDef COMP_Reference)$/;"	f
COMP_SwitchConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_SwitchConfig(COMP_Switch_TypeDef COMP_Switch,$/;"	f
COMP_Switch_COMP1Ch1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Switch_COMP1Ch1   = ((uint8_t)0x01), \/*!< Comparator 1 Switch 1 Enable. *\/$/;"	e	enum:__anon100
COMP_Switch_COMP1Ch2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Switch_COMP1Ch2   = ((uint8_t)0x02), \/*!< Comparator 1 Switch 2 Enable. *\/$/;"	e	enum:__anon100
COMP_Switch_COMP1Ch3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Switch_COMP1Ch3   = ((uint8_t)0x04), \/*!< Comparator 1 Switch 3 Enable. *\/$/;"	e	enum:__anon100
COMP_Switch_COMP1Ch4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Switch_COMP1Ch4   = ((uint8_t)0x08), \/*!< Comparator 1 Switch 4 Enable. *\/$/;"	e	enum:__anon100
COMP_Switch_COMP2Ch1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Switch_COMP2Ch1   = ((uint8_t)0x10), \/*!< Comparator 2 Switch 1 Enable. *\/$/;"	e	enum:__anon100
COMP_Switch_COMP2Ch2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Switch_COMP2Ch2   = ((uint8_t)0x20), \/*!< Comparator 2 Switch 2 Enable. *\/$/;"	e	enum:__anon100
COMP_Switch_COMP2Ch3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Switch_COMP2Ch3   = ((uint8_t)0x40), \/*!< Comparator 2 Switch 3 Enable. *\/$/;"	e	enum:__anon100
COMP_Switch_COMP2Ch4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_Switch_COMP2Ch4   = ((uint8_t)0x80)  \/*!< Comparator 2 Switch 4 Enable. *\/$/;"	e	enum:__anon100
COMP_Switch_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^}COMP_Switch_TypeDef;$/;"	t	typeref:enum:__anon100
COMP_TIM2Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_TIM2Config(COMP_TIM2Config_TypeDef COMP_TIM2Config)$/;"	f
COMP_TIM2Config_BK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_TIM2Config_BK = ((uint8_t)0x80)  \/*!<  Break selection *\/$/;"	e	enum:__anon92
COMP_TIM2Config_IC1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_TIM2Config_IC1 = ((uint8_t)0x00), \/*!< Input capture 1 selection. *\/$/;"	e	enum:__anon92
COMP_TIM2Config_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^}COMP_TIM2Config_TypeDef;$/;"	t	typeref:enum:__anon92
COMP_TIMConnect	./STM8L10x_StdPeriph_Driver/src/stm8l10x_comp.c	/^void COMP_TIMConnect(COMP_TimersConnection_TypeDef COMP_TIMConnection)$/;"	f
COMP_TimersConnection_COMP1ToTIM2IC1BK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_TimersConnection_COMP1ToTIM2IC1BK                 = ((uint8_t)0x20), \/*!< Comparator 1 sent to Input capture 1\/ Break TIM2 *\/$/;"	e	enum:__anon99
COMP_TimersConnection_COMP1ToTIM2IC1BK_COMP2ToTIM2IC2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_TimersConnection_COMP1ToTIM2IC1BK_COMP2ToTIM2IC2  = ((uint8_t)0x40), \/*!< Comparator 1 sent to Input capture 1\/ Break TIM2 and comparator 2 sent to Input capture 2 TIM2 *\/$/;"	e	enum:__anon99
COMP_TimersConnection_COMP1ToTIM2IC1BK_COMP2ToTIM3IC2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_TimersConnection_COMP1ToTIM2IC1BK_COMP2ToTIM3IC2  = ((uint8_t)0x60)  \/*!< Comparator 1 sent to Input capture 1\/ Break TIM2 and comparator 2 sent to Input capture 1 TIM3 *\/$/;"	e	enum:__anon99
COMP_TimersConnection_None	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^  COMP_TimersConnection_None                             = ((uint8_t)0x00), \/*!< No connection *\/$/;"	e	enum:__anon99
COMP_TimersConnection_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	/^}COMP_TimersConnection_TypeDef;$/;"	t	typeref:enum:__anon99
COMP_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^COMP_TypeDef;$/;"	t	typeref:struct:COMP_struct
COMP_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct COMP_struct$/;"	s
CONF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CONF; \/*!<  Port interrupt selector *\/$/;"	m	struct:EXTI_struct
CONST	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	59;"	d
CONST	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	65;"	d
CONST	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	72;"	d
CPU_SOFT_INT_DISABLED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	91;"	d
CR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR;    \/*!< Control register  *\/$/;"	m	struct:COMP_struct
CR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR;  \/*!< Multiplex Reset Pad *\/$/;"	m	struct:RST_struct
CR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR; \/*!< control register *\/$/;"	m	struct:IRTIM_struct
CR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR1;        \/*!< Flash control register 1 *\/$/;"	m	struct:FLASH_struct
CR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR1;    \/*!< I2C control register 1 *\/$/;"	m	struct:I2C_struct
CR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR1;    \/*!< SPI control register 1 *\/$/;"	m	struct:SPI_struct
CR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR1;   \/*!<  Wait for event control register 1 *\/$/;"	m	struct:WFE_struct
CR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR1;  \/*!<  The four LSB EXTI  pin sensitivity *\/$/;"	m	struct:EXTI_struct
CR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR1;  \/*!<  USART control register 1     *\/$/;"	m	struct:USART_struct
CR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR1;  \/*!< control register 1   *\/$/;"	m	struct:TIM_struct
CR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR1;  \/*!< control register 1 *\/$/;"	m	struct:TIM4_struct
CR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR1; \/*!< Configuration Register 1 *\/$/;"	m	struct:GPIO_struct
CR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR2;        \/*!< Flash control register 2 *\/$/;"	m	struct:FLASH_struct
CR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR2;    \/*!< I2C control register 2 *\/$/;"	m	struct:I2C_struct
CR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR2;    \/*!< SPI control register 2 *\/$/;"	m	struct:SPI_struct
CR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR2;   \/*!<  Wait for event control register 2 *\/$/;"	m	struct:WFE_struct
CR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR2;  \/*!<  The four MSB EXTI  pin sensitivity *\/$/;"	m	struct:EXTI_struct
CR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR2;  \/*!<  USART control register 2     *\/$/;"	m	struct:USART_struct
CR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR2;  \/*!< control register 2   *\/$/;"	m	struct:TIM_struct
CR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR2;  \/*!< control register 2 *\/$/;"	m	struct:TIM4_struct
CR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR2; \/*!< Configuration Register 2 *\/$/;"	m	struct:GPIO_struct
CR3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR3;  \/*!<  EXTI port B & port D sensitivity *\/$/;"	m	struct:EXTI_struct
CR3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR3;  \/*!<  USART control register 3      *\/$/;"	m	struct:USART_struct
CR4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR4;  \/*!< USART control register 4      *\/$/;"	m	struct:USART_struct
CR5	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CR5;  \/*!<  USART control register 5       *\/$/;"	m	struct:USART_struct
CSR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CSR;   \/*!< Control status register   *\/$/;"	m	struct:COMP_struct
CSR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CSR; \/*!< AWU Control status register *\/$/;"	m	struct:AWU_struct
CSR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t CSR; \/*!< BEEP Control status register *\/$/;"	m	struct:BEEP_struct
ChgBit	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1396;"	d
ClrBit	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1394;"	d
DDR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t DDR; \/*!< Data Direction Register *\/$/;"	m	struct:GPIO_struct
DISABLE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {DISABLE = 0, ENABLE = !DISABLE} FunctionalState;$/;"	e	enum:__anon14
DM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1298;"	d
DM_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1270;"	d
DR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t DR;     \/*!< I2C data register *\/$/;"	m	struct:I2C_struct
DR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t DR;     \/*!< SPI data I\/O register *\/$/;"	m	struct:SPI_struct
DR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t DR;  \/*!<  USART data register     *\/$/;"	m	struct:USART_struct
DUKR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t DUKR;       \/*!< Data EEPROM unprotection register *\/$/;"	m	struct:FLASH_struct
EEPROM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	58;"	d
EEPROM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	64;"	d
EEPROM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	71;"	d
EGR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t EGR;  \/*!< event generation register *\/$/;"	m	struct:TIM4_struct
EGR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t EGR;  \/*!< event generation register *\/$/;"	m	struct:TIM_struct
ENABLE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {DISABLE = 0, ENABLE = !DISABLE} FunctionalState;$/;"	e	enum:__anon14
ERROR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {ERROR = 0, SUCCESS = !ERROR} ErrorStatus;$/;"	e	enum:__anon15
ETR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ETR;  \/*!< external trigger register *\/$/;"	m	struct:TIM_struct
EXTI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1282;"	d
EXTI0_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  EXTI0_IRQn                    = (uint8_t)8,   \/*!< PIN0 interrupt  *\/$/;"	e	enum:__anon56
EXTI1_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  EXTI1_IRQn                    = (uint8_t)9,   \/*!< PIN1 interrupt  *\/$/;"	e	enum:__anon56
EXTI2_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  EXTI2_IRQn                    = (uint8_t)10,  \/*!< PIN2 interrupt  *\/$/;"	e	enum:__anon56
EXTI3_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  EXTI3_IRQn                    = (uint8_t)11,  \/*!< PIN3 interrupt  *\/$/;"	e	enum:__anon56
EXTI4_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  EXTI4_IRQn                    = (uint8_t)12,  \/*!< PIN4 interrupt  *\/$/;"	e	enum:__anon56
EXTI5_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  EXTI5_IRQn                    = (uint8_t)13,  \/*!< PIN5 interrupt  *\/$/;"	e	enum:__anon56
EXTI6_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  EXTI6_IRQn                    = (uint8_t)14,  \/*!< PIN6 interrupt  *\/$/;"	e	enum:__anon56
EXTI7_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  EXTI7_IRQn                    = (uint8_t)15,  \/*!< PIN7 interrupt  *\/$/;"	e	enum:__anon56
EXTIB_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  EXTIB_IRQn                    = (uint8_t)6,   \/*!< GPIOB interrupt *\/$/;"	e	enum:__anon56
EXTID_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  EXTID_IRQn                    = (uint8_t)7,   \/*!< GPIOD interrupt *\/$/;"	e	enum:__anon56
EXTI_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1248;"	d
EXTI_CONF_PBH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	476;"	d
EXTI_CONF_PBL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	475;"	d
EXTI_CONF_PDH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	478;"	d
EXTI_CONF_PDL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	477;"	d
EXTI_CONF_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	447;"	d
EXTI_CR1_P0IS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	462;"	d
EXTI_CR1_P1IS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	461;"	d
EXTI_CR1_P2IS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	460;"	d
EXTI_CR1_P3IS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	459;"	d
EXTI_CR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	444;"	d
EXTI_CR2_P4IS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	468;"	d
EXTI_CR2_P5IS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	467;"	d
EXTI_CR2_P6IS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	466;"	d
EXTI_CR2_P7IS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	465;"	d
EXTI_CR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	445;"	d
EXTI_CR3_PBIS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	471;"	d
EXTI_CR3_PDIS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	472;"	d
EXTI_CR3_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	446;"	d
EXTI_ClearITPendingBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_exti.c	/^void EXTI_ClearITPendingBit(EXTI_IT_TypeDef EXTI_IT)$/;"	f
EXTI_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_exti.c	/^void EXTI_DeInit(void)$/;"	f
EXTI_GetHalfPortSelection	./STM8L10x_StdPeriph_Driver/src/stm8l10x_exti.c	/^FunctionalState EXTI_GetHalfPortSelection(EXTI_HalfPort_TypeDef EXTI_HalfPort)$/;"	f
EXTI_GetITStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_exti.c	/^ITStatus EXTI_GetITStatus(EXTI_IT_TypeDef EXTI_IT)$/;"	f
EXTI_GetPinSensitivity	./STM8L10x_StdPeriph_Driver/src/stm8l10x_exti.c	/^EXTI_Trigger_TypeDef EXTI_GetPinSensitivity(EXTI_Pin_TypeDef EXTI_PinNum)$/;"	f
EXTI_GetPortSensitivity	./STM8L10x_StdPeriph_Driver/src/stm8l10x_exti.c	/^EXTI_Trigger_TypeDef EXTI_GetPortSensitivity(EXTI_Port_TypeDef EXTI_Port)$/;"	f
EXTI_HalfPort_B_LSB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_HalfPort_B_LSB  = (uint8_t)0x01, \/*!< Interrupt selector PB(3:0) *\/$/;"	e	enum:__anon88
EXTI_HalfPort_B_MSB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_HalfPort_B_MSB  = (uint8_t)0x02, \/*!< Interrupt selector PB(7:4) *\/$/;"	e	enum:__anon88
EXTI_HalfPort_D_LSB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_HalfPort_D_LSB  = (uint8_t)0x04, \/*!< Interrupt selector PD(3:0) *\/$/;"	e	enum:__anon88
EXTI_HalfPort_D_MSB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_HalfPort_D_MSB  = (uint8_t)0x08  \/*!< Interrupt selector PD(7:4) *\/$/;"	e	enum:__anon88
EXTI_HalfPort_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^} EXTI_HalfPort_TypeDef;$/;"	t	typeref:enum:__anon88
EXTI_IT_Pin0	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_IT_Pin0 = (uint8_t)0x01, \/*!< GPIO Pin pos 0 *\/$/;"	e	enum:__anon91
EXTI_IT_Pin1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_IT_Pin1 = (uint8_t)0x02, \/*!< GPIO Pin pos 1 *\/$/;"	e	enum:__anon91
EXTI_IT_Pin2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_IT_Pin2 = (uint8_t)0x04, \/*!< GPIO Pin pos 2 *\/$/;"	e	enum:__anon91
EXTI_IT_Pin3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_IT_Pin3 = (uint8_t)0x08, \/*!< GPIO Pin pos 3 *\/$/;"	e	enum:__anon91
EXTI_IT_Pin4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_IT_Pin4 = (uint8_t)0x10, \/*!< GPIO Pin pos 4 *\/$/;"	e	enum:__anon91
EXTI_IT_Pin5	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_IT_Pin5 = (uint8_t)0x20, \/*!< GPIO Pin pos 5 *\/$/;"	e	enum:__anon91
EXTI_IT_Pin6	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_IT_Pin6 = (uint8_t)0x40, \/*!< GPIO Pin pos 6 *\/$/;"	e	enum:__anon91
EXTI_IT_Pin7	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_IT_Pin7 = (uint8_t)0x80, \/*!< GPIO Pin pos 7 *\/$/;"	e	enum:__anon91
EXTI_IT_PortB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_IT_PortB   = (uint8_t)0xF1, \/*!< GPIO Port B *\/$/;"	e	enum:__anon91
EXTI_IT_PortD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_IT_PortD   = (uint8_t)0xF2  \/*!< GPIO Port D *\/$/;"	e	enum:__anon91
EXTI_IT_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^} EXTI_IT_TypeDef;$/;"	t	typeref:enum:__anon91
EXTI_Pin_0	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Pin_0 = (uint8_t)0x00, \/*!< GPIO Pin 0 *\/$/;"	e	enum:__anon90
EXTI_Pin_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Pin_1 = (uint8_t)0x02, \/*!< GPIO Pin 1 *\/$/;"	e	enum:__anon90
EXTI_Pin_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Pin_2 = (uint8_t)0x04, \/*!< GPIO Pin 2 *\/$/;"	e	enum:__anon90
EXTI_Pin_3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Pin_3 = (uint8_t)0x06, \/*!< GPIO Pin 3 *\/$/;"	e	enum:__anon90
EXTI_Pin_4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Pin_4 = (uint8_t)0x10, \/*!< GPIO Pin 4 *\/$/;"	e	enum:__anon90
EXTI_Pin_5	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Pin_5 = (uint8_t)0x12, \/*!< GPIO Pin 5 *\/$/;"	e	enum:__anon90
EXTI_Pin_6	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Pin_6 = (uint8_t)0x14, \/*!< GPIO Pin 6 *\/$/;"	e	enum:__anon90
EXTI_Pin_7	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Pin_7 = (uint8_t)0x16  \/*!< GPIO Pin 7 *\/$/;"	e	enum:__anon90
EXTI_Pin_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^} EXTI_Pin_TypeDef;$/;"	t	typeref:enum:__anon90
EXTI_Port_B	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Port_B = (uint8_t)0x00, \/*!< GPIO Port B *\/$/;"	e	enum:__anon89
EXTI_Port_D	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Port_D = (uint8_t)0x02  \/*!< GPIO Port D *\/$/;"	e	enum:__anon89
EXTI_Port_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^} EXTI_Port_TypeDef;$/;"	t	typeref:enum:__anon89
EXTI_SR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	448;"	d
EXTI_SR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	449;"	d
EXTI_SetHalfPortSelection	./STM8L10x_StdPeriph_Driver/src/stm8l10x_exti.c	/^void EXTI_SetHalfPortSelection(EXTI_HalfPort_TypeDef EXTI_HalfPort,$/;"	f
EXTI_SetPinSensitivity	./STM8L10x_StdPeriph_Driver/src/stm8l10x_exti.c	/^void EXTI_SetPinSensitivity(EXTI_Pin_TypeDef EXTI_PinNum,$/;"	f
EXTI_SetPortSensitivity	./STM8L10x_StdPeriph_Driver/src/stm8l10x_exti.c	/^void EXTI_SetPortSensitivity(EXTI_Port_TypeDef EXTI_Port,$/;"	f
EXTI_Trigger_Falling	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Trigger_Falling        = (uint8_t)0x02, \/*!< Interrupt on Falling edge only *\/$/;"	e	enum:__anon87
EXTI_Trigger_Falling_Low	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Trigger_Falling_Low    = (uint8_t)0x00, \/*!< Interrupt on Falling edge and Low level *\/$/;"	e	enum:__anon87
EXTI_Trigger_Rising	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Trigger_Rising         = (uint8_t)0x01, \/*!< Interrupt on Rising edge only *\/$/;"	e	enum:__anon87
EXTI_Trigger_Rising_Falling	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^  EXTI_Trigger_Rising_Falling = (uint8_t)0x03  \/*!< Interrupt on Rising and Falling edges *\/$/;"	e	enum:__anon87
EXTI_Trigger_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	/^} EXTI_Trigger_TypeDef;$/;"	t	typeref:enum:__anon87
EXTI_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^EXTI_TypeDef;$/;"	t	typeref:struct:EXTI_struct
EXTI_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct EXTI_struct$/;"	s
E_AWU_TIMEOUT	./main.c	/^	E_AWU_TIMEOUT	= 0x04,$/;"	e	enum:__anon135	file:
E_KEY	./main.c	/^	E_KEY					= 0x01,$/;"	e	enum:__anon135	file:
E_PIR	./main.c	/^	E_PIR					= 0x02,$/;"	e	enum:__anon135	file:
ErrorStatus	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {ERROR = 0, SUCCESS = !ERROR} ErrorStatus;$/;"	t	typeref:enum:__anon15
FALSE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {FALSE = 0, TRUE = !FALSE} bool;$/;"	e	enum:__anon12
FAR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	55;"	d
FAR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	61;"	d
FAR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	68;"	d
FLAG_Mask	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	87;"	d	file:
FLASH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1281;"	d
FLASH_BLOCK_NUMBER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	49;"	d
FLASH_BLOCK_SIZE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	50;"	d
FLASH_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1236;"	d
FLASH_CLEAR_BYTE	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	115;"	d	file:
FLASH_CR1_FIX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	517;"	d
FLASH_CR1_IE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	516;"	d
FLASH_CR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	502;"	d
FLASH_CR2_ERASE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	520;"	d
FLASH_CR2_FPRG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	521;"	d
FLASH_CR2_PRG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	522;"	d
FLASH_CR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	503;"	d
FLASH_CR2_WPRG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	519;"	d
FLASH_DUKR_DUK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	532;"	d
FLASH_DUKR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	505;"	d
FLASH_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^void FLASH_DeInit(void)$/;"	f
FLASH_END_PHYSICAL_ADDRESS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	48;"	d
FLASH_EraseByte	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^void FLASH_EraseByte(uint16_t Address)$/;"	f
FLASH_FLAG_DUL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_FLAG_DUL       = (uint8_t)0x08,     \/*!< Data EEPROM unlocked flag *\/$/;"	e	enum:__anon25
FLASH_FLAG_EOP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_FLAG_EOP       = (uint8_t)0x04,     \/*!< End of programming (write or erase operation) flag *\/$/;"	e	enum:__anon25
FLASH_FLAG_PUL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_FLAG_PUL       = (uint8_t)0x02,     \/*!< Flash Program memory unlocked flag *\/$/;"	e	enum:__anon25
FLASH_FLAG_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^} FLASH_FLAG_TypeDef;$/;"	t	typeref:enum:__anon25
FLASH_FLAG_WR_PG_DIS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_FLAG_WR_PG_DIS = (uint8_t)0x01      \/*!< Write attempted to protected page flag *\/$/;"	e	enum:__anon25
FLASH_GetBootSize	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^uint16_t FLASH_GetBootSize(void)$/;"	f
FLASH_GetDataSize	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^uint16_t FLASH_GetDataSize(void)$/;"	f
FLASH_GetFlagStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^FlagStatus FLASH_GetFlagStatus(FLASH_FLAG_TypeDef FLASH_FLAG)$/;"	f
FLASH_GetProgrammingTime	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^FLASH_ProgramTime_TypeDef FLASH_GetProgrammingTime(void)$/;"	f
FLASH_GetReadOutProtectionStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^FunctionalState FLASH_GetReadOutProtectionStatus(void)$/;"	f
FLASH_IAPSR_DUL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	525;"	d
FLASH_IAPSR_EOP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	526;"	d
FLASH_IAPSR_HVOFF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	524;"	d
FLASH_IAPSR_PUL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	527;"	d
FLASH_IAPSR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	506;"	d
FLASH_IAPSR_WR_PG_DIS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	528;"	d
FLASH_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  FLASH_IRQn                    = (uint8_t)1,   \/*!< Flash interrupt *\/$/;"	e	enum:__anon56
FLASH_ITConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^void FLASH_ITConfig(FunctionalState NewState)$/;"	f
FLASH_Lock	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^void FLASH_Lock(FLASH_MemType_TypeDef FLASH_MemType)$/;"	f
FLASH_MemType_Data	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_MemType_Data         = (uint8_t)0xF7  \/*!< Data EEPROM memory *\/$/;"	e	enum:__anon21
FLASH_MemType_Program	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_MemType_Program      = (uint8_t)0xFD, \/*!< Program memory *\/$/;"	e	enum:__anon21
FLASH_MemType_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^} FLASH_MemType_TypeDef;$/;"	t	typeref:enum:__anon21
FLASH_PUKR_PUK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	530;"	d
FLASH_PUKR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	504;"	d
FLASH_ProgramByte	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^void FLASH_ProgramByte(uint16_t Address, uint8_t Data)$/;"	f
FLASH_ProgramMode_Fast	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_ProgramMode_Fast     = (uint8_t)0x10  \/*!< Fast programming mode *\/$/;"	e	enum:__anon22
FLASH_ProgramMode_Standard	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_ProgramMode_Standard = (uint8_t)0x00, \/*!< Standard programming mode *\/$/;"	e	enum:__anon22
FLASH_ProgramMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^} FLASH_ProgramMode_TypeDef;$/;"	t	typeref:enum:__anon22
FLASH_ProgramTime_Standard	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_ProgramTime_Standard = (uint8_t)0x00, \/*!< Standard programming time fixed at 1\/2 tprog *\/$/;"	e	enum:__anon23
FLASH_ProgramTime_TProg	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_ProgramTime_TProg    = (uint8_t)0x01  \/*!< Programming time fixed at tprog *\/$/;"	e	enum:__anon23
FLASH_ProgramTime_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^} FLASH_ProgramTime_TypeDef;$/;"	t	typeref:enum:__anon23
FLASH_ProgramWord	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^void FLASH_ProgramWord(uint16_t Address, uint32_t Data)$/;"	f
FLASH_RASS_KEY1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	52;"	d
FLASH_RASS_KEY2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	53;"	d
FLASH_READOUTPROTECTION_KEY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	54;"	d
FLASH_ReadByte	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^uint8_t FLASH_ReadByte(uint16_t Address)$/;"	f
FLASH_SET_BYTE	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	116;"	d	file:
FLASH_START_PHYSICAL_ADDRESS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	47;"	d
FLASH_SetProgrammingTime	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^void FLASH_SetProgrammingTime(FLASH_ProgramTime_TypeDef FLASH_ProgramTime)$/;"	f
FLASH_Status_Successful_Operation	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_Status_Successful_Operation   = (uint8_t)0x04  \/*!< End of operation flag *\/$/;"	e	enum:__anon24
FLASH_Status_TimeOut	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_Status_TimeOut = (uint8_t)0x02, \/*!< Time out error *\/$/;"	e	enum:__anon24
FLASH_Status_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^} FLASH_Status_TypeDef;$/;"	t	typeref:enum:__anon24
FLASH_Status_Write_Protection_Error	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	/^  FLASH_Status_Write_Protection_Error = (uint8_t)0x01, \/*!< Write attempted to protected Block *\/$/;"	e	enum:__anon24
FLASH_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^FLASH_TypeDef;$/;"	t	typeref:struct:FLASH_struct
FLASH_Unlock	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^void FLASH_Unlock(FLASH_MemType_TypeDef FLASH_MemType)$/;"	f
FLASH_WaitForLastOperation	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^IN_RAM(FLASH_Status_TypeDef FLASH_WaitForLastOperation(void))$/;"	f
FLASH_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct FLASH_struct$/;"	s
FREQR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t FREQR;  \/*!< I2C frequency register *\/$/;"	m	struct:I2C_struct
FlagStatus	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {RESET = 0, SET = !RESET} FlagStatus, ITStatus, BitStatus, BitAction;$/;"	t	typeref:enum:__anon13
FunctionalState	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {DISABLE = 0, ENABLE = !DISABLE} FunctionalState;$/;"	t	typeref:enum:__anon14
GCR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t GCR; \/*!< Global Configuration register *\/$/;"	m	struct:CFG_struct
GPIOA	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1277;"	d
GPIOA_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1231;"	d
GPIOB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1278;"	d
GPIOB_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1232;"	d
GPIOC	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1279;"	d
GPIOC_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1233;"	d
GPIOD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1280;"	d
GPIOD_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1234;"	d
GPIO_CR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	201;"	d
GPIO_CR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	202;"	d
GPIO_DDR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	200;"	d
GPIO_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^void GPIO_DeInit(GPIO_TypeDef* GPIOx)$/;"	f
GPIO_ExternalPullUpConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^void GPIO_ExternalPullUpConfig(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin, FunctionalState NewState)$/;"	f
GPIO_Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^void GPIO_Init(GPIO_TypeDef* GPIOx,$/;"	f
GPIO_Mode_In_FL_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_In_FL_IT         = (uint8_t)0x20,   \/*!< Input floating, external interrupt *\/$/;"	e	enum:__anon18
GPIO_Mode_In_FL_No_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_In_FL_No_IT      = (uint8_t)0x00,   \/*!< Input floating, no external interrupt *\/$/;"	e	enum:__anon18
GPIO_Mode_In_PU_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_In_PU_IT         = (uint8_t)0x60,   \/*!< Input pull-up, external interrupt *\/$/;"	e	enum:__anon18
GPIO_Mode_In_PU_No_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_In_PU_No_IT      = (uint8_t)0x40,   \/*!< Input pull-up, no external interrupt *\/$/;"	e	enum:__anon18
GPIO_Mode_Out_OD_HiZ_Fast	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_Out_OD_HiZ_Fast  = (uint8_t)0xB0,   \/*!< Output open-drain, high-impedance level, 10MHz *\/$/;"	e	enum:__anon18
GPIO_Mode_Out_OD_HiZ_Slow	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_Out_OD_HiZ_Slow  = (uint8_t)0x90,   \/*!< Output open-drain, high-impedance level, 2MHz *\/$/;"	e	enum:__anon18
GPIO_Mode_Out_OD_Low_Fast	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_Out_OD_Low_Fast  = (uint8_t)0xA0,   \/*!< Output open-drain, low level, 10MHz *\/$/;"	e	enum:__anon18
GPIO_Mode_Out_OD_Low_Slow	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_Out_OD_Low_Slow  = (uint8_t)0x80,   \/*!< Output open-drain, low level, 2MHz *\/$/;"	e	enum:__anon18
GPIO_Mode_Out_PP_High_Fast	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_Out_PP_High_Fast = (uint8_t)0xF0,   \/*!< Output push-pull, high level, 10MHz *\/$/;"	e	enum:__anon18
GPIO_Mode_Out_PP_High_Slow	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_Out_PP_High_Slow = (uint8_t)0xD0    \/*!< Output push-pull, high level, 2MHz *\/$/;"	e	enum:__anon18
GPIO_Mode_Out_PP_Low_Fast	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_Out_PP_Low_Fast  = (uint8_t)0xE0,   \/*!< Output push-pull, low level, 10MHz *\/$/;"	e	enum:__anon18
GPIO_Mode_Out_PP_Low_Slow	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Mode_Out_PP_Low_Slow  = (uint8_t)0xC0,   \/*!< Output push-pull, low level, 2MHz *\/$/;"	e	enum:__anon18
GPIO_Mode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^}GPIO_Mode_TypeDef;$/;"	t	typeref:enum:__anon18
GPIO_ODR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	199;"	d
GPIO_Pin_0	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_0    = ((uint8_t)0x01),  \/*!< Pin 0 selected *\/$/;"	e	enum:__anon19
GPIO_Pin_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_1    = ((uint8_t)0x02),  \/*!< Pin 1 selected *\/$/;"	e	enum:__anon19
GPIO_Pin_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_2    = ((uint8_t)0x04),  \/*!< Pin 2 selected *\/$/;"	e	enum:__anon19
GPIO_Pin_3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_3    = ((uint8_t)0x08),   \/*!< Pin 3 selected *\/$/;"	e	enum:__anon19
GPIO_Pin_4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_4    = ((uint8_t)0x10),  \/*!< Pin 4 selected *\/$/;"	e	enum:__anon19
GPIO_Pin_5	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_5    = ((uint8_t)0x20),  \/*!< Pin 5 selected *\/$/;"	e	enum:__anon19
GPIO_Pin_6	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_6    = ((uint8_t)0x40),  \/*!< Pin 6 selected *\/$/;"	e	enum:__anon19
GPIO_Pin_7	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_7    = ((uint8_t)0x80),  \/*!< Pin 7 selected *\/$/;"	e	enum:__anon19
GPIO_Pin_All	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_All  = ((uint8_t)0xFF)   \/*!< All pins selected *\/$/;"	e	enum:__anon19
GPIO_Pin_HNib	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_HNib = ((uint8_t)0xF0),  \/*!< High nibble pins selected *\/$/;"	e	enum:__anon19
GPIO_Pin_LNib	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^  GPIO_Pin_LNib = ((uint8_t)0x0F),  \/*!< Low nibble pins selected *\/$/;"	e	enum:__anon19
GPIO_Pin_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	/^}GPIO_Pin_TypeDef;$/;"	t	typeref:enum:__anon19
GPIO_ReadInputData	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^uint8_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)$/;"	f
GPIO_ReadInputDataBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^BitStatus GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin)$/;"	f
GPIO_ReadOutputData	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^uint8_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)$/;"	f
GPIO_ReadOutputDataBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^BitStatus GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin)$/;"	f
GPIO_ResetBits	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)$/;"	f
GPIO_SetBits	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)$/;"	f
GPIO_ToggleBits	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)$/;"	f
GPIO_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^GPIO_TypeDef;$/;"	t	typeref:struct:GPIO_struct
GPIO_Write	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^void GPIO_Write(GPIO_TypeDef* GPIOx, uint8_t GPIO_PortVal)$/;"	f
GPIO_WriteBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c	/^void GPIO_WriteBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin, BitAction GPIO_BitVal)$/;"	f
GPIO_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct GPIO_struct$/;"	s
GTR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t GTR;  \/*!<  USART guard time register     *\/$/;"	m	struct:USART_struct
HAS_PERSON_TO_NO_PERSON_TIME	./main.c	10;"	d	file:
HAS_PERSON_TO_NO_PERSON_TIME	./main.c	14;"	d	file:
HSIDivFactor	./STM8L10x_StdPeriph_Driver/src/stm8l10x_clk.c	/^CONST uint8_t HSIDivFactor[4] = {1, 2, 4, 8}; \/*!< Holds the different HSI Dividor factors *\/$/;"	v
HSI_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	86;"	d
History	./STM8L10x_StdPeriph_Driver/Release_Notes.html	/^    <h2 style="background: rgb(51, 102, 255) none repeat scroll 0% 50%; -moz-background-clip: initial; -moz-background-origin: initial; -moz-background-inline-policy: initial;"><a name="History"><\/a><span style="font-size: 12pt; color: white;">Update History<o:p><\/o:p><\/span><\/h2>$/;"	a
I2C	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1290;"	d
I2C_AckPositionConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_AckPositionConfig(I2C_AckPosition_TypeDef I2C_AckPosition)$/;"	f
I2C_AckPosition_Current	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_AckPosition_Current = (uint8_t)0x00,   \/*!< Acknowledge on the current byte *\/$/;"	e	enum:__anon28
I2C_AckPosition_Next	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_AckPosition_Next    = (uint8_t)0x08    \/*!< Acknowledge on the next byte *\/$/;"	e	enum:__anon28
I2C_AckPosition_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^} I2C_AckPosition_TypeDef;$/;"	t	typeref:enum:__anon28
I2C_Ack_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_Ack_Disable = (uint8_t)0x00,  \/*!< No acknowledge *\/$/;"	e	enum:__anon27
I2C_Ack_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_Ack_Enable  = (uint8_t)0x04   \/*!< Acknowledge Enabled *\/$/;"	e	enum:__anon27
I2C_Ack_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^} I2C_Ack_TypeDef;$/;"	t	typeref:enum:__anon27
I2C_AcknowledgeConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_AcknowledgeConfig(FunctionalState NewState)$/;"	f
I2C_AcknowledgedAddress_10bit	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_AcknowledgedAddress_10bit = (uint8_t)0x80   \/*!< 10-bit slave address (7-bit address not acknowledged) *\/$/;"	e	enum:__anon29
I2C_AcknowledgedAddress_7bit	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_AcknowledgedAddress_7bit  = (uint8_t)0x00,  \/*!< 7-bit slave address (10-bit address not acknowledged) *\/$/;"	e	enum:__anon29
I2C_AcknowledgedAddress_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^} I2C_AcknowledgedAddress_TypeDef;$/;"	t	typeref:enum:__anon29
I2C_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1264;"	d
I2C_CCRH_CCR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	635;"	d
I2C_CCRH_DUTY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	634;"	d
I2C_CCRH_FS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	633;"	d
I2C_CCRH_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	576;"	d
I2C_CCRL_CCR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	631;"	d
I2C_CCRL_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	575;"	d
I2C_CR1_ENGC	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	588;"	d
I2C_CR1_NOSTRETCH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	587;"	d
I2C_CR1_PE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	589;"	d
I2C_CR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	565;"	d
I2C_CR2_ACK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	593;"	d
I2C_CR2_POS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	592;"	d
I2C_CR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	566;"	d
I2C_CR2_START	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	595;"	d
I2C_CR2_STOP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	594;"	d
I2C_CR2_SWRST	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	591;"	d
I2C_CheckEvent	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^ErrorStatus I2C_CheckEvent(I2C_Event_TypeDef I2C_Event)$/;"	f
I2C_ClearFlag	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_ClearFlag(I2C_FLAG_TypeDef I2C_FLAG)$/;"	f
I2C_ClearITPendingBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_ClearITPendingBit(I2C_IT_TypeDef I2C_IT)$/;"	f
I2C_Cmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_Cmd(FunctionalState NewState)$/;"	f
I2C_DR_DR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	606;"	d
I2C_DR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	570;"	d
I2C_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_DeInit(void)$/;"	f
I2C_Direction_Receiver	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_Direction_Receiver    = (uint8_t)0x01   \/*!< Reception direction *\/$/;"	e	enum:__anon30
I2C_Direction_Transmitter	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_Direction_Transmitter = (uint8_t)0x00,  \/*!< Transmission direction *\/$/;"	e	enum:__anon30
I2C_Direction_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^} I2C_Direction_TypeDef;$/;"	t	typeref:enum:__anon30
I2C_DutyCycle_16_9	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_DutyCycle_16_9 = (uint8_t)0x40   \/*!< Fast mode Tlow\/Thigh = 16\/9 *\/$/;"	e	enum:__anon26
I2C_DutyCycle_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_DutyCycle_2    = (uint8_t)0x00,  \/*!< Fast mode Tlow\/THigh = 2 *\/$/;"	e	enum:__anon26
I2C_DutyCycle_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^} I2C_DutyCycle_TypeDef;$/;"	t	typeref:enum:__anon26
I2C_EVENT_MASTER_BYTE_RECEIVED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_MASTER_BYTE_RECEIVED             = (uint16_t)0x0340,  \/*!< BUSY, MSL and RXNE flags *\/$/;"	e	enum:__anon33
I2C_EVENT_MASTER_BYTE_TRANSMITTED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_MASTER_BYTE_TRANSMITTED          = (uint16_t)0x0784,  \/*!< TRA, BUSY, MSL, TXE and BTF flags *\/$/;"	e	enum:__anon33
I2C_EVENT_MASTER_BYTE_TRANSMITTING	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_MASTER_BYTE_TRANSMITTING         = (uint16_t)0x0780,  \/*!< TRA, BUSY, MSL, TXE flags *\/$/;"	e	enum:__anon33
I2C_EVENT_MASTER_MODE_ADDRESS10	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_MASTER_MODE_ADDRESS10            = (uint16_t)0x0308,  \/*!< BUSY, MSL and ADD10 flags *\/$/;"	e	enum:__anon33
I2C_EVENT_MASTER_MODE_SELECT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_MASTER_MODE_SELECT               = (uint16_t)0x0301,  \/*!< BUSY, MSL and SB flag *\/$/;"	e	enum:__anon33
I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED    = (uint16_t)0x0302,  \/*!< BUSY, MSL and ADDR flags *\/$/;"	e	enum:__anon33
I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED = (uint16_t)0x0782,  \/*!< BUSY, MSL, ADDR, TXE and TRA flags *\/$/;"	e	enum:__anon33
I2C_EVENT_SLAVE_ACK_FAILURE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_SLAVE_ACK_FAILURE                = (uint16_t)0x0004  \/*!< AF flag *\/$/;"	e	enum:__anon33
I2C_EVENT_SLAVE_BYTE_RECEIVED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_SLAVE_BYTE_RECEIVED              = (uint16_t)0x0240,  \/*!< BUSY and RXNE flags *\/$/;"	e	enum:__anon33
I2C_EVENT_SLAVE_BYTE_TRANSMITTED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_SLAVE_BYTE_TRANSMITTED           = (uint16_t)0x0684,  \/*!< TRA, BUSY, TXE and BTF flags *\/$/;"	e	enum:__anon33
I2C_EVENT_SLAVE_BYTE_TRANSMITTING	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_SLAVE_BYTE_TRANSMITTING          = (uint16_t)0x0680,  \/*!< TRA, BUSY and TXE flags *\/$/;"	e	enum:__anon33
I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED  = (uint16_t)0x1200,  \/*!< EV2: GENCALL and BUSY flags *\/$/;"	e	enum:__anon33
I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED    = (uint16_t)0x0202,  \/*!< BUSY and ADDR flags *\/$/;"	e	enum:__anon33
I2C_EVENT_SLAVE_STOP_DETECTED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_SLAVE_STOP_DETECTED              = (uint16_t)0x0010,  \/*!< STOPF flag *\/$/;"	e	enum:__anon33
I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED = (uint16_t)0x0682,  \/*!< TRA, BUSY, TXE and ADDR flags *\/$/;"	e	enum:__anon33
I2C_Event_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^} I2C_Event_TypeDef;$/;"	t	typeref:enum:__anon33
I2C_FLAG_ADD10	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_ADD10    = (uint16_t)0x0108,  \/*!< 10-bit Header sent flag *\/$/;"	e	enum:__anon31
I2C_FLAG_ADDR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_ADDR     = (uint16_t)0x0102,  \/*!< Address Sent\/Matched (master\/slave) flag *\/$/;"	e	enum:__anon31
I2C_FLAG_AF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_AF       = (uint16_t)0x0204,  \/*!< Acknowledge Failure Flag *\/$/;"	e	enum:__anon31
I2C_FLAG_ARLO	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_ARLO     = (uint16_t)0x0202,  \/*!< Arbitration Loss Flag *\/$/;"	e	enum:__anon31
I2C_FLAG_BERR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_BERR     = (uint16_t)0x0201,  \/*!< Misplaced Start or Stop condition *\/$/;"	e	enum:__anon31
I2C_FLAG_BTF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_BTF      = (uint16_t)0x0104,  \/*!< Data Byte Transfer Finished flag *\/$/;"	e	enum:__anon31
I2C_FLAG_BUSY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_BUSY     = (uint16_t)0x0302,  \/*!< Bus Busy Flag *\/$/;"	e	enum:__anon31
I2C_FLAG_GENCALL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_GENCALL  = (uint16_t)0x0310,  \/*!< General Call header received Flag *\/$/;"	e	enum:__anon31
I2C_FLAG_MSL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_MSL      = (uint16_t)0x0301   \/*!< Master Slave Flag *\/$/;"	e	enum:__anon31
I2C_FLAG_OVR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_OVR      = (uint16_t)0x0208,  \/*!< Overrun\/Underrun flag *\/$/;"	e	enum:__anon31
I2C_FLAG_RXNE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_RXNE     = (uint16_t)0x0140,  \/*!< Read Data Register Not Empty flag *\/$/;"	e	enum:__anon31
I2C_FLAG_SB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_SB       = (uint16_t)0x0101,  \/*!< Start bit sent flag *\/$/;"	e	enum:__anon31
I2C_FLAG_STOPF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_STOPF    = (uint16_t)0x0110,  \/*!< Stop detected flag *\/$/;"	e	enum:__anon31
I2C_FLAG_TRA	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_TRA      = (uint16_t)0x0304,  \/*!< Transmitter Receiver Flag *\/$/;"	e	enum:__anon31
I2C_FLAG_TXE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_TXE      = (uint16_t)0x0180,  \/*!< Transmit Data Register Empty flag *\/$/;"	e	enum:__anon31
I2C_FLAG_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^} I2C_FLAG_TypeDef;$/;"	t	typeref:enum:__anon31
I2C_FLAG_WUFH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_FLAG_WUFH     = (uint16_t)0x0220,  \/*!< Wake Up From Halt Flag *\/$/;"	e	enum:__anon31
I2C_FREQR_FREQ	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	597;"	d
I2C_FREQR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	567;"	d
I2C_FastModeDutyCycleConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_FastModeDutyCycleConfig(I2C_DutyCycle_TypeDef I2C_DutyCycle)$/;"	f
I2C_GeneralCallCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_GeneralCallCmd(FunctionalState NewState)$/;"	f
I2C_GenerateSTART	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_GenerateSTART(FunctionalState NewState)$/;"	f
I2C_GenerateSTOP	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_GenerateSTOP(FunctionalState NewState)$/;"	f
I2C_GetFlagStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^FlagStatus I2C_GetFlagStatus(I2C_FLAG_TypeDef I2C_FLAG)$/;"	f
I2C_GetITStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^ITStatus I2C_GetITStatus(I2C_IT_TypeDef I2C_IT)$/;"	f
I2C_GetLastEvent	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^I2C_Event_TypeDef I2C_GetLastEvent(void)$/;"	f
I2C_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  I2C_IRQn                      = (uint8_t)29   \/*!< I2C RX interrupt *\/$/;"	e	enum:__anon56
I2C_ITConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_ITConfig(I2C_IT_TypeDef I2C_IT, FunctionalState NewState)$/;"	f
I2C_ITR_ITBUFEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	627;"	d
I2C_ITR_ITERREN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	629;"	d
I2C_ITR_ITEVTEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	628;"	d
I2C_ITR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	574;"	d
I2C_IT_ADD10	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_ADD10           = (uint16_t)0x1208,  \/*!< 10-bit Header sent *\/$/;"	e	enum:__anon32
I2C_IT_ADDR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_ADDR            = (uint16_t)0x1202,  \/*!< Address Sent\/Matched (master\/slave)  *\/$/;"	e	enum:__anon32
I2C_IT_AF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_AF              = (uint16_t)0x2104,  \/*!< Acknowledge Failure  *\/$/;"	e	enum:__anon32
I2C_IT_ARLO	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_ARLO            = (uint16_t)0x2102,  \/*!< Arbitration Loss  *\/$/;"	e	enum:__anon32
I2C_IT_BERR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_BERR            = (uint16_t)0x2101   \/*!< Misplaced Start or Stop condition *\/$/;"	e	enum:__anon32
I2C_IT_BTF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_BTF             = (uint16_t)0x1204,  \/*!< Data Byte Transfer Finished  *\/$/;"	e	enum:__anon32
I2C_IT_BUF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_BUF             = (uint16_t)0x0004,  \/*!< Buffer Interruption *\/$/;"	e	enum:__anon32
I2C_IT_ERR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_ERR             = (uint16_t)0x0001,  \/*!< Error Interruption *\/$/;"	e	enum:__anon32
I2C_IT_EVT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_EVT             = (uint16_t)0x0002,  \/*!< Event Interruption *\/$/;"	e	enum:__anon32
I2C_IT_OVR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_OVR             = (uint16_t)0x2108,  \/*!< Overrun\/Underrun  *\/$/;"	e	enum:__anon32
I2C_IT_RXNE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_RXNE            = (uint16_t)0x1640,  \/*!< Read Data Register Not Empty  *\/$/;"	e	enum:__anon32
I2C_IT_SB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_SB              = (uint16_t)0x1201,  \/*!< Start bit sent  *\/$/;"	e	enum:__anon32
I2C_IT_STOPF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_STOPF           = (uint16_t)0x1210,  \/*!< Stop detected  *\/$/;"	e	enum:__anon32
I2C_IT_TXE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_TXE             = (uint16_t)0x1680,  \/*!< Transmit Data Register Empty  *\/$/;"	e	enum:__anon32
I2C_IT_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^} I2C_IT_TypeDef;$/;"	t	typeref:enum:__anon32
I2C_IT_WUFH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	/^  I2C_IT_WUFH            = (uint16_t)0x2220,  \/*!< Wake Up From Halt  *\/$/;"	e	enum:__anon32
I2C_Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_Init(uint32_t OutputClockFrequency, uint16_t OwnAddress,$/;"	f
I2C_MAX_FAST_FREQ	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	375;"	d
I2C_MAX_INPUT_FREQ	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	376;"	d
I2C_MAX_STANDARD_FREQ	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	374;"	d
I2C_OARH_ADD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	604;"	d
I2C_OARH_ADDCONF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	603;"	d
I2C_OARH_ADDMODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	602;"	d
I2C_OARH_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	569;"	d
I2C_OARL_ADD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	599;"	d
I2C_OARL_ADD0	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	600;"	d
I2C_OARL_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	568;"	d
I2C_ReceiveData	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^uint8_t I2C_ReceiveData(void)$/;"	f
I2C_SR1_ADD10	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	611;"	d
I2C_SR1_ADDR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	613;"	d
I2C_SR1_BTF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	612;"	d
I2C_SR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	571;"	d
I2C_SR1_RXNE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	609;"	d
I2C_SR1_SB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	614;"	d
I2C_SR1_STOPF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	610;"	d
I2C_SR1_TXE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	608;"	d
I2C_SR2_AF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	618;"	d
I2C_SR2_ARLO	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	619;"	d
I2C_SR2_BERR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	620;"	d
I2C_SR2_OVR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	617;"	d
I2C_SR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	572;"	d
I2C_SR2_WUFH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	616;"	d
I2C_SR3_BUSY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	624;"	d
I2C_SR3_GENCALL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	622;"	d
I2C_SR3_MSL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	625;"	d
I2C_SR3_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	573;"	d
I2C_SR3_TRA	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	623;"	d
I2C_Send7bitAddress	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_Send7bitAddress(uint8_t Address, I2C_Direction_TypeDef I2C_Direction)$/;"	f
I2C_SendData	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_SendData(uint8_t Data)$/;"	f
I2C_SoftwareResetCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_SoftwareResetCmd(FunctionalState NewState)$/;"	f
I2C_StretchClockCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	/^void I2C_StretchClockCmd(FunctionalState NewState)$/;"	f
I2C_TRISER_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	577;"	d
I2C_TRISER_TRISE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	637;"	d
I2C_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^I2C_TypeDef;$/;"	t	typeref:struct:I2C_struct
I2C_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct I2C_struct$/;"	s
IAPSR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t IAPSR;      \/*!< Flash in-application programming status register *\/$/;"	m	struct:FLASH_struct
ICR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ICR;    \/*!< SPI interrupt control register *\/$/;"	m	struct:SPI_struct
IDR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t IDR; \/*!< Input Data Register *\/$/;"	m	struct:GPIO_struct
IER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t IER;  \/*!< interrupt enable register  *\/$/;"	m	struct:TIM4_struct
IER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t IER;  \/*!< interrupt enable register*\/$/;"	m	struct:TIM_struct
INTERRUPT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1371;"	d
INTERRUPT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1375;"	d
INTERRUPT_HANDLER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1348;"	d
INTERRUPT_HANDLER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1353;"	d
INTERRUPT_HANDLER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1360;"	d
INTERRUPT_HANDLER_TRAP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1349;"	d
INTERRUPT_HANDLER_TRAP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1354;"	d
INTERRUPT_HANDLER_TRAP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1363;"	d
INTERRUPT_HANDLER_TRAP	./stm8l10x_it.c	/^INTERRUPT_HANDLER_TRAP(TRAP_IRQHandler)$/;"	f
IN_RAM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	90;"	d
IN_RAM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	92;"	d
IN_RAM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	94;"	d
IN_RAM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	97;"	d
IN_RAM	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^IN_RAM(void FLASH_EraseBlock(uint8_t BlockNum))$/;"	f
IN_RAM	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	/^IN_RAM(void FLASH_ProgramBlock(uint8_t BlockNum, FLASH_ProgramMode_TypeDef FLASH_ProgramMode, uint8_t *Buffer))$/;"	f
IRQn_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^}IRQn_TypeDef;$/;"	t	typeref:enum:__anon56
IRTIM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1295;"	d
IRTIM_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1244;"	d
IRTIM_CR_EN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	667;"	d
IRTIM_CR_HSEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	668;"	d
IRTIM_CR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	656;"	d
IRTIM_Cmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_irtim.c	/^void IRTIM_Cmd(FunctionalState NewState)$/;"	f
IRTIM_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_irtim.c	/^void IRTIM_DeInit(void)$/;"	f
IRTIM_GetHighSinkODStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_irtim.c	/^FunctionalState IRTIM_GetHighSinkODStatus(void)$/;"	f
IRTIM_GetStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_irtim.c	/^FunctionalState IRTIM_GetStatus(void)$/;"	f
IRTIM_HighSinkODCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_irtim.c	/^void IRTIM_HighSinkODCmd(FunctionalState NewState)$/;"	f
IRTIM_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^IRTIM_TypeDef;$/;"	t	typeref:struct:IRTIM_struct
IRTIM_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct IRTIM_struct$/;"	s
ISPR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ISPR1; \/*!<  Interrupt Software Priority register 1 *\/$/;"	m	struct:ITC_struct
ISPR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ISPR2; \/*!<  Interrupt Software Priority register 2 *\/$/;"	m	struct:ITC_struct
ISPR3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ISPR3; \/*!<  Interrupt Software Priority register 3 *\/$/;"	m	struct:ITC_struct
ISPR4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ISPR4; \/*!<  Interrupt Software Priority register 4 *\/$/;"	m	struct:ITC_struct
ISPR5	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ISPR5; \/*!<  Interrupt Software Priority register 5 *\/$/;"	m	struct:ITC_struct
ISPR6	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ISPR6; \/*!<  Interrupt Software Priority register 6 *\/$/;"	m	struct:ITC_struct
ISPR7	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ISPR7; \/*!<  Interrupt Software Priority register 7 *\/$/;"	m	struct:ITC_struct
ISPR8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ISPR8; \/*!< Interrupt Software Priority register 8 *\/$/;"	m	struct:ITC_struct
IS_AWU_TIMEBASE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	97;"	d
IS_BEEP_FREQUENCY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_beep.h	84;"	d
IS_CLK_MASTER_PRESCALER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	121;"	d
IS_CLK_OUTPUT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	107;"	d
IS_CLK_PERIPHERAL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	116;"	d
IS_COMP_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	195;"	d
IS_COMP_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	188;"	d
IS_COMP_ITPENDINGBIT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	210;"	d
IS_COMP_OUTPUT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	203;"	d
IS_COMP_POLARITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	174;"	d
IS_COMP_REFERENCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	181;"	d
IS_COMP_SELECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	165;"	d
IS_COMP_SWITCH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	226;"	d
IS_COMP_TIM2CONFIG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	158;"	d
IS_COMP_TIMCONNECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	217;"	d
IS_EXTI_HALFPORT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	134;"	d
IS_EXTI_ITPENDINGBIT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	163;"	d
IS_EXTI_PINNUM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	150;"	d
IS_EXTI_PORT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	143;"	d
IS_EXTI_Trigger_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	125;"	d
IS_FLASH_ADDRESS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	129;"	d
IS_FLASH_BLOCK_NUMBER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	135;"	d
IS_FLASH_FLAGS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	158;"	d
IS_FLASH_PROGRAM_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	146;"	d
IS_FLASH_PROGRAM_TIME	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	152;"	d
IS_FUNCTIONAL_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	156;"	d
IS_GPIO_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	111;"	d
IS_GPIO_PIN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	129;"	d
IS_I2C_ACKNOWLEDGE_ADDRESS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	412;"	d
IS_I2C_ACK_POSITION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	406;"	d
IS_I2C_ACK_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	400;"	d
IS_I2C_ADDRESS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	484;"	d
IS_I2C_CLEAR_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	436;"	d
IS_I2C_CLEAR_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	446;"	d
IS_I2C_CONFIG_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	441;"	d
IS_I2C_DIRECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	418;"	d
IS_I2C_DUTY_CYCLE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	394;"	d
IS_I2C_EVENT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	461;"	d
IS_I2C_GET_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	424;"	d
IS_I2C_GET_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	451;"	d
IS_I2C_OUTPUT_CLOCK_FREQ	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	489;"	d
IS_I2C_OWN_ADDRESS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	481;"	d
IS_ITC_INTERRUPTS_DISABLED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	142;"	d
IS_ITC_IRQ	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	107;"	d
IS_ITC_PRIORITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	133;"	d
IS_IWDG_PRESCALER_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	105;"	d
IS_IWDG_WRITEACCESS_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	118;"	d
IS_LSI_FREQUENCY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	120;"	d
IS_LSI_FREQUENCY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_beep.h	92;"	d
IS_MEMORY_TYPE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	140;"	d
IS_RST_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_rst.h	68;"	d
IS_SPI_BAUDRATE_PRESCALER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	194;"	d
IS_SPI_CONFIG_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	234;"	d
IS_SPI_CPHA	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	212;"	d
IS_SPI_CPOL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	206;"	d
IS_SPI_DIRECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	176;"	d
IS_SPI_DIRECTION_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	168;"	d
IS_SPI_FIRST_BIT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	218;"	d
IS_SPI_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	224;"	d
IS_SPI_GET_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	241;"	d
IS_SPI_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	182;"	d
IS_SPI_NSS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	188;"	d
IS_STATE_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1410;"	d
IS_TIM2_AUTOMATIC_OUTPUT_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	462;"	d
IS_TIM2_BREAK_POLARITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	455;"	d
IS_TIM2_BREAK_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	448;"	d
IS_TIM2_CHANNEL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	417;"	d
IS_TIM2_CLEAR_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	638;"	d
IS_TIM2_COUNTER_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	424;"	d
IS_TIM2_ENCODER_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	589;"	d
IS_TIM2_EVENT_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	597;"	d
IS_TIM2_EXT_FILTER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	576;"	d
IS_TIM2_EXT_POLARITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	569;"	d
IS_TIM2_EXT_PRESCALER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	536;"	d
IS_TIM2_FORCED_ACTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	370;"	d
IS_TIM2_GET_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	629;"	d
IS_TIM2_GET_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	526;"	d
IS_TIM2_IC_FILTER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	517;"	d
IS_TIM2_IC_POLARITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	493;"	d
IS_TIM2_IC_PRESCALER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	508;"	d
IS_TIM2_IC_SELECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	500;"	d
IS_TIM2_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	523;"	d
IS_TIM2_LOCK_LEVEL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	469;"	d
IS_TIM2_OCIDLE_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	485;"	d
IS_TIM2_OCM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	398;"	d
IS_TIM2_OC_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	390;"	d
IS_TIM2_OC_POLARITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	434;"	d
IS_TIM2_OPM_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	410;"	d
IS_TIM2_OSSI_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	478;"	d
IS_TIM2_OUTPUT_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	441;"	d
IS_TIM2_PRESCALER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	377;"	d
IS_TIM2_PRESCALER_RELOAD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	582;"	d
IS_TIM2_SLAVE_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	621;"	d
IS_TIM2_TIXCLK_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	561;"	d
IS_TIM2_TIX_TRIGGER_SELECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	553;"	d
IS_TIM2_TRGO_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	611;"	d
IS_TIM2_TRIGGER_SELECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	544;"	d
IS_TIM2_UPDATE_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	604;"	d
IS_TIM3_AUTOMATIC_OUTPUT_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	462;"	d
IS_TIM3_BREAK_POLARITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	455;"	d
IS_TIM3_BREAK_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	448;"	d
IS_TIM3_CHANNEL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	416;"	d
IS_TIM3_CLEAR_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	638;"	d
IS_TIM3_COUNTER_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	423;"	d
IS_TIM3_ENCODER_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	590;"	d
IS_TIM3_EVENT_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	598;"	d
IS_TIM3_EXT_FILTER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	577;"	d
IS_TIM3_EXT_POLARITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	570;"	d
IS_TIM3_EXT_PRESCALER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	536;"	d
IS_TIM3_FORCED_ACTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	369;"	d
IS_TIM3_GET_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	629;"	d
IS_TIM3_GET_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	526;"	d
IS_TIM3_IC_FILTER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	517;"	d
IS_TIM3_IC_POLARITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	493;"	d
IS_TIM3_IC_PRESCALER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	508;"	d
IS_TIM3_IC_SELECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	500;"	d
IS_TIM3_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	523;"	d
IS_TIM3_LOCK_LEVEL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	469;"	d
IS_TIM3_OCIDLE_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	485;"	d
IS_TIM3_OCM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	397;"	d
IS_TIM3_OC_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	389;"	d
IS_TIM3_OC_POLARITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	433;"	d
IS_TIM3_OPM_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	409;"	d
IS_TIM3_OSSI_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	478;"	d
IS_TIM3_OUTPUT_STATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	440;"	d
IS_TIM3_PRESCALER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	376;"	d
IS_TIM3_PRESCALER_RELOAD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	583;"	d
IS_TIM3_SLAVE_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	621;"	d
IS_TIM3_TIXCLK_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	562;"	d
IS_TIM3_TIX_TRIGGER_SELECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	554;"	d
IS_TIM3_TRGO_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	611;"	d
IS_TIM3_TRIGGER_SELECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	545;"	d
IS_TIM3_UPDATE_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	604;"	d
IS_TIM4_CLEAR_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	236;"	d
IS_TIM4_EVENT_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	209;"	d
IS_TIM4_GET_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	232;"	d
IS_TIM4_GET_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	245;"	d
IS_TIM4_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	241;"	d
IS_TIM4_OPM_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	190;"	d
IS_TIM4_PRESCALER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	170;"	d
IS_TIM4_PRESCALER_RELOAD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	197;"	d
IS_TIM4_SLAVE_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	223;"	d
IS_TIM4_TRGO_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	216;"	d
IS_TIM4_TRIGGER_SELECTION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	251;"	d
IS_TIM4_UPDATE_SOURCE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	203;"	d
IS_USART_ADDRESS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	278;"	d
IS_USART_BAUDRATE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	271;"	d
IS_USART_CLOCK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	226;"	d
IS_USART_CONFIG_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	191;"	d
IS_USART_CPHA	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	238;"	d
IS_USART_CPOL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	232;"	d
IS_USART_DATA_9BITS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	286;"	d
IS_USART_FLAG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	176;"	d
IS_USART_GET_IT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	202;"	d
IS_USART_LASTBIT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	244;"	d
IS_USART_MODE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	213;"	d
IS_USART_PARITY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	266;"	d
IS_USART_STOPBITS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	259;"	d
IS_USART_WAKEUP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	251;"	d
IS_USART_WordLength	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	219;"	d
IS_WFE_SOURCE_OK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	79;"	d
ITC	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1296;"	d
ITC_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1268;"	d
ITC_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_itc.c	/^void ITC_DeInit(void)$/;"	f
ITC_GetCPUCC	./STM8L10x_StdPeriph_Driver/src/stm8l10x_itc.c	/^uint8_t ITC_GetCPUCC(void)$/;"	f
ITC_GetSoftIntStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_itc.c	/^uint8_t ITC_GetSoftIntStatus(void)$/;"	f
ITC_GetSoftwarePriority	./STM8L10x_StdPeriph_Driver/src/stm8l10x_itc.c	/^ITC_PriorityLevel_TypeDef ITC_GetSoftwarePriority(IRQn_TypeDef IRQn)$/;"	f
ITC_PriorityLevel_0	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  ITC_PriorityLevel_0 = (uint8_t)0x02, \/*!< Software priority level 0 (cannot be written) *\/$/;"	e	enum:__anon57
ITC_PriorityLevel_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  ITC_PriorityLevel_1 = (uint8_t)0x01, \/*!< Software priority level 1 *\/$/;"	e	enum:__anon57
ITC_PriorityLevel_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  ITC_PriorityLevel_2 = (uint8_t)0x00, \/*!< Software priority level 2 *\/$/;"	e	enum:__anon57
ITC_PriorityLevel_3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  ITC_PriorityLevel_3 = (uint8_t)0x03  \/*!< Software priority level 3 *\/$/;"	e	enum:__anon57
ITC_PriorityLevel_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^} ITC_PriorityLevel_TypeDef;$/;"	t	typeref:enum:__anon57
ITC_SPR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	695;"	d
ITC_SPR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	696;"	d
ITC_SPR3_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	697;"	d
ITC_SPR4_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	698;"	d
ITC_SPR5_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	699;"	d
ITC_SPR6_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	700;"	d
ITC_SPR7_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	701;"	d
ITC_SPR8_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	702;"	d
ITC_SetSoftwarePriority	./STM8L10x_StdPeriph_Driver/src/stm8l10x_itc.c	/^void ITC_SetSoftwarePriority(IRQn_TypeDef IRQn, ITC_PriorityLevel_TypeDef ITC_PriorityLevel)$/;"	f
ITC_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^ITC_TypeDef;$/;"	t	typeref:struct:ITC_struct
ITC_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct ITC_struct$/;"	s
ITEN_Mask	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	85;"	d	file:
ITR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ITR;    \/*!< I2C interrupt register *\/$/;"	m	struct:I2C_struct
ITStatus	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {RESET = 0, SET = !RESET} FlagStatus, ITStatus, BitStatus, BitAction;$/;"	t	typeref:enum:__anon13
IWDG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1285;"	d
IWDG_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1256;"	d
IWDG_Enable	./STM8L10x_StdPeriph_Driver/src/stm8l10x_iwdg.c	/^void IWDG_Enable(void)$/;"	f
IWDG_KEY_ENABLE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	52;"	d
IWDG_KEY_REFRESH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	47;"	d
IWDG_PR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	724;"	d
IWDG_Prescaler_128	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^  IWDG_Prescaler_128 = (uint8_t)0x05, \/*!< Used to set prescaler register to 128 *\/$/;"	e	enum:__anon17
IWDG_Prescaler_16	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^  IWDG_Prescaler_16  = (uint8_t)0x02, \/*!< Used to set prescaler register to 16 *\/$/;"	e	enum:__anon17
IWDG_Prescaler_256	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^  IWDG_Prescaler_256 = (uint8_t)0x06  \/*!< Used to set prescaler register to 256 *\/$/;"	e	enum:__anon17
IWDG_Prescaler_32	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^  IWDG_Prescaler_32  = (uint8_t)0x03, \/*!< Used to set prescaler register to 32 *\/$/;"	e	enum:__anon17
IWDG_Prescaler_4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^  IWDG_Prescaler_4   = (uint8_t)0x00, \/*!< Used to set prescaler register to 4 *\/$/;"	e	enum:__anon17
IWDG_Prescaler_64	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^  IWDG_Prescaler_64  = (uint8_t)0x04, \/*!< Used to set prescaler register to 64 *\/$/;"	e	enum:__anon17
IWDG_Prescaler_8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^  IWDG_Prescaler_8   = (uint8_t)0x01, \/*!< Used to set prescaler register to 8 *\/$/;"	e	enum:__anon17
IWDG_Prescaler_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^} IWDG_Prescaler_TypeDef;$/;"	t	typeref:enum:__anon17
IWDG_RLR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	723;"	d
IWDG_ReloadCounter	./STM8L10x_StdPeriph_Driver/src/stm8l10x_iwdg.c	/^void IWDG_ReloadCounter(void)$/;"	f
IWDG_SetPrescaler	./STM8L10x_StdPeriph_Driver/src/stm8l10x_iwdg.c	/^void IWDG_SetPrescaler(IWDG_Prescaler_TypeDef IWDG_Prescaler)$/;"	f
IWDG_SetReload	./STM8L10x_StdPeriph_Driver/src/stm8l10x_iwdg.c	/^void IWDG_SetReload(uint8_t IWDG_Reload)$/;"	f
IWDG_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^IWDG_TypeDef;$/;"	t	typeref:struct:IWDG_struct
IWDG_WriteAccessCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_iwdg.c	/^void IWDG_WriteAccessCmd(IWDG_WriteAccess_TypeDef IWDG_WriteAccess)$/;"	f
IWDG_WriteAccess_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^  IWDG_WriteAccess_Disable = (uint8_t)0x00  \/*!< Code 0x00 in Key register, not allow write access to Prescaler and Reload registers *\/$/;"	e	enum:__anon16
IWDG_WriteAccess_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^  IWDG_WriteAccess_Enable  = (uint8_t)0x55, \/*!< Code 0x55 in Key register, allow write access to Prescaler and Reload registers *\/$/;"	e	enum:__anon16
IWDG_WriteAccess_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	/^} IWDG_WriteAccess_TypeDef;$/;"	t	typeref:enum:__anon16
IWDG_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct IWDG_struct$/;"	s
KEY_EXTI_PIN	./main.c	54;"	d	file:
KEY_EXTI_STS	./main.c	55;"	d	file:
KEY_GPIO_PIN	./main.c	50;"	d	file:
KEY_GPIO_PIN	./main.c	53;"	d	file:
KEY_GPIO_PORT	./main.c	49;"	d	file:
KEY_GPIO_PORT	./main.c	52;"	d	file:
KR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t KR;  \/*!<  Low Speed Watchdog Key Register *\/$/;"	m	struct:IWDG_struct
LED_GPIO_PIN	./main.c	76;"	d	file:
LED_GPIO_PORT	./main.c	75;"	d	file:
LSI_FREQUENCY_MAX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	78;"	d
LSI_FREQUENCY_MAX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_beep.h	64;"	d
LSI_FREQUENCY_MIN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	77;"	d
LSI_FREQUENCY_MIN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_beep.h	63;"	d
LSI_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	87;"	d
License	./STM8L10x_StdPeriph_Driver/Release_Notes.html	/^    <p class="MsoNormal" style="margin: 4.5pt 0cm 4.5pt 86.95pt; text-indent: -9pt;"><span style="font-size: 10pt; font-family: Verdana; color: black;"><o:p><\/o:p><\/span><\/p><span style="font-size: 10pt; font-family: Verdana; color: black;"><\/span> &nbsp; &nbsp; &nbsp; &nbsp;<br><span style="font-size: 10pt; font-family: Verdana;"><\/span><span style="font-size: 10pt; font-family: Verdana;"><\/span><p class="MsoNormal" style="margin: 4.5pt 0cm 4.5pt 122.95pt; text-indent: -18pt;"><span style="font-size: 10pt; font-family: Verdana; color: black;"><o:p><\/o:p><\/span><\/p><h2 style="background: rgb(51, 102, 255) none repeat scroll 0% 50%; -moz-background-clip: initial; -moz-background-origin: initial; -moz-background-inline-policy: initial;"><a name="License"><\/a><span style="font-size: 12pt; color: white;">License<o:p><\/o:p><\/span><\/h2><p class="MsoNormal" style="margin-right: 4cm; line-height: normal; text-align: left;"><span style="font-size: 10pt; color: black;">Licensed under MCD-ST Liberty SW License Agreement V2, (the "License").$/;"	a
MAX_FRAME_LEN	./main.c	576;"	d	file:
MEMCPY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	66;"	d
MSG_BTN_PRESS	./main.c	/^    MSG_BTN_PRESS       = 0x41,$/;"	e	enum:__anon136	file:
MSG_GPIO_PIN1	./main.c	67;"	d	file:
MSG_GPIO_PIN2	./main.c	68;"	d	file:
MSG_GPIO_PORT	./main.c	66;"	d	file:
MSG_HAS_PERSON	./main.c	/^    MSG_HAS_PERSON      = 0x42, $/;"	e	enum:__anon136	file:
MSG_NO_PERSON	./main.c	/^    MSG_NO_PERSON       = 0X43,$/;"	e	enum:__anon136	file:
MSG_WAKEUP_ZWAVE	./main.c	/^    MSG_WAKEUP_ZWAVE    = 0x01,$/;"	e	enum:__anon136	file:
MskBit	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1400;"	d
NEAR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	56;"	d
NEAR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	62;"	d
NEAR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	69;"	d
OAR1_ADD0_Reset	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	90;"	d	file:
OAR1_ADD0_Set	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	89;"	d	file:
OARH	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t OARH;   \/*!< I2C own address register MSB *\/$/;"	m	struct:I2C_struct
OARL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t OARL;   \/*!< I2C own address register LSB *\/$/;"	m	struct:I2C_struct
ODR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t ODR; \/*!< Output Data Register *\/$/;"	m	struct:GPIO_struct
OISR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t OISR;  \/*!< Output idle register *\/$/;"	m	struct:TIM_struct
OPERATION_TIMEOUT	./STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	117;"	d	file:
OPT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1300;"	d
OPT0_LOCKBYTE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t OPT0_LOCKBYTE;   \/*!< Option byte 0 *\/$/;"	m	struct:OPT_struct
OPT1_PCODESIZE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t OPT1_PCODESIZE;  \/*!< Option byte 1 *\/$/;"	m	struct:OPT_struct
OPT2_BOOTSIZE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t OPT2_BOOTSIZE;   \/*!< Option byte 2 *\/$/;"	m	struct:OPT_struct
OPT3_DATASIZE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t OPT3_DATASIZE;   \/*!< Option byte 3 *\/$/;"	m	struct:OPT_struct
OPT_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1266;"	d
OPT_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^OPT_TypeDef;$/;"	t	typeref:struct:OPT_struct
OPT_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct OPT_struct$/;"	s
PCKENR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t PCKENR;     \/*!< Peripheral Clock Gating Register  *\/$/;"	m	struct:CLK_struct
PIR_EXTI_PIN	./main.c	60;"	d	file:
PIR_EXTI_STS	./main.c	61;"	d	file:
PIR_GPIO_PIN	./main.c	59;"	d	file:
PIR_GPIO_PORT	./main.c	58;"	d	file:
PR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t PR;  \/*!<  Low Speed Watchdog Prescaler Register *\/$/;"	m	struct:IWDG_struct
PSCR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t PSCR;  \/*!<  USART prescaler register     *\/$/;"	m	struct:USART_struct
PSCR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t PSCR;  \/*!< prescaler     *\/$/;"	m	struct:TIM_struct
PSCR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t PSCR;  \/*!< prescaler register *\/$/;"	m	struct:TIM4_struct
PUKR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t PUKR;       \/*!< Flash program memory unprotection register *\/$/;"	m	struct:FLASH_struct
PointerAttr	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	81;"	d
QUICK_TEST	./main.c	6;"	d	file:
REGISTER_Mask	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	81;"	d	file:
REGISTER_SR1_Index	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	82;"	d	file:
REGISTER_SR2_Index	./STM8L10x_StdPeriph_Driver/src/stm8l10x_i2c.c	83;"	d	file:
RESERVED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  uint8_t RESERVED;$/;"	m	struct:I2C_struct
RESERVED1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  uint8_t RESERVED1;$/;"	m	struct:CLK_struct
RESERVED2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  uint8_t RESERVED2;$/;"	m	struct:CLK_struct
RESERVED3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  uint8_t RESERVED3;$/;"	m	struct:CLK_struct
RESET	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {RESET = 0, SET = !RESET} FlagStatus, ITStatus, BitStatus, BitAction;$/;"	e	enum:__anon13
RLR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t RLR; \/*!<  Low Speed Watchdog Reload Register *\/$/;"	m	struct:IWDG_struct
RPT_TIMEOUT	./main.c	13;"	d	file:
RPT_TIMEOUT	./main.c	9;"	d	file:
RST	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1283;"	d
RST_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1252;"	d
RST_CR_MASK	./STM8L10x_StdPeriph_Driver/src/stm8l10x_rst.c	42;"	d	file:
RST_CR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	815;"	d
RST_ClearFlag	./STM8L10x_StdPeriph_Driver/src/stm8l10x_rst.c	/^void RST_ClearFlag(RST_Flag_TypeDef RST_Flag)$/;"	f
RST_FLAG_ILLOPF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_rst.h	/^  RST_FLAG_ILLOPF      = (uint8_t)0x04, \/*!< Illigal opcode reset flag *\/$/;"	e	enum:__anon11
RST_FLAG_IWDGF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_rst.h	/^  RST_FLAG_IWDGF       = (uint8_t)0x02  \/*!< Independent watchdog reset flag *\/$/;"	e	enum:__anon11
RST_FLAG_POR_PDR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_rst.h	/^  RST_FLAG_POR_PDR     = (uint8_t)0x01, \/*!< POR\/PDR reset flag *\/$/;"	e	enum:__anon11
RST_FLAG_SWIMF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_rst.h	/^  RST_FLAG_SWIMF       = (uint8_t)0x08, \/*!< SWIM reset flag *\/$/;"	e	enum:__anon11
RST_Flag_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_rst.h	/^} RST_Flag_TypeDef;$/;"	t	typeref:enum:__anon11
RST_GPOutputEnable	./STM8L10x_StdPeriph_Driver/src/stm8l10x_rst.c	/^void RST_GPOutputEnable(void)$/;"	f
RST_GetFlagStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_rst.c	/^FlagStatus RST_GetFlagStatus(RST_Flag_TypeDef RST_Flag)$/;"	f
RST_SR_ILLOPF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	826;"	d
RST_SR_IWDGF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	827;"	d
RST_SR_PORF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	828;"	d
RST_SR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	816;"	d
RST_SR_SWIMF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	825;"	d
RST_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^RST_TypeDef;$/;"	t	typeref:struct:RST_struct
RST_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct RST_struct$/;"	s
S16_MAX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	164;"	d
S16_MIN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	165;"	d
S32_MAX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	167;"	d
S32_MIN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	168;"	d
S8_MAX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	161;"	d
S8_MIN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	162;"	d
SET	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {RESET = 0, SET = !RESET} FlagStatus, ITStatus, BitStatus, BitAction;$/;"	e	enum:__anon13
SMCR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SMCR;  \/*!< Synchro mode control register *\/$/;"	m	struct:TIM4_struct
SMCR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SMCR;  \/*!< Synchro mode control register *\/$/;"	m	struct:TIM_struct
SPI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1289;"	d
SPI_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1262;"	d
SPI_BaudRatePrescaler_128	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_BaudRatePrescaler_128 = (uint8_t)0x30, \/*!< SPI frequency = frequency(CPU)\/128 *\/$/;"	e	enum:__anon50
SPI_BaudRatePrescaler_16	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_BaudRatePrescaler_16  = (uint8_t)0x18, \/*!< SPI frequency = frequency(CPU)\/16 *\/$/;"	e	enum:__anon50
SPI_BaudRatePrescaler_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_BaudRatePrescaler_2   = (uint8_t)0x00, \/*!< SPI frequency = frequency(CPU)\/2 *\/$/;"	e	enum:__anon50
SPI_BaudRatePrescaler_256	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_BaudRatePrescaler_256 = (uint8_t)0x38  \/*!< SPI frequency = frequency(CPU)\/256 *\/$/;"	e	enum:__anon50
SPI_BaudRatePrescaler_32	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_BaudRatePrescaler_32  = (uint8_t)0x20, \/*!< SPI frequency = frequency(CPU)\/32 *\/$/;"	e	enum:__anon50
SPI_BaudRatePrescaler_4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_BaudRatePrescaler_4   = (uint8_t)0x08, \/*!< SPI frequency = frequency(CPU)\/4 *\/$/;"	e	enum:__anon50
SPI_BaudRatePrescaler_64	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_BaudRatePrescaler_64  = (uint8_t)0x28, \/*!< SPI frequency = frequency(CPU)\/64 *\/$/;"	e	enum:__anon50
SPI_BaudRatePrescaler_8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_BaudRatePrescaler_8   = (uint8_t)0x10, \/*!< SPI frequency = frequency(CPU)\/8 *\/$/;"	e	enum:__anon50
SPI_BaudRatePrescaler_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^} SPI_BaudRatePrescaler_TypeDef;$/;"	t	typeref:enum:__anon50
SPI_BiDirectionalLineConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^void SPI_BiDirectionalLineConfig(SPI_Direction_TypeDef SPI_Direction)$/;"	f
SPI_CPHA_1Edge	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_CPHA_1Edge = (uint8_t)0x00, \/*!< The first clock transition is the first data capture edge *\/$/;"	e	enum:__anon52
SPI_CPHA_2Edge	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_CPHA_2Edge = (uint8_t)0x01  \/*!< The second clock transition is the first data capture edge *\/$/;"	e	enum:__anon52
SPI_CPHA_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^} SPI_CPHA_TypeDef;$/;"	t	typeref:enum:__anon52
SPI_CPOL_High	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_CPOL_High = (uint8_t)0x02  \/*!< Clock to 1 when idle *\/$/;"	e	enum:__anon51
SPI_CPOL_Low	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_CPOL_Low  = (uint8_t)0x00, \/*!< Clock to 0 when idle *\/$/;"	e	enum:__anon51
SPI_CPOL_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^} SPI_CPOL_TypeDef;$/;"	t	typeref:enum:__anon51
SPI_CR1_BR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	868;"	d
SPI_CR1_CPHA	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	871;"	d
SPI_CR1_CPOL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	870;"	d
SPI_CR1_LSBFIRST	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	866;"	d
SPI_CR1_MSTR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	869;"	d
SPI_CR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	852;"	d
SPI_CR1_SPE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	867;"	d
SPI_CR2_BDM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	873;"	d
SPI_CR2_BDOE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	874;"	d
SPI_CR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	853;"	d
SPI_CR2_RXONLY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	875;"	d
SPI_CR2_SSI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	877;"	d
SPI_CR2_SSM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	876;"	d
SPI_ClearFlag	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^void SPI_ClearFlag(void)$/;"	f
SPI_ClearITPendingBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^void SPI_ClearITPendingBit(void)$/;"	f
SPI_Cmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^void SPI_Cmd(FunctionalState NewState)$/;"	f
SPI_DR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	856;"	d
SPI_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^void SPI_DeInit(void)$/;"	f
SPI_DirectionMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^} SPI_DirectionMode_TypeDef;$/;"	t	typeref:enum:__anon46
SPI_Direction_1Line_Rx	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_Direction_1Line_Rx          = (uint8_t)0x80, \/*!< Receiver only in 1 line bi-directional data mode *\/$/;"	e	enum:__anon46
SPI_Direction_1Line_Tx	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_Direction_1Line_Tx          = (uint8_t)0xC0  \/*!< Transmit only in 1 line bi-directional data mode *\/$/;"	e	enum:__anon46
SPI_Direction_2Lines_FullDuplex	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_Direction_2Lines_FullDuplex = (uint8_t)0x00, \/*!< 2-line uni-directional data mode enable *\/$/;"	e	enum:__anon46
SPI_Direction_2Lines_RxOnly	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_Direction_2Lines_RxOnly     = (uint8_t)0x04, \/*!< Receiver only in 2 line uni-directional data mode *\/$/;"	e	enum:__anon46
SPI_Direction_Rx	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_Direction_Rx = (uint8_t)0x00, \/*!< Selects Rx receive direction in bi-directional mode *\/$/;"	e	enum:__anon47
SPI_Direction_Tx	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_Direction_Tx = (uint8_t)0x01  \/*!< Selects Tx transmission direction in bi-directional mode *\/$/;"	e	enum:__anon47
SPI_Direction_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^} SPI_Direction_TypeDef;$/;"	t	typeref:enum:__anon47
SPI_FLAG_BSY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_FLAG_BSY    = (uint8_t)0x80, \/*!< Busy flag *\/$/;"	e	enum:__anon54
SPI_FLAG_MODF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_FLAG_MODF   = (uint8_t)0x20, \/*!< Mode fault *\/$/;"	e	enum:__anon54
SPI_FLAG_OVR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_FLAG_OVR    = (uint8_t)0x40, \/*!< Overrun flag *\/$/;"	e	enum:__anon54
SPI_FLAG_RXNE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_FLAG_RXNE   = (uint8_t)0x01  \/*!< Receive buffer empty *\/$/;"	e	enum:__anon54
SPI_FLAG_TXE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_FLAG_TXE    = (uint8_t)0x02, \/*!< Transmit buffer empty *\/$/;"	e	enum:__anon54
SPI_FLAG_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^} SPI_FLAG_TypeDef;$/;"	t	typeref:enum:__anon54
SPI_FLAG_WKUP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_FLAG_WKUP   = (uint8_t)0x08, \/*!< Wake-up flag *\/$/;"	e	enum:__anon54
SPI_FirstBit_LSB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_FirstBit_LSB = (uint8_t)0x80  \/*!< LSB bit will be transmitted first *\/$/;"	e	enum:__anon53
SPI_FirstBit_MSB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_FirstBit_MSB = (uint8_t)0x00, \/*!< MSB bit will be transmitted first *\/$/;"	e	enum:__anon53
SPI_FirstBit_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^} SPI_FirstBit_TypeDef;$/;"	t	typeref:enum:__anon53
SPI_GetFlagStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^FlagStatus SPI_GetFlagStatus(SPI_FLAG_TypeDef SPI_FLAG)$/;"	f
SPI_GetITStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^ITStatus SPI_GetITStatus(SPI_IT_TypeDef SPI_IT)$/;"	f
SPI_ICR_ERRIE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	881;"	d
SPI_ICR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	854;"	d
SPI_ICR_RXIE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	880;"	d
SPI_ICR_TXIE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	879;"	d
SPI_ICR_WKIE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	882;"	d
SPI_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  SPI_IRQn                      = (uint8_t)26,  \/*!< SPI interrupt *\/$/;"	e	enum:__anon56
SPI_ITConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^void SPI_ITConfig(SPI_IT_TypeDef SPI_IT, FunctionalState NewState)$/;"	f
SPI_IT_ERR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_IT_ERR    = (uint8_t)0x05   \/*!< Error interrupt*\/$/;"	e	enum:__anon55
SPI_IT_MODF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_IT_MODF   = (uint8_t)0x55,  \/*!< Mode fault interrupt*\/$/;"	e	enum:__anon55
SPI_IT_OVR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_IT_OVR    = (uint8_t)0x65,  \/*!< Overrun interrupt*\/$/;"	e	enum:__anon55
SPI_IT_RXNE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_IT_RXNE   = (uint8_t)0x06,  \/*!< Receive buffer not empty interrupt*\/$/;"	e	enum:__anon55
SPI_IT_TXE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_IT_TXE    = (uint8_t)0x17,  \/*!< Transmit buffer empty interrupt*\/$/;"	e	enum:__anon55
SPI_IT_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^} SPI_IT_TypeDef;$/;"	t	typeref:enum:__anon55
SPI_IT_WKUP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_IT_WKUP   = (uint8_t)0x34,  \/*!< Wake-up interrupt*\/$/;"	e	enum:__anon55
SPI_Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^void SPI_Init(SPI_FirstBit_TypeDef SPI_FirstBit, SPI_BaudRatePrescaler_TypeDef SPI_BaudRatePrescaler,$/;"	f
SPI_Mode_Master	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_Mode_Master = (uint8_t)0x04, \/*!< SPI Master configuration *\/$/;"	e	enum:__anon48
SPI_Mode_Slave	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_Mode_Slave  = (uint8_t)0x00  \/*!< SPI Slave configuration *\/$/;"	e	enum:__anon48
SPI_Mode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^} SPI_Mode_TypeDef;$/;"	t	typeref:enum:__anon48
SPI_NSSInternalSoftwareCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^void SPI_NSSInternalSoftwareCmd(FunctionalState NewState)$/;"	f
SPI_NSS_Hard	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_NSS_Hard  = (uint8_t)0x00  \/*!< Software slave management enabled *\/$/;"	e	enum:__anon49
SPI_NSS_Soft	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^  SPI_NSS_Soft  = (uint8_t)0x02, \/*!< Software slave management disabled *\/$/;"	e	enum:__anon49
SPI_NSS_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	/^} SPI_NSS_TypeDef;$/;"	t	typeref:enum:__anon49
SPI_ReceiveData	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^uint8_t SPI_ReceiveData(void)$/;"	f
SPI_SR_BSY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	884;"	d
SPI_SR_MODF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	886;"	d
SPI_SR_OVR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	885;"	d
SPI_SR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	855;"	d
SPI_SR_RXNE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	889;"	d
SPI_SR_TXE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	888;"	d
SPI_SR_WKUP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	887;"	d
SPI_SendData	./STM8L10x_StdPeriph_Driver/src/stm8l10x_spi.c	/^void SPI_SendData(uint8_t Data)$/;"	f
SPI_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^SPI_TypeDef;$/;"	t	typeref:struct:SPI_struct
SPI_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct SPI_struct$/;"	s
SR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR;     \/*!< SPI status register *\/$/;"	m	struct:SPI_struct
SR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR;  \/*!<  USART status register  *\/$/;"	m	struct:USART_struct
SR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR;  \/*!< Reset status register *\/$/;"	m	struct:RST_struct
SR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR1;    \/*!< I2C status register 1 *\/$/;"	m	struct:I2C_struct
SR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR1;  \/*!<  Pins Status flag register 1 *\/$/;"	m	struct:EXTI_struct
SR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR1;  \/*!< status register 1    *\/$/;"	m	struct:TIM4_struct
SR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR1;  \/*!< status register 1   *\/$/;"	m	struct:TIM_struct
SR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR2;    \/*!< I2C status register 2 *\/$/;"	m	struct:I2C_struct
SR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR2;  \/*!<  Ports Status flage register 2 *\/$/;"	m	struct:EXTI_struct
SR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR2;  \/*!< status register 2   *\/$/;"	m	struct:TIM_struct
SR3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t SR3;    \/*!< I2C status register 3 *\/$/;"	m	struct:I2C_struct
STRINGVECTOR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1358;"	d
SUCCESS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {ERROR = 0, SUCCESS = !ERROR} ErrorStatus;$/;"	e	enum:__anon15
S_HAS_PERSON	./main.c	/^	S_HAS_PERSON	= 1,$/;"	e	enum:__anon134	file:
S_NO_PERSON	./main.c	/^	S_NO_PERSON		= 0,$/;"	e	enum:__anon134	file:
S_WAIT_CHECK	./main.c	/^  S_WAIT_CHECK,$/;"	e	enum:__anon137	file:
S_WAIT_CMD1	./main.c	/^  S_WAIT_CMD1,$/;"	e	enum:__anon137	file:
S_WAIT_CMD2	./main.c	/^  S_WAIT_CMD2,$/;"	e	enum:__anon137	file:
S_WAIT_DATA	./main.c	/^  S_WAIT_DATA,$/;"	e	enum:__anon137	file:
S_WAIT_HEAD	./main.c	/^  S_WAIT_HEAD,$/;"	e	enum:__anon137	file:
S_WAIT_LEN	./main.c	/^  S_WAIT_LEN,$/;"	e	enum:__anon137	file:
SetBit	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1393;"	d
TBR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t TBR; \/*!< AWU Time base selection register *\/$/;"	m	struct:AWU_struct
TBR_Array	./STM8L10x_StdPeriph_Driver/src/stm8l10x_awu.c	/^CONST uint8_t TBR_Array[17] = {0,  1,  1,  1, 1,  2,  3,  4,  5,  6, 7,  8,  9, 10, 11, 14, 15};$/;"	v
TEST_GPIO_PIN	./main.c	72;"	d	file:
TEST_GPIO_PORT	./main.c	71;"	d	file:
TI1_Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^static void TI1_Config(TIM2_ICPolarity_TypeDef TIM2_ICPolarity, \\$/;"	f	file:
TI1_Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^static void TI1_Config(TIM3_ICPolarity_TypeDef TIM3_ICPolarity,$/;"	f	file:
TI2_Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^static void TI2_Config(TIM2_ICPolarity_TypeDef TIM2_ICPolarity,$/;"	f	file:
TI2_Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^static void TI2_Config(TIM3_ICPolarity_TypeDef TIM3_ICPolarity,$/;"	f	file:
TIM2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1292;"	d
TIM2_ARRPreloadConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_ARRPreloadConfig(FunctionalState NewState)$/;"	f
TIM2_AutomaticOutput_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_AutomaticOutput_Disable  = ((uint8_t)0x00)   \/*!< Automatic Output option disabled *\/$/;"	e	enum:__anon115
TIM2_AutomaticOutput_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_AutomaticOutput_Enable  = ((uint8_t)0x40),  \/*!< Automatic Output option enabled *\/$/;"	e	enum:__anon115
TIM2_AutomaticOutput_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_AutomaticOutput_TypeDef;$/;"	t	typeref:enum:__anon115
TIM2_BKRConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_BKRConfig(TIM2_OSSIState_TypeDef TIM2_OSSIState,$/;"	f
TIM2_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1240;"	d
TIM2_BreakPolarity_High	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_BreakPolarity_High = ((uint8_t)0x20),  \/*!< if Break, channel polarity = High *\/$/;"	e	enum:__anon114
TIM2_BreakPolarity_Low	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_BreakPolarity_Low = ((uint8_t)0x00)   \/*!< if Break, channel polarity = Low *\/$/;"	e	enum:__anon114
TIM2_BreakPolarity_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_BreakPolarity_TypeDef;$/;"	t	typeref:enum:__anon114
TIM2_BreakState_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_BreakState_Disable = ((uint8_t)0x00),  \/*!< Break State disabled (break option disabled) *\/$/;"	e	enum:__anon113
TIM2_BreakState_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_BreakState_Enable = ((uint8_t)0x10)   \/*!< Break State enabled (break option enabled) *\/$/;"	e	enum:__anon113
TIM2_BreakState_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_BreakState_TypeDef;$/;"	t	typeref:enum:__anon113
TIM2_CAP_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  TIM2_CAP_IRQn                 = (uint8_t)20,  \/*!< TIM2 CAP interrupt  *\/$/;"	e	enum:__anon56
TIM2_CCxCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_CCxCmd(TIM2_Channel_TypeDef TIM2_Channel,$/;"	f
TIM2_Channel_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_Channel_1 = ((uint8_t)0x00),  \/*!< Channel 1*\/$/;"	e	enum:__anon109
TIM2_Channel_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_Channel_2  = ((uint8_t)0x01)   \/*!< Channel 2*\/$/;"	e	enum:__anon109
TIM2_Channel_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_Channel_TypeDef;$/;"	t	typeref:enum:__anon109
TIM2_ClearFlag	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_ClearFlag(TIM2_FLAG_TypeDef TIM2_FLAG)$/;"	f
TIM2_ClearITPendingBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_ClearITPendingBit(TIM2_IT_TypeDef TIM2_IT)$/;"	f
TIM2_Cmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_Cmd(FunctionalState NewState)$/;"	f
TIM2_ComputeLsiClockFreq	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^uint32_t TIM2_ComputeLsiClockFreq(uint32_t TIM2_TimerClockFreq)$/;"	f
TIM2_CounterModeConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_CounterModeConfig(TIM2_CounterMode_TypeDef TIM2_CounterMode)$/;"	f
TIM2_CounterMode_CenterAligned1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_CounterMode_CenterAligned1   = ((uint8_t)0x20),  \/*!< Counter Central aligned Mode 1 *\/$/;"	e	enum:__anon110
TIM2_CounterMode_CenterAligned2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_CounterMode_CenterAligned2   = ((uint8_t)0x40),  \/*!< Counter Central aligned Mode 2 *\/$/;"	e	enum:__anon110
TIM2_CounterMode_CenterAligned3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_CounterMode_CenterAligned3   = ((uint8_t)0x60)   \/*!< Counter Central aligned Mode 3 *\/$/;"	e	enum:__anon110
TIM2_CounterMode_Down	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_CounterMode_Down             = ((uint8_t)0x10),  \/*!< Counter Down Mode *\/$/;"	e	enum:__anon110
TIM2_CounterMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_CounterMode_TypeDef;$/;"	t	typeref:enum:__anon110
TIM2_CounterMode_Up	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_CounterMode_Up               = ((uint8_t)0x00),  \/*!< Counter Up Mode *\/$/;"	e	enum:__anon110
TIM2_CtrlPWMOutputs	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_CtrlPWMOutputs(FunctionalState NewState)$/;"	f
TIM2_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_DeInit(void)$/;"	f
TIM2_ETRClockMode1Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_ETRClockMode1Config(TIM2_ExtTRGPSC_TypeDef TIM2_ExtTRGPrescaler,$/;"	f
TIM2_ETRClockMode2Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_ETRClockMode2Config(TIM2_ExtTRGPSC_TypeDef TIM2_ExtTRGPrescaler,$/;"	f
TIM2_ETRConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_ETRConfig(TIM2_ExtTRGPSC_TypeDef TIM2_ExtTRGPrescaler,$/;"	f
TIM2_EncoderInterfaceConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_EncoderInterfaceConfig(TIM2_EncoderMode_TypeDef TIM2_EncoderMode,$/;"	f
TIM2_EncoderMode_TI1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_EncoderMode_TI1  = ((uint8_t)0x01),  \/*!< Encoder mode 1*\/$/;"	e	enum:__anon128
TIM2_EncoderMode_TI12	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_EncoderMode_TI12  = ((uint8_t)0x03)   \/*!< Encoder mode 3*\/$/;"	e	enum:__anon128
TIM2_EncoderMode_TI2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_EncoderMode_TI2  = ((uint8_t)0x02),  \/*!< Encoder mode 2*\/$/;"	e	enum:__anon128
TIM2_EncoderMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_EncoderMode_TypeDef;$/;"	t	typeref:enum:__anon128
TIM2_EventSource_Break	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_EventSource_Break  = ((uint8_t)0x80)   \/*!< Break Event*\/$/;"	e	enum:__anon129
TIM2_EventSource_CC1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_EventSource_CC1   = ((uint8_t)0x02),  \/*!< Capture Compare Channel1  Event*\/$/;"	e	enum:__anon129
TIM2_EventSource_CC2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_EventSource_CC2   = ((uint8_t)0x04),  \/*!< Capture Compare Channel2 Event*\/$/;"	e	enum:__anon129
TIM2_EventSource_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_EventSource_Trigger = ((uint8_t)0x40),  \/*!< Trigger Event*\/$/;"	e	enum:__anon129
TIM2_EventSource_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_EventSource_TypeDef;$/;"	t	typeref:enum:__anon129
TIM2_EventSource_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_EventSource_Update  = ((uint8_t)0x01),  \/*!< Update Event*\/$/;"	e	enum:__anon129
TIM2_ExtTRGPSC_DIV2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ExtTRGPSC_DIV2 = ((uint8_t)0x10),  \/*!< External Trigger prescaler = 2 (ETRP frequency divided by 2) *\/$/;"	e	enum:__anon123
TIM2_ExtTRGPSC_DIV4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ExtTRGPSC_DIV4 = ((uint8_t)0x20),  \/*!< External Trigger prescaler = 4 (ETRP frequency divided by 4) *\/$/;"	e	enum:__anon123
TIM2_ExtTRGPSC_DIV8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ExtTRGPSC_DIV8 = ((uint8_t)0x30)   \/*!< External Trigger prescaler = 8 (ETRP frequency divided by 8) *\/$/;"	e	enum:__anon123
TIM2_ExtTRGPSC_OFF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ExtTRGPSC_OFF = ((uint8_t)0x00),  \/*!< No External Trigger prescaler  *\/$/;"	e	enum:__anon123
TIM2_ExtTRGPSC_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_ExtTRGPSC_TypeDef;$/;"	t	typeref:enum:__anon123
TIM2_ExtTRGPolarity_Inverted	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ExtTRGPolarity_Inverted  = ((uint8_t)0x80),  \/*!< External Trigger Polarity = inverted *\/$/;"	e	enum:__anon126
TIM2_ExtTRGPolarity_NonInverted	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ExtTRGPolarity_NonInverted = ((uint8_t)0x00)   \/*!< External Trigger Polarity = non inverted *\/$/;"	e	enum:__anon126
TIM2_ExtTRGPolarity_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_ExtTRGPolarity_TypeDef;$/;"	t	typeref:enum:__anon126
TIM2_FLAG_Break	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_FLAG_Break  = ((uint16_t)0x0080),  \/*!< Break Flag *\/$/;"	e	enum:__anon133
TIM2_FLAG_CC1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_FLAG_CC1    = ((uint16_t)0x0002),  \/*!< Capture compare 1 Flag *\/$/;"	e	enum:__anon133
TIM2_FLAG_CC1OF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_FLAG_CC1OF  = ((uint16_t)0x0200),  \/*!< Capture compare 1 over capture Flag *\/$/;"	e	enum:__anon133
TIM2_FLAG_CC2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_FLAG_CC2   = ((uint16_t)0x0004),  \/*!< Capture compare 2 Flag *\/$/;"	e	enum:__anon133
TIM2_FLAG_CC2OF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_FLAG_CC2OF  = ((uint16_t)0x0400)   \/*!< Capture compare 2 over capture Flag *\/$/;"	e	enum:__anon133
TIM2_FLAG_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_FLAG_Trigger = ((uint16_t)0x0040),  \/*!< Trigger Flag *\/$/;"	e	enum:__anon133
TIM2_FLAG_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_FLAG_TypeDef;$/;"	t	typeref:enum:__anon133
TIM2_FLAG_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_FLAG_Update = ((uint16_t)0x0001),  \/*!< Update Flag *\/$/;"	e	enum:__anon133
TIM2_ForcedAction_Active	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ForcedAction_Active  = ((uint8_t)0x50),  \/*!< Output Reference is forced low *\/$/;"	e	enum:__anon105
TIM2_ForcedAction_Inactive	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ForcedAction_Inactive  = ((uint8_t)0x40)   \/*!< Output Reference is forced high *\/$/;"	e	enum:__anon105
TIM2_ForcedAction_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^TIM2_ForcedAction_TypeDef;$/;"	t	typeref:enum:__anon105
TIM2_ForcedOC1Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_ForcedOC1Config(TIM2_ForcedAction_TypeDef TIM2_ForcedAction)$/;"	f
TIM2_ForcedOC2Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_ForcedOC2Config(TIM2_ForcedAction_TypeDef TIM2_ForcedAction)$/;"	f
TIM2_GenerateEvent	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_GenerateEvent(TIM2_EventSource_TypeDef TIM2_EventSource)$/;"	f
TIM2_GetCapture1	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^uint16_t TIM2_GetCapture1(void)$/;"	f
TIM2_GetCapture2	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^uint16_t TIM2_GetCapture2(void)$/;"	f
TIM2_GetCounter	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^uint16_t TIM2_GetCounter(void)$/;"	f
TIM2_GetFlagStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^FlagStatus TIM2_GetFlagStatus(TIM2_FLAG_TypeDef TIM2_FLAG)$/;"	f
TIM2_GetITStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^ITStatus TIM2_GetITStatus(TIM2_IT_TypeDef TIM2_IT)$/;"	f
TIM2_GetPrescaler	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^TIM2_Prescaler_TypeDef TIM2_GetPrescaler(void)$/;"	f
TIM2_GetStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^FunctionalState TIM2_GetStatus(void)$/;"	f
TIM2_ICInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_ICInit(TIM2_Channel_TypeDef TIM2_Channel,$/;"	f
TIM2_ICPSC_Div1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ICPSC_Div1 = ((uint8_t)0x00),  \/*!< Input Capture Prescaler = 1 (one capture every 1 event) *\/$/;"	e	enum:__anon121
TIM2_ICPSC_Div2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ICPSC_Div2 = ((uint8_t)0x04),  \/*!< Input Capture Prescaler = 2 (one capture every 2 events) *\/$/;"	e	enum:__anon121
TIM2_ICPSC_Div4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ICPSC_Div4 = ((uint8_t)0x08),  \/*!< Input Capture Prescaler = 4 (one capture every 4 events) *\/$/;"	e	enum:__anon121
TIM2_ICPSC_Div8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ICPSC_Div8 = ((uint8_t)0x0C)   \/*!< Input Capture Prescaler = 8 (one capture every 8 events) *\/$/;"	e	enum:__anon121
TIM2_ICPSC_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_ICPSC_TypeDef;$/;"	t	typeref:enum:__anon121
TIM2_ICPolarity_Falling	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ICPolarity_Falling = ((uint8_t)0x01)   \/*!< Input Capture on Falling Edge*\/$/;"	e	enum:__anon119
TIM2_ICPolarity_Rising	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ICPolarity_Rising = ((uint8_t)0x00),  \/*!< Input Capture on Rising Edge*\/$/;"	e	enum:__anon119
TIM2_ICPolarity_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_ICPolarity_TypeDef;$/;"	t	typeref:enum:__anon119
TIM2_ICSelection_DirectTI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ICSelection_DirectTI  = ((uint8_t)0x01),  \/*!< Input Capture mapped on the direct input*\/$/;"	e	enum:__anon120
TIM2_ICSelection_IndirectTI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ICSelection_IndirectTI = ((uint8_t)0x02),  \/*!< Input Capture mapped on the indirect input*\/$/;"	e	enum:__anon120
TIM2_ICSelection_TRGI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_ICSelection_TRGI    = ((uint8_t)0x03)   \/*!< Input Capture mapped on the Trigger Input*\/$/;"	e	enum:__anon120
TIM2_ICSelection_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_ICSelection_TypeDef;$/;"	t	typeref:enum:__anon120
TIM2_ITConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_ITConfig(TIM2_IT_TypeDef TIM2_IT, FunctionalState NewState)$/;"	f
TIM2_IT_Break	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_IT_Break  = ((uint8_t)0x80)   \/*!< Break Interrupt*\/$/;"	e	enum:__anon122
TIM2_IT_CC1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_IT_CC1   = ((uint8_t)0x02),  \/*!< Capture Compare Channel1 Interrupt*\/$/;"	e	enum:__anon122
TIM2_IT_CC2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_IT_CC2   = ((uint8_t)0x04),  \/*!< Capture Compare Channel2 Interrupt*\/$/;"	e	enum:__anon122
TIM2_IT_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_IT_Trigger = ((uint8_t)0x40),  \/*!< Trigger  Interrupt*\/$/;"	e	enum:__anon122
TIM2_IT_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_IT_TypeDef;$/;"	t	typeref:enum:__anon122
TIM2_IT_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_IT_Update = ((uint8_t)0x01),  \/*!< Update Interrupt*\/$/;"	e	enum:__anon122
TIM2_InternalClockConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_InternalClockConfig(void)$/;"	f
TIM2_LockLevel_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_LockLevel_1  = ((uint8_t)0x01),  \/*!< Select Lock Level 1  *\/$/;"	e	enum:__anon116
TIM2_LockLevel_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_LockLevel_2  = ((uint8_t)0x02),  \/*!< Select Lock Level 2  *\/$/;"	e	enum:__anon116
TIM2_LockLevel_3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_LockLevel_3  = ((uint8_t)0x03)   \/*!< Select Lock Level 3  *\/$/;"	e	enum:__anon116
TIM2_LockLevel_Off	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_LockLevel_Off = ((uint8_t)0x00),  \/*!< Lock option disabled *\/$/;"	e	enum:__anon116
TIM2_LockLevel_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_LockLevel_TypeDef;$/;"	t	typeref:enum:__anon116
TIM2_OC1FastCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_OC1FastCmd(FunctionalState NewState)$/;"	f
TIM2_OC1Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_OC1Init(TIM2_OCMode_TypeDef TIM2_OCMode,$/;"	f
TIM2_OC1PolarityConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_OC1PolarityConfig(TIM2_OCPolarity_TypeDef TIM2_OCPolarity)$/;"	f
TIM2_OC1PreloadConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_OC1PreloadConfig(FunctionalState NewState)$/;"	f
TIM2_OC2FastCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_OC2FastCmd(FunctionalState NewState)$/;"	f
TIM2_OC2Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_OC2Init(TIM2_OCMode_TypeDef TIM2_OCMode,$/;"	f
TIM2_OC2PolarityConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_OC2PolarityConfig(TIM2_OCPolarity_TypeDef TIM2_OCPolarity)$/;"	f
TIM2_OC2PreloadConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_OC2PreloadConfig(FunctionalState NewState)$/;"	f
TIM2_OCIdleState_Reset	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OCIdleState_Reset = ((uint8_t)0x00),  \/*!< Output Compare Idle state  = Reset *\/$/;"	e	enum:__anon118
TIM2_OCIdleState_Set	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OCIdleState_Set  = ((uint8_t)0x01)   \/*!< Output Compare Idle state  = Set *\/$/;"	e	enum:__anon118
TIM2_OCIdleState_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_OCIdleState_TypeDef;$/;"	t	typeref:enum:__anon118
TIM2_OCMode_Active	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OCMode_Active    = ((uint8_t)0x10),  \/*!< Active Mode*\/$/;"	e	enum:__anon107
TIM2_OCMode_Inactive	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OCMode_Inactive  = ((uint8_t)0x20),  \/*!< Inactive Mode*\/$/;"	e	enum:__anon107
TIM2_OCMode_PWM1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OCMode_PWM1      = ((uint8_t)0x60),  \/*!< PWM Mode 1*\/$/;"	e	enum:__anon107
TIM2_OCMode_PWM2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OCMode_PWM2      = ((uint8_t)0x70)   \/*!< PWM Mode 2*\/$/;"	e	enum:__anon107
TIM2_OCMode_Timing	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OCMode_Timing  = ((uint8_t)0x00),  \/*!< Timing (Frozen) Mode*\/$/;"	e	enum:__anon107
TIM2_OCMode_Toggle	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OCMode_Toggle    = ((uint8_t)0x30),  \/*!< Toggle Mode*\/$/;"	e	enum:__anon107
TIM2_OCMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_OCMode_TypeDef;$/;"	t	typeref:enum:__anon107
TIM2_OCPolarity_High	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OCPolarity_High = ((uint8_t)0x00),  \/*!< Output compare polarity  = High *\/$/;"	e	enum:__anon111
TIM2_OCPolarity_Low	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OCPolarity_Low  = ((uint8_t)0x01)   \/*!< Output compare polarity  = Low *\/$/;"	e	enum:__anon111
TIM2_OCPolarity_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_OCPolarity_TypeDef;$/;"	t	typeref:enum:__anon111
TIM2_OPMode_Repetitive	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OPMode_Repetitive = ((uint8_t)0x00)  \/*!< Repetitive Pulse mode (OPM inactive) *\/$/;"	e	enum:__anon108
TIM2_OPMode_Single	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OPMode_Single   = ((uint8_t)0x01), \/*!< Single one Pulse mode (OPM Active) *\/$/;"	e	enum:__anon108
TIM2_OPMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_OPMode_TypeDef;$/;"	t	typeref:enum:__anon108
TIM2_OSSIState_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OSSIState_Disable = ((uint8_t)0x00)   \/*!< Off-State Selection for Idle mode disabled  *\/$/;"	e	enum:__anon117
TIM2_OSSIState_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OSSIState_Enable  = ((uint8_t)0x04),  \/*!< Off-State Selection for Idle mode enabled  *\/$/;"	e	enum:__anon117
TIM2_OSSIState_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_OSSIState_TypeDef;$/;"	t	typeref:enum:__anon117
TIM2_OutputState_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OutputState_Disable = ((uint8_t)0x00),  \/*!< Output compare State disabled (channel output disabled) *\/$/;"	e	enum:__anon112
TIM2_OutputState_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_OutputState_Enable  = ((uint8_t)0x01)   \/*!< Output compare State enabled (channel output enabled) *\/$/;"	e	enum:__anon112
TIM2_OutputState_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_OutputState_TypeDef;$/;"	t	typeref:enum:__anon112
TIM2_PSCReloadMode_Immediate	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_PSCReloadMode_Immediate = ((uint8_t)0x01)   \/*!< Prescaler value is reloaded immediatly*\/$/;"	e	enum:__anon127
TIM2_PSCReloadMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_PSCReloadMode_TypeDef;$/;"	t	typeref:enum:__anon127
TIM2_PSCReloadMode_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_PSCReloadMode_Update   = ((uint8_t)0x00),  \/*!< Prescaler value is reloaded at every update*\/$/;"	e	enum:__anon127
TIM2_PWMIConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_PWMIConfig(TIM2_Channel_TypeDef TIM2_Channel,$/;"	f
TIM2_PrescalerConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_PrescalerConfig(TIM2_Prescaler_TypeDef TIM2_Prescaler,$/;"	f
TIM2_Prescaler_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_Prescaler_1  = ((uint8_t)0x00),  \/*!< Time base Prescaler = 1 (No effect)*\/$/;"	e	enum:__anon106
TIM2_Prescaler_128	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_Prescaler_128  = ((uint8_t)0x07)   \/*!< Time base Prescaler = 128 *\/$/;"	e	enum:__anon106
TIM2_Prescaler_16	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_Prescaler_16   = ((uint8_t)0x04),  \/*!< Time base Prescaler = 16 *\/$/;"	e	enum:__anon106
TIM2_Prescaler_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_Prescaler_2    = ((uint8_t)0x01),  \/*!< Time base Prescaler = 2 *\/$/;"	e	enum:__anon106
TIM2_Prescaler_32	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_Prescaler_32   = ((uint8_t)0x05),  \/*!< Time base Prescaler = 32 *\/$/;"	e	enum:__anon106
TIM2_Prescaler_4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_Prescaler_4    = ((uint8_t)0x02),  \/*!< Time base Prescaler = 4 *\/$/;"	e	enum:__anon106
TIM2_Prescaler_64	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_Prescaler_64   = ((uint8_t)0x06),  \/*!< Time base Prescaler = 64 *\/$/;"	e	enum:__anon106
TIM2_Prescaler_8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_Prescaler_8  = ((uint8_t)0x03),  \/*!< Time base Prescaler = 8 *\/$/;"	e	enum:__anon106
TIM2_Prescaler_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_Prescaler_TypeDef;$/;"	t	typeref:enum:__anon106
TIM2_SelectHallSensor	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SelectHallSensor(FunctionalState NewState)$/;"	f
TIM2_SelectInputTrigger	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SelectInputTrigger(TIM2_TRGSelection_TypeDef TIM2_InputTriggerSource)$/;"	f
TIM2_SelectMasterSlaveMode	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SelectMasterSlaveMode(FunctionalState NewState)$/;"	f
TIM2_SelectOCxM	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SelectOCxM(TIM2_Channel_TypeDef TIM2_Channel,$/;"	f
TIM2_SelectOnePulseMode	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SelectOnePulseMode(TIM2_OPMode_TypeDef TIM2_OPMode)$/;"	f
TIM2_SelectOutputTrigger	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SelectOutputTrigger(TIM2_TRGOSource_TypeDef TIM2_TRGOSource)$/;"	f
TIM2_SelectSlaveMode	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SelectSlaveMode(TIM2_SlaveMode_TypeDef TIM2_SlaveMode)$/;"	f
TIM2_SetAutoreload	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SetAutoreload(uint16_t TIM2_Autoreload)$/;"	f
TIM2_SetCompare1	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SetCompare1(uint16_t TIM2_Compare)$/;"	f
TIM2_SetCompare2	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SetCompare2(uint16_t TIM2_Compare)$/;"	f
TIM2_SetCounter	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SetCounter(uint16_t TIM2_Counter)$/;"	f
TIM2_SetIC1Prescaler	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SetIC1Prescaler(TIM2_ICPSC_TypeDef TIM2_IC1Prescaler)$/;"	f
TIM2_SetIC2Prescaler	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_SetIC2Prescaler(TIM2_ICPSC_TypeDef TIM2_IC2Prescaler)$/;"	f
TIM2_SlaveMode_External1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_SlaveMode_External1  = ((uint8_t)0x07)  \/*!< Slave Mode Selection  = External 1*\/$/;"	e	enum:__anon132
TIM2_SlaveMode_Gated	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_SlaveMode_Gated      = ((uint8_t)0x05),  \/*!< Slave Mode Selection  = Gated*\/$/;"	e	enum:__anon132
TIM2_SlaveMode_Reset	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_SlaveMode_Reset   = ((uint8_t)0x04),  \/*!< Slave Mode Selection  = Reset*\/$/;"	e	enum:__anon132
TIM2_SlaveMode_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_SlaveMode_Trigger    = ((uint8_t)0x06),  \/*!< Slave Mode Selection  = Trigger*\/$/;"	e	enum:__anon132
TIM2_SlaveMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_SlaveMode_TypeDef;$/;"	t	typeref:enum:__anon132
TIM2_TIxExternalCLK1Source_TI1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TIxExternalCLK1Source_TI1  = ((uint8_t)0x50),   \/*!< External Clock mode 1 source = TI1 *\/$/;"	e	enum:__anon125
TIM2_TIxExternalCLK1Source_TI1ED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TIxExternalCLK1Source_TI1ED = ((uint8_t)0x40),  \/*!< External Clock mode 1 source = TI1ED *\/$/;"	e	enum:__anon125
TIM2_TIxExternalCLK1Source_TI2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TIxExternalCLK1Source_TI2  = ((uint8_t)0x60)    \/*!< External Clock mode 1 source = TI2 *\/$/;"	e	enum:__anon125
TIM2_TIxExternalCLK1Source_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_TIxExternalCLK1Source_TypeDef;$/;"	t	typeref:enum:__anon125
TIM2_TIxExternalClockConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_TIxExternalClockConfig(TIM2_TIxExternalCLK1Source_TypeDef TIM2_TIxExternalCLKSource,$/;"	f
TIM2_TRGOSource_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGOSource_Enable  = ((uint8_t)0x10),  \/*!< Trigger Output source = TIM2 is enabled*\/$/;"	e	enum:__anon131
TIM2_TRGOSource_OC1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGOSource_OC1     = ((uint8_t)0x30),  \/*!< Trigger Output source = output compare channel1  *\/$/;"	e	enum:__anon131
TIM2_TRGOSource_OC1Ref	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGOSource_OC1Ref  = ((uint8_t)0x40),  \/*!< Trigger Output source = output compare channel 1 reference *\/$/;"	e	enum:__anon131
TIM2_TRGOSource_OC2Ref	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGOSource_OC2Ref  = ((uint8_t)0x50)   \/*!< Trigger Output source = output compare channel 2 reference *\/$/;"	e	enum:__anon131
TIM2_TRGOSource_Reset	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGOSource_Reset  = ((uint8_t)0x00),  \/*!< Trigger Output source = Reset*\/$/;"	e	enum:__anon131
TIM2_TRGOSource_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_TRGOSource_TypeDef;$/;"	t	typeref:enum:__anon131
TIM2_TRGOSource_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGOSource_Update  = ((uint8_t)0x20),  \/*!< Trigger Output source = Update event*\/$/;"	e	enum:__anon131
TIM2_TRGSelection_ETRF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGSelection_ETRF    = ((uint8_t)0x70)   \/*!< TRIG Input source =  ETRF (External Trigger Input ) *\/$/;"	e	enum:__anon124
TIM2_TRGSelection_TI1FP1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGSelection_TI1FP1   = ((uint8_t)0x50),  \/*!< TRIG Input source = TI1FP1  (Filtred Timer Input 1) *\/$/;"	e	enum:__anon124
TIM2_TRGSelection_TI1F_ED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGSelection_TI1F_ED   = ((uint8_t)0x40),  \/*!< TRIG Input source = TI1F_ED (TI1 Edge Detector)  *\/$/;"	e	enum:__anon124
TIM2_TRGSelection_TI2FP2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGSelection_TI2FP2   = ((uint8_t)0x60),  \/*!< TRIG Input source = TI2FP2 (Filtred Timer Input 2)  *\/$/;"	e	enum:__anon124
TIM2_TRGSelection_TIM3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGSelection_TIM3      = ((uint8_t)0x20),  \/*!< TRIG Input source = TIM3  *\/$/;"	e	enum:__anon124
TIM2_TRGSelection_TIM4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_TRGSelection_TIM4      = ((uint8_t)0x00),  \/*!< TRIG Input source = TIM4  *\/$/;"	e	enum:__anon124
TIM2_TRGSelection_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_TRGSelection_TypeDef;$/;"	t	typeref:enum:__anon124
TIM2_TimeBaseInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_TimeBaseInit(TIM2_Prescaler_TypeDef TIM2_Prescaler,$/;"	f
TIM2_UPD_OVF_TRG_BRK_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  TIM2_UPD_OVF_TRG_BRK_IRQn     = (uint8_t)19,  \/*!< TIM2 UPD\/OVF\/TRG\/BRK interrupt *\/$/;"	e	enum:__anon56
TIM2_UpdateDisableConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_UpdateDisableConfig(FunctionalState NewState)$/;"	f
TIM2_UpdateRequestConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim2.c	/^void TIM2_UpdateRequestConfig(TIM2_UpdateSource_TypeDef TIM2_UpdateSource)$/;"	f
TIM2_UpdateSource_Global	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_UpdateSource_Global = ((uint8_t)0x00),  \/*!< Global Update request source *\/$/;"	e	enum:__anon130
TIM2_UpdateSource_Regular	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^  TIM2_UpdateSource_Regular = ((uint8_t)0x01)   \/*!< Regular Update request source *\/$/;"	e	enum:__anon130
TIM2_UpdateSource_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	/^}TIM2_UpdateSource_TypeDef;$/;"	t	typeref:enum:__anon130
TIM3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1293;"	d
TIM3_ARRPreloadConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_ARRPreloadConfig(FunctionalState NewState)$/;"	f
TIM3_AutomaticOutput_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_AutomaticOutput_Disable   = ((uint8_t)0x00)  \/*!< Automatic Output option disabled *\/$/;"	e	enum:__anon68
TIM3_AutomaticOutput_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_AutomaticOutput_Enable   = ((uint8_t)0x40), \/*!< Automatic Output option enabled *\/$/;"	e	enum:__anon68
TIM3_AutomaticOutput_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_AutomaticOutput_TypeDef;$/;"	t	typeref:enum:__anon68
TIM3_BKRConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_BKRConfig(TIM3_OSSIState_TypeDef TIM3_OSSIState,$/;"	f
TIM3_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1241;"	d
TIM3_BreakPolarity_High	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_BreakPolarity_High = ((uint8_t)0x20),  \/*!<  Break channel polarity = High *\/$/;"	e	enum:__anon67
TIM3_BreakPolarity_Low	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_BreakPolarity_Low = ((uint8_t)0x00)   \/*!<  Break channel polarity = Low *\/$/;"	e	enum:__anon67
TIM3_BreakPolarity_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_BreakPolarity_TypeDef;$/;"	t	typeref:enum:__anon67
TIM3_BreakState_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_BreakState_Disable = ((uint8_t)0x00), \/*!< Break State disabled (break option disabled) *\/$/;"	e	enum:__anon66
TIM3_BreakState_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_BreakState_Enable = ((uint8_t)0x10)  \/*!< Break State enabled (break option enabled) *\/$/;"	e	enum:__anon66
TIM3_BreakState_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_BreakState_TypeDef;$/;"	t	typeref:enum:__anon66
TIM3_CAP_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  TIM3_CAP_IRQn                 = (uint8_t)22,  \/*!< TIM3 input captute\/output compare interrupt  *\/$/;"	e	enum:__anon56
TIM3_CCxCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_CCxCmd(TIM3_Channel_TypeDef TIM3_Channel,$/;"	f
TIM3_Channel_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_Channel_1     = ((uint8_t)0x00),  \/*!< Channel 1*\/$/;"	e	enum:__anon62
TIM3_Channel_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_Channel_2     = ((uint8_t)0x01)   \/*!< Channel 2*\/$/;"	e	enum:__anon62
TIM3_Channel_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_Channel_TypeDef;$/;"	t	typeref:enum:__anon62
TIM3_ClearFlag	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_ClearFlag(TIM3_FLAG_TypeDef TIM3_FLAG)$/;"	f
TIM3_ClearITPendingBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_ClearITPendingBit(TIM3_IT_TypeDef TIM3_IT)$/;"	f
TIM3_Cmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_Cmd(FunctionalState NewState)$/;"	f
TIM3_CounterModeConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_CounterModeConfig(TIM3_CounterMode_TypeDef TIM3_CounterMode)$/;"	f
TIM3_CounterMode_CenterAligned1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_CounterMode_CenterAligned1     = ((uint8_t)0x20), \/*!< Counter Central aligned Mode 1 *\/$/;"	e	enum:__anon63
TIM3_CounterMode_CenterAligned2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_CounterMode_CenterAligned2     = ((uint8_t)0x40), \/*!< Counter Central aligned Mode 2 *\/$/;"	e	enum:__anon63
TIM3_CounterMode_CenterAligned3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_CounterMode_CenterAligned3     = ((uint8_t)0x60)  \/*!< Counter Central aligned Mode 3 *\/$/;"	e	enum:__anon63
TIM3_CounterMode_Down	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_CounterMode_Down               = ((uint8_t)0x10), \/*!< Counter Down Mode *\/$/;"	e	enum:__anon63
TIM3_CounterMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_CounterMode_TypeDef;$/;"	t	typeref:enum:__anon63
TIM3_CounterMode_Up	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_CounterMode_Up                 = ((uint8_t)0x00), \/*!< Counter Up Mode *\/$/;"	e	enum:__anon63
TIM3_CtrlPWMOutputs	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_CtrlPWMOutputs(FunctionalState NewState)$/;"	f
TIM3_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_DeInit(void)$/;"	f
TIM3_ETRClockMode1Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_ETRClockMode1Config(TIM3_ExtTRGPSC_TypeDef TIM3_ExtTRGPrescaler,$/;"	f
TIM3_ETRClockMode2Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_ETRClockMode2Config(TIM3_ExtTRGPSC_TypeDef TIM3_ExtTRGPrescaler,$/;"	f
TIM3_ETRConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_ETRConfig(TIM3_ExtTRGPSC_TypeDef TIM3_ExtTRGPrescaler,$/;"	f
TIM3_EncoderInterfaceConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_EncoderInterfaceConfig(TIM3_EncoderMode_TypeDef TIM3_EncoderMode,$/;"	f
TIM3_EncoderMode_TI1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_EncoderMode_TI1    = ((uint8_t)0x01), \/*!< Encoder mode 1*\/$/;"	e	enum:__anon81
TIM3_EncoderMode_TI12	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_EncoderMode_TI12   = ((uint8_t)0x03)  \/*!< Encoder mode 3*\/$/;"	e	enum:__anon81
TIM3_EncoderMode_TI2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_EncoderMode_TI2    = ((uint8_t)0x02), \/*!< Encoder mode 2*\/$/;"	e	enum:__anon81
TIM3_EncoderMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_EncoderMode_TypeDef;$/;"	t	typeref:enum:__anon81
TIM3_EventSource_Break	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_EventSource_Break    = ((uint8_t)0x80)  \/*!< Break Event*\/$/;"	e	enum:__anon82
TIM3_EventSource_CC1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_EventSource_CC1      = ((uint8_t)0x02), \/*!< Capture Compare Channel1  Event*\/$/;"	e	enum:__anon82
TIM3_EventSource_CC2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_EventSource_CC2      = ((uint8_t)0x04), \/*!< Capture Compare Channel2 Event*\/$/;"	e	enum:__anon82
TIM3_EventSource_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_EventSource_Trigger  = ((uint8_t)0x40), \/*!< Trigger Event*\/$/;"	e	enum:__anon82
TIM3_EventSource_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_EventSource_TypeDef;$/;"	t	typeref:enum:__anon82
TIM3_EventSource_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_EventSource_Update   = ((uint8_t)0x01), \/*!< Update Event*\/$/;"	e	enum:__anon82
TIM3_ExtTRGPSC_DIV2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ExtTRGPSC_DIV2  = ((uint8_t)0x10), \/*!< External Trigger prescaler = 2 (ETRP frequency divided by 2) *\/$/;"	e	enum:__anon76
TIM3_ExtTRGPSC_DIV4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ExtTRGPSC_DIV4  = ((uint8_t)0x20), \/*!< External Trigger prescaler = 4 (ETRP frequency divided by 4) *\/$/;"	e	enum:__anon76
TIM3_ExtTRGPSC_DIV8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ExtTRGPSC_DIV8  = ((uint8_t)0x30)  \/*!< External Trigger prescaler = 8 (ETRP frequency divided by 8) *\/$/;"	e	enum:__anon76
TIM3_ExtTRGPSC_OFF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ExtTRGPSC_OFF   = ((uint8_t)0x00), \/*!< No External Trigger prescaler  *\/$/;"	e	enum:__anon76
TIM3_ExtTRGPSC_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_ExtTRGPSC_TypeDef;$/;"	t	typeref:enum:__anon76
TIM3_ExtTRGPolarity_Inverted	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ExtTRGPolarity_Inverted         = ((uint8_t)0x80), \/*!< External Trigger Polarity = inverted *\/$/;"	e	enum:__anon79
TIM3_ExtTRGPolarity_NonInverted	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ExtTRGPolarity_NonInverted      = ((uint8_t)0x00)  \/*!< External Trigger Polarity = non inverted *\/$/;"	e	enum:__anon79
TIM3_ExtTRGPolarity_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_ExtTRGPolarity_TypeDef;$/;"	t	typeref:enum:__anon79
TIM3_FLAG_Break	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_FLAG_Break     = ((uint16_t)0x0080), \/*!< Break Flag *\/$/;"	e	enum:__anon86
TIM3_FLAG_CC1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_FLAG_CC1       = ((uint16_t)0x0002), \/*!< Capture compare 1 Flag *\/$/;"	e	enum:__anon86
TIM3_FLAG_CC1OF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_FLAG_CC1OF     = ((uint16_t)0x0200), \/*!< Capture compare 1 over capture Flag *\/$/;"	e	enum:__anon86
TIM3_FLAG_CC2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_FLAG_CC2       = ((uint16_t)0x0004), \/*!< Capture compare 2 Flag *\/$/;"	e	enum:__anon86
TIM3_FLAG_CC2OF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_FLAG_CC2OF     = ((uint16_t)0x0400)  \/*!< Capture compare 2 over capture Flag *\/$/;"	e	enum:__anon86
TIM3_FLAG_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_FLAG_Trigger   = ((uint16_t)0x0040), \/*!< Trigger Flag *\/$/;"	e	enum:__anon86
TIM3_FLAG_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_FLAG_TypeDef;$/;"	t	typeref:enum:__anon86
TIM3_FLAG_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_FLAG_Update    = ((uint16_t)0x0001), \/*!< Update Flag *\/$/;"	e	enum:__anon86
TIM3_ForcedAction_Active	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ForcedAction_Active       = ((uint8_t)0x50), \/*!< Output Reference is forced low *\/$/;"	e	enum:__anon58
TIM3_ForcedAction_Inactive	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ForcedAction_Inactive     = ((uint8_t)0x40)  \/*!< Output Reference is forced high *\/$/;"	e	enum:__anon58
TIM3_ForcedAction_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^TIM3_ForcedAction_TypeDef;$/;"	t	typeref:enum:__anon58
TIM3_ForcedOC1Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_ForcedOC1Config(TIM3_ForcedAction_TypeDef TIM3_ForcedAction)$/;"	f
TIM3_ForcedOC2Config	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_ForcedOC2Config(TIM3_ForcedAction_TypeDef TIM3_ForcedAction)$/;"	f
TIM3_GenerateEvent	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_GenerateEvent(TIM3_EventSource_TypeDef TIM3_EventSource)$/;"	f
TIM3_GetCapture1	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^uint16_t TIM3_GetCapture1(void)$/;"	f
TIM3_GetCapture2	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^uint16_t TIM3_GetCapture2(void)$/;"	f
TIM3_GetCounter	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^uint16_t TIM3_GetCounter(void)$/;"	f
TIM3_GetFlagStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^FlagStatus TIM3_GetFlagStatus(TIM3_FLAG_TypeDef TIM3_FLAG)$/;"	f
TIM3_GetITStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^ITStatus TIM3_GetITStatus(TIM3_IT_TypeDef TIM3_IT)$/;"	f
TIM3_GetPrescaler	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^TIM3_Prescaler_TypeDef TIM3_GetPrescaler(void)$/;"	f
TIM3_GetStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^FunctionalState TIM3_GetStatus(void)$/;"	f
TIM3_ICInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_ICInit(TIM3_Channel_TypeDef TIM3_Channel,$/;"	f
TIM3_ICPSC_Div1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ICPSC_Div1 = ((uint8_t)0x00),  \/*!< Input Capture Prescaler = 1 (one capture every 1 event) *\/$/;"	e	enum:__anon74
TIM3_ICPSC_Div2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ICPSC_Div2 = ((uint8_t)0x04),  \/*!< Input Capture Prescaler = 2 (one capture every 2 events) *\/$/;"	e	enum:__anon74
TIM3_ICPSC_Div4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ICPSC_Div4 = ((uint8_t)0x08),  \/*!< Input Capture Prescaler = 4 (one capture every 4 events) *\/$/;"	e	enum:__anon74
TIM3_ICPSC_Div8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ICPSC_Div8 = ((uint8_t)0x0C)   \/*!< Input Capture Prescaler = 8 (one capture every 8 events) *\/$/;"	e	enum:__anon74
TIM3_ICPSC_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_ICPSC_TypeDef;$/;"	t	typeref:enum:__anon74
TIM3_ICPolarity_Falling	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ICPolarity_Falling = ((uint8_t)0x01)  \/*!< Input Capture on Falling Edge*\/$/;"	e	enum:__anon72
TIM3_ICPolarity_Rising	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ICPolarity_Rising = ((uint8_t)0x00), \/*!< Input Capture on Rising Edge*\/$/;"	e	enum:__anon72
TIM3_ICPolarity_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_ICPolarity_TypeDef;$/;"	t	typeref:enum:__anon72
TIM3_ICSelection_DirectTI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ICSelection_DirectTI          = ((uint8_t)0x01), \/*!< Input Capture mapped on the direct input*\/$/;"	e	enum:__anon73
TIM3_ICSelection_IndirectTI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ICSelection_IndirectTI        = ((uint8_t)0x02), \/*!< Input Capture mapped on the indirect input*\/$/;"	e	enum:__anon73
TIM3_ICSelection_TRGI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_ICSelection_TRGI              = ((uint8_t)0x03)  \/*!< Input Capture mapped on the Trigger Input*\/$/;"	e	enum:__anon73
TIM3_ICSelection_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_ICSelection_TypeDef;$/;"	t	typeref:enum:__anon73
TIM3_ITConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_ITConfig(TIM3_IT_TypeDef TIM3_IT, FunctionalState NewState)$/;"	f
TIM3_IT_Break	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_IT_Break         = ((uint8_t)0x80)  \/*!< Break Interrupt*\/$/;"	e	enum:__anon75
TIM3_IT_CC1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_IT_CC1           = ((uint8_t)0x02), \/*!< Capture Compare Channel1 Interrupt*\/$/;"	e	enum:__anon75
TIM3_IT_CC2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_IT_CC2           = ((uint8_t)0x04), \/*!< Capture Compare Channel2 Interrupt*\/$/;"	e	enum:__anon75
TIM3_IT_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_IT_Trigger       = ((uint8_t)0x40), \/*!< Trigger  Interrupt*\/$/;"	e	enum:__anon75
TIM3_IT_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_IT_TypeDef;$/;"	t	typeref:enum:__anon75
TIM3_IT_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_IT_Update        = ((uint8_t)0x01), \/*!< Update Interrupt*\/$/;"	e	enum:__anon75
TIM3_InternalClockConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_InternalClockConfig(void)$/;"	f
TIM3_LockLevel_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_LockLevel_1          = ((uint8_t)0x01), \/*!< Select Lock Level 1  *\/$/;"	e	enum:__anon69
TIM3_LockLevel_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_LockLevel_2          = ((uint8_t)0x02), \/*!< Select Lock Level 2  *\/$/;"	e	enum:__anon69
TIM3_LockLevel_3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_LockLevel_3          = ((uint8_t)0x03)  \/*!< Select Lock Level 3  *\/$/;"	e	enum:__anon69
TIM3_LockLevel_Off	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_LockLevel_Off        = ((uint8_t)0x00), \/*!< Lock option disabled *\/$/;"	e	enum:__anon69
TIM3_LockLevel_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_LockLevel_TypeDef;$/;"	t	typeref:enum:__anon69
TIM3_OC1FastCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_OC1FastCmd(FunctionalState NewState)$/;"	f
TIM3_OC1Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_OC1Init(TIM3_OCMode_TypeDef TIM3_OCMode,$/;"	f
TIM3_OC1PolarityConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_OC1PolarityConfig(TIM3_OCPolarity_TypeDef TIM3_OCPolarity)$/;"	f
TIM3_OC1PreloadConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_OC1PreloadConfig(FunctionalState NewState)$/;"	f
TIM3_OC2FastCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_OC2FastCmd(FunctionalState NewState)$/;"	f
TIM3_OC2Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_OC2Init(TIM3_OCMode_TypeDef TIM3_OCMode,$/;"	f
TIM3_OC2PolarityConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_OC2PolarityConfig(TIM3_OCPolarity_TypeDef TIM3_OCPolarity)$/;"	f
TIM3_OC2PreloadConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_OC2PreloadConfig(FunctionalState NewState)$/;"	f
TIM3_OCIdleState_Reset	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OCIdleState_Reset     = ((uint8_t)0x00), \/*!< Output Compare Idle state  = Reset *\/$/;"	e	enum:__anon71
TIM3_OCIdleState_Set	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OCIdleState_Set       = ((uint8_t)0x01)  \/*!< Output Compare Idle state  = Set *\/$/;"	e	enum:__anon71
TIM3_OCIdleState_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_OCIdleState_TypeDef;$/;"	t	typeref:enum:__anon71
TIM3_OCMode_Active	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OCMode_Active    = ((uint8_t)0x10), \/*!< Active Mode*\/$/;"	e	enum:__anon60
TIM3_OCMode_Inactive	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OCMode_Inactive  = ((uint8_t)0x20), \/*!< Inactive Mode*\/$/;"	e	enum:__anon60
TIM3_OCMode_PWM1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OCMode_PWM1      = ((uint8_t)0x60), \/*!< PWM Mode 1*\/$/;"	e	enum:__anon60
TIM3_OCMode_PWM2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OCMode_PWM2      = ((uint8_t)0x70)  \/*!< PWM Mode 2*\/$/;"	e	enum:__anon60
TIM3_OCMode_Timing	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OCMode_Timing   = ((uint8_t)0x00), \/*!< Timing (Frozen) Mode*\/$/;"	e	enum:__anon60
TIM3_OCMode_Toggle	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OCMode_Toggle    = ((uint8_t)0x30), \/*!< Toggle Mode*\/$/;"	e	enum:__anon60
TIM3_OCMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_OCMode_TypeDef;$/;"	t	typeref:enum:__anon60
TIM3_OCPolarity_High	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OCPolarity_High       = ((uint8_t)0x00), \/*!< Output compare polarity  = High *\/$/;"	e	enum:__anon64
TIM3_OCPolarity_Low	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OCPolarity_Low        = ((uint8_t)0x01)  \/*!< Output compare polarity  = Low *\/$/;"	e	enum:__anon64
TIM3_OCPolarity_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_OCPolarity_TypeDef;$/;"	t	typeref:enum:__anon64
TIM3_OPMode_Repetitive	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OPMode_Repetitive    = ((uint8_t)0x00)  \/*!< Repetitive Pulse mode (OPM inactive) *\/$/;"	e	enum:__anon61
TIM3_OPMode_Single	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OPMode_Single        = ((uint8_t)0x01), \/*!< Single one Pulse mode (OPM Active) *\/$/;"	e	enum:__anon61
TIM3_OPMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_OPMode_TypeDef;$/;"	t	typeref:enum:__anon61
TIM3_OSSIState_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OSSIState_Disable = ((uint8_t)0x00)  \/*!< Off-State Selection for Idle mode disabled  *\/$/;"	e	enum:__anon70
TIM3_OSSIState_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OSSIState_Enable  = ((uint8_t)0x04), \/*!< Off-State Selection for Idle mode enabled  *\/$/;"	e	enum:__anon70
TIM3_OSSIState_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_OSSIState_TypeDef;$/;"	t	typeref:enum:__anon70
TIM3_OutputState_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OutputState_Disable   = ((uint8_t)0x00), \/*!< Output compare State disabled (channel output disabled) *\/$/;"	e	enum:__anon65
TIM3_OutputState_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_OutputState_Enable    = ((uint8_t)0x01)  \/*!< Output compare State enabled (channel output enabled) *\/$/;"	e	enum:__anon65
TIM3_OutputState_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_OutputState_TypeDef;$/;"	t	typeref:enum:__anon65
TIM3_PSCReloadMode_Immediate	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_PSCReloadMode_Immediate     = ((uint8_t)0x01)  \/*!< Prescaler value is reloaded immediatly*\/$/;"	e	enum:__anon80
TIM3_PSCReloadMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_PSCReloadMode_TypeDef;$/;"	t	typeref:enum:__anon80
TIM3_PSCReloadMode_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_PSCReloadMode_Update        = ((uint8_t)0x00), \/*!< Prescaler value is reloaded at every update*\/$/;"	e	enum:__anon80
TIM3_PWMIConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_PWMIConfig(TIM3_Channel_TypeDef TIM3_Channel,$/;"	f
TIM3_PrescalerConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_PrescalerConfig(TIM3_Prescaler_TypeDef TIM3_Prescaler,$/;"	f
TIM3_Prescaler_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_Prescaler_1     = ((uint8_t)0x00), \/*!< Time base Prescaler = 1 (No effect)*\/$/;"	e	enum:__anon59
TIM3_Prescaler_128	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_Prescaler_128   = ((uint8_t)0x07)  \/*!< Time base Prescaler = 128 *\/$/;"	e	enum:__anon59
TIM3_Prescaler_16	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_Prescaler_16    = ((uint8_t)0x04), \/*!< Time base Prescaler = 16 *\/$/;"	e	enum:__anon59
TIM3_Prescaler_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_Prescaler_2     = ((uint8_t)0x01), \/*!< Time base Prescaler = 2 *\/$/;"	e	enum:__anon59
TIM3_Prescaler_32	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_Prescaler_32    = ((uint8_t)0x05), \/*!< Time base Prescaler = 32 *\/$/;"	e	enum:__anon59
TIM3_Prescaler_4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_Prescaler_4     = ((uint8_t)0x02), \/*!< Time base Prescaler = 4 *\/$/;"	e	enum:__anon59
TIM3_Prescaler_64	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_Prescaler_64    = ((uint8_t)0x06), \/*!< Time base Prescaler = 64 *\/$/;"	e	enum:__anon59
TIM3_Prescaler_8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_Prescaler_8     = ((uint8_t)0x03), \/*!< Time base Prescaler = 8 *\/$/;"	e	enum:__anon59
TIM3_Prescaler_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_Prescaler_TypeDef;$/;"	t	typeref:enum:__anon59
TIM3_SelectHallSensor	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SelectHallSensor(FunctionalState NewState)$/;"	f
TIM3_SelectInputTrigger	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SelectInputTrigger(TIM3_TRGSelection_TypeDef TIM3_InputTriggerSource)$/;"	f
TIM3_SelectMasterSlaveMode	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SelectMasterSlaveMode(FunctionalState NewState)$/;"	f
TIM3_SelectOCxM	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SelectOCxM(TIM3_Channel_TypeDef TIM3_Channel,$/;"	f
TIM3_SelectOnePulseMode	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SelectOnePulseMode(TIM3_OPMode_TypeDef TIM3_OPMode)$/;"	f
TIM3_SelectOutputTrigger	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SelectOutputTrigger(TIM3_TRGOSource_TypeDef TIM3_TRGOSource)$/;"	f
TIM3_SelectSlaveMode	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SelectSlaveMode(TIM3_SlaveMode_TypeDef TIM3_SlaveMode)$/;"	f
TIM3_SetAutoreload	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SetAutoreload(uint16_t TIM3_Autoreload)$/;"	f
TIM3_SetCompare1	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SetCompare1(uint16_t TIM3_Compare)$/;"	f
TIM3_SetCompare2	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SetCompare2(uint16_t TIM3_Compare)$/;"	f
TIM3_SetCounter	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SetCounter(uint16_t TIM3_Counter)$/;"	f
TIM3_SetIC1Prescaler	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SetIC1Prescaler(TIM3_ICPSC_TypeDef TIM3_IC1Prescaler)$/;"	f
TIM3_SetIC2Prescaler	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_SetIC2Prescaler(TIM3_ICPSC_TypeDef TIM3_IC2Prescaler)$/;"	f
TIM3_SlaveMode_External1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_SlaveMode_External1   = ((uint8_t)0x07)  \/*!< Slave Mode Selection  = External 1*\/$/;"	e	enum:__anon85
TIM3_SlaveMode_Gated	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_SlaveMode_Gated       = ((uint8_t)0x05), \/*!< Slave Mode Selection  = Gated*\/$/;"	e	enum:__anon85
TIM3_SlaveMode_Reset	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_SlaveMode_Reset       = ((uint8_t)0x04), \/*!< Slave Mode Selection  = Reset*\/$/;"	e	enum:__anon85
TIM3_SlaveMode_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_SlaveMode_Trigger     = ((uint8_t)0x06), \/*!< Slave Mode Selection  = Trigger*\/$/;"	e	enum:__anon85
TIM3_SlaveMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_SlaveMode_TypeDef;$/;"	t	typeref:enum:__anon85
TIM3_TIxExternalCLK1Source_TI1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TIxExternalCLK1Source_TI1       = ((uint8_t)0x50),  \/*!< External Clock mode 1 source = TI1 *\/$/;"	e	enum:__anon78
TIM3_TIxExternalCLK1Source_TI1ED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TIxExternalCLK1Source_TI1ED     = ((uint8_t)0x40),  \/*!< External Clock mode 1 source = TI1ED *\/$/;"	e	enum:__anon78
TIM3_TIxExternalCLK1Source_TI2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TIxExternalCLK1Source_TI2       = ((uint8_t)0x60)   \/*!< External Clock mode 1 source = TI2 *\/$/;"	e	enum:__anon78
TIM3_TIxExternalCLK1Source_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_TIxExternalCLK1Source_TypeDef;$/;"	t	typeref:enum:__anon78
TIM3_TIxExternalClockConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_TIxExternalClockConfig(TIM3_TIxExternalCLK1Source_TypeDef TIM3_TIxExternalCLKSource,$/;"	f
TIM3_TRGOSource_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGOSource_Enable     = ((uint8_t)0x10), \/*!< Trigger Output source = TIM3 is enabled*\/$/;"	e	enum:__anon84
TIM3_TRGOSource_OC1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGOSource_OC1        = ((uint8_t)0x30), \/*!< Trigger Output source = output compare channel1  *\/$/;"	e	enum:__anon84
TIM3_TRGOSource_OC1Ref	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGOSource_OC1Ref     = ((uint8_t)0x40), \/*!< Trigger Output source = output compare channel 1 reference *\/$/;"	e	enum:__anon84
TIM3_TRGOSource_OC2Ref	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGOSource_OC2Ref     = ((uint8_t)0x50)  \/*!< Trigger Output source = output compare channel 2 reference *\/$/;"	e	enum:__anon84
TIM3_TRGOSource_Reset	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGOSource_Reset      = ((uint8_t)0x00), \/*!< Trigger Output source = Reset*\/$/;"	e	enum:__anon84
TIM3_TRGOSource_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_TRGOSource_TypeDef;$/;"	t	typeref:enum:__anon84
TIM3_TRGOSource_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGOSource_Update     = ((uint8_t)0x20), \/*!< Trigger Output source = Update event*\/$/;"	e	enum:__anon84
TIM3_TRGSelection_ETRF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGSelection_ETRF      = ((uint8_t)0x70)  \/*!< TRIG Input source =  ETRF (External Trigger Input ) *\/$/;"	e	enum:__anon77
TIM3_TRGSelection_TI1FP1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGSelection_TI1FP1    = ((uint8_t)0x50), \/*!< TRIG Input source = TI1FP1  (Filtred Timer Input 1) *\/$/;"	e	enum:__anon77
TIM3_TRGSelection_TI1F_ED	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGSelection_TI1F_ED   = ((uint8_t)0x40), \/*!< TRIG Input source = TI1F_ED (TI1 Edge Detector)  *\/$/;"	e	enum:__anon77
TIM3_TRGSelection_TI2FP2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGSelection_TI2FP2    = ((uint8_t)0x60), \/*!< TRIG Input source = TI2FP2 (Filtred Timer Input 2)  *\/$/;"	e	enum:__anon77
TIM3_TRGSelection_TIM2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGSelection_TIM2      = ((uint8_t)0x30),  \/*!< TRIG Input source = TIM2  *\/$/;"	e	enum:__anon77
TIM3_TRGSelection_TIM4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_TRGSelection_TIM4      = ((uint8_t)0x00),  \/*!< TRIG Input source = TIM4  *\/$/;"	e	enum:__anon77
TIM3_TRGSelection_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_TRGSelection_TypeDef;$/;"	t	typeref:enum:__anon77
TIM3_TimeBaseInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_TimeBaseInit(TIM3_Prescaler_TypeDef TIM3_Prescaler,$/;"	f
TIM3_UPD_OVF_TRG_BRK_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  TIM3_UPD_OVF_TRG_BRK_IRQn     = (uint8_t)21,  \/*!< TIM3 overflow interrupt *\/$/;"	e	enum:__anon56
TIM3_UpdateDisableConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_UpdateDisableConfig(FunctionalState NewState)$/;"	f
TIM3_UpdateRequestConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim3.c	/^void TIM3_UpdateRequestConfig(TIM3_UpdateSource_TypeDef TIM3_UpdateSource)$/;"	f
TIM3_UpdateSource_Global	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_UpdateSource_Global  = ((uint8_t)0x00), \/*!< Global Update request source *\/$/;"	e	enum:__anon83
TIM3_UpdateSource_Regular	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^  TIM3_UpdateSource_Regular = ((uint8_t)0x01)  \/*!< Regular Update request source *\/$/;"	e	enum:__anon83
TIM3_UpdateSource_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	/^}TIM3_UpdateSource_TypeDef;$/;"	t	typeref:enum:__anon83
TIM4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1294;"	d
TIM4_ARRPreloadConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_ARRPreloadConfig(FunctionalState NewState)$/;"	f
TIM4_ARR_ARR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1141;"	d
TIM4_ARR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1098;"	d
TIM4_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1242;"	d
TIM4_CNTR_CNT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1135;"	d
TIM4_CNTR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1096;"	d
TIM4_CR1_ARPE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1108;"	d
TIM4_CR1_CEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1112;"	d
TIM4_CR1_OPM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1109;"	d
TIM4_CR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1090;"	d
TIM4_CR1_UDIS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1111;"	d
TIM4_CR1_URS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1110;"	d
TIM4_CR2_MMS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1115;"	d
TIM4_CR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1091;"	d
TIM4_ClearFlag	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_ClearFlag(TIM4_FLAG_TypeDef TIM4_FLAG)$/;"	f
TIM4_ClearITPendingBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_ClearITPendingBit(TIM4_IT_TypeDef TIM4_IT)$/;"	f
TIM4_Cmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_Cmd(FunctionalState NewState)$/;"	f
TIM4_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_DeInit(void)$/;"	f
TIM4_EGR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1095;"	d
TIM4_EGR_TG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1131;"	d
TIM4_EGR_UG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1132;"	d
TIM4_EventSource_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_EventSource_Trigger = ((uint8_t)0x40)  \/*!< Trigger Event*\/$/;"	e	enum:__anon5
TIM4_EventSource_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^}TIM4_EventSource_TypeDef;$/;"	t	typeref:enum:__anon5
TIM4_EventSource_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_EventSource_Update  = ((uint8_t)0x01),  \/*!< Update Event*\/$/;"	e	enum:__anon5
TIM4_FLAG_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_FLAG_Trigger = ((uint8_t)0x40)  \/*!< Trigger Flag *\/$/;"	e	enum:__anon8
TIM4_FLAG_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^}TIM4_FLAG_TypeDef;$/;"	t	typeref:enum:__anon8
TIM4_FLAG_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_FLAG_Update = ((uint8_t)0x01),  \/*!< Update Flag *\/$/;"	e	enum:__anon8
TIM4_GenerateEvent	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_GenerateEvent(TIM4_EventSource_TypeDef TIM4_EventSource)$/;"	f
TIM4_GetCounter	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^uint8_t TIM4_GetCounter(void)$/;"	f
TIM4_GetFlagStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^FlagStatus TIM4_GetFlagStatus(TIM4_FLAG_TypeDef TIM4_FLAG)$/;"	f
TIM4_GetITStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^ITStatus TIM4_GetITStatus(TIM4_IT_TypeDef TIM4_IT)$/;"	f
TIM4_GetPrescaler	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^TIM4_Prescaler_TypeDef TIM4_GetPrescaler(void)$/;"	f
TIM4_GetStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^FunctionalState TIM4_GetStatus(void)$/;"	f
TIM4_IER_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1093;"	d
TIM4_IER_TIE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1123;"	d
TIM4_IER_UIE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1124;"	d
TIM4_ITConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_ITConfig(TIM4_IT_TypeDef TIM4_IT, FunctionalState NewState)$/;"	f
TIM4_IT_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_IT_Trigger = ((uint8_t)0x40)  \/*!< Trigger  Interrupt*\/$/;"	e	enum:__anon9
TIM4_IT_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^}TIM4_IT_TypeDef;$/;"	t	typeref:enum:__anon9
TIM4_IT_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_IT_Update = ((uint8_t)0x01),  \/*!< Update Interrupt*\/$/;"	e	enum:__anon9
TIM4_InternalClockConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_InternalClockConfig(void)$/;"	f
TIM4_OPMode_Repetitive	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_OPMode_Repetitive  = ((uint8_t)0x00)   \/*!< Repetitive Pulse mode (OPM inactive) *\/$/;"	e	enum:__anon2
TIM4_OPMode_Single	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_OPMode_Single    = ((uint8_t)0x01),  \/*!< Single one Pulse mode (OPM Active) *\/$/;"	e	enum:__anon2
TIM4_OPMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^}TIM4_OPMode_TypeDef;$/;"	t	typeref:enum:__anon2
TIM4_PSCR_PSC	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1138;"	d
TIM4_PSCR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1097;"	d
TIM4_PSCReloadMode_Immediate	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_PSCReloadMode_Immediate = ((uint8_t)0x01)  \/*!< Prescaler value is reloaded immediatly*\/$/;"	e	enum:__anon3
TIM4_PSCReloadMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^}TIM4_PSCReloadMode_TypeDef;$/;"	t	typeref:enum:__anon3
TIM4_PSCReloadMode_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_PSCReloadMode_Update     = ((uint8_t)0x00), \/*!< Prescaler value is reloaded at every update*\/$/;"	e	enum:__anon3
TIM4_PrescalerConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_PrescalerConfig(TIM4_Prescaler_TypeDef TIM4_Prescaler,$/;"	f
TIM4_Prescaler_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_1    = ((uint8_t)0x00), \/*!< Time base Prescaler = 1 (No effect)*\/$/;"	e	enum:__anon1
TIM4_Prescaler_1024	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_1024  = ((uint8_t)0x0A),  \/*!< Time base Prescaler = 1024 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_128	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_128   = ((uint8_t)0x07),  \/*!< Time base Prescaler = 128 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_16	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_16    = ((uint8_t)0x04),  \/*!< Time base Prescaler = 16 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_16384	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_16384 = ((uint8_t)0x0E),  \/*!< Time base Prescaler = 16384 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_2     = ((uint8_t)0x01),  \/*!< Time base Prescaler = 2 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_2048	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_2048  = ((uint8_t)0x0B),  \/*!< Time base Prescaler = 2048 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_256	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_256   = ((uint8_t)0x08),  \/*!< Time base Prescaler = 256 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_32	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_32    = ((uint8_t)0x05),  \/*!< Time base Prescaler = 32 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_32768	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_32768 = ((uint8_t)0x0F)   \/*!< Time base Prescaler = 32768 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_4     = ((uint8_t)0x02),  \/*!< Time base Prescaler = 4 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_4096	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_4096  = ((uint8_t)0x0C),  \/*!< Time base Prescaler = 4096 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_512	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_512   = ((uint8_t)0x09),  \/*!< Time base Prescaler = 512 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_64	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_64    = ((uint8_t)0x06),  \/*!< Time base Prescaler = 64 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_8    = ((uint8_t)0x03),  \/*!< Time base Prescaler = 8 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_8192	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_Prescaler_8192  = ((uint8_t)0x0D),  \/*!< Time base Prescaler = 8196 *\/$/;"	e	enum:__anon1
TIM4_Prescaler_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^}TIM4_Prescaler_TypeDef;$/;"	t	typeref:enum:__anon1
TIM4_SLAVEMODE_DISABLE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_SLAVEMODE_DISABLE  = ((uint8_t)0x00),  \/*!< Disable slave mode to clock the prescaler directly with the internal clock *\/$/;"	e	enum:__anon7
TIM4_SMCR_MSM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1120;"	d
TIM4_SMCR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1092;"	d
TIM4_SMCR_SMS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1119;"	d
TIM4_SMCR_TS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1118;"	d
TIM4_SR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1094;"	d
TIM4_SR1_TIF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1127;"	d
TIM4_SR1_UIF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1128;"	d
TIM4_SelectInputTrigger	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_SelectInputTrigger(TIM4_TRGSelection_TypeDef TIM4_InputTriggerSource)$/;"	f
TIM4_SelectMasterSlaveMode	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_SelectMasterSlaveMode(FunctionalState NewState)$/;"	f
TIM4_SelectOnePulseMode	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_SelectOnePulseMode(TIM4_OPMode_TypeDef TIM4_OPMode)$/;"	f
TIM4_SelectOutputTrigger	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_SelectOutputTrigger(TIM4_TRGOSource_TypeDef TIM4_TRGOSource)$/;"	f
TIM4_SelectSlaveMode	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_SelectSlaveMode(TIM4_SlaveMode_TypeDef TIM4_SlaveMode)$/;"	f
TIM4_SetAutoreload	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_SetAutoreload(uint8_t TIM4_Autoreload)$/;"	f
TIM4_SetCounter	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_SetCounter(uint8_t TIM4_Counter)$/;"	f
TIM4_SlaveMode_External1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_SlaveMode_External1 = ((uint8_t)0x07)  \/*!< Slave Mode Selection  = External 1*\/$/;"	e	enum:__anon7
TIM4_SlaveMode_Gated	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_SlaveMode_Gated   = ((uint8_t)0x05),  \/*!< Slave Mode Selection  = Gated*\/$/;"	e	enum:__anon7
TIM4_SlaveMode_Reset	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_SlaveMode_Reset   = ((uint8_t)0x04),  \/*!< Slave Mode Selection  = Reset*\/$/;"	e	enum:__anon7
TIM4_SlaveMode_Trigger	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_SlaveMode_Trigger  = ((uint8_t)0x06),  \/*!< Slave Mode Selection  = Trigger*\/$/;"	e	enum:__anon7
TIM4_SlaveMode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^}TIM4_SlaveMode_TypeDef;$/;"	t	typeref:enum:__anon7
TIM4_TRGOSource_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_TRGOSource_Enable = ((uint8_t)0x10),  \/*!< Trigger Output source = TIM2 is enabled*\/$/;"	e	enum:__anon6
TIM4_TRGOSource_Reset	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_TRGOSource_Reset  = ((uint8_t)0x00),  \/*!< Trigger Output source = Reset*\/$/;"	e	enum:__anon6
TIM4_TRGOSource_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^}TIM4_TRGOSource_TypeDef;$/;"	t	typeref:enum:__anon6
TIM4_TRGOSource_Update	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_TRGOSource_Update = ((uint8_t)0x20)  \/*!< Trigger Output source = Update event*\/$/;"	e	enum:__anon6
TIM4_TRGSelection_TIM2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_TRGSelection_TIM2 = ((uint8_t)0x30) \/*!< TRIG Input source =  TIM2 TRIG Output  *\/$/;"	e	enum:__anon10
TIM4_TRGSelection_TIM3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_TRGSelection_TIM3 = ((uint8_t)0x20),\/*!< TRIG Input source =  TIM3 TRIG Output  *\/$/;"	e	enum:__anon10
TIM4_TRGSelection_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^}TIM4_TRGSelection_TypeDef;$/;"	t	typeref:enum:__anon10
TIM4_TimeBaseInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_TimeBaseInit(TIM4_Prescaler_TypeDef TIM4_Prescaler,$/;"	f
TIM4_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^TIM4_TypeDef;$/;"	t	typeref:struct:TIM4_struct
TIM4_UPD_OVF_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  TIM4_UPD_OVF_IRQn             = (uint8_t)25,  \/*!< TIM4 overflow interrupt *\/$/;"	e	enum:__anon56
TIM4_UpdateDisableConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_UpdateDisableConfig(FunctionalState NewState)$/;"	f
TIM4_UpdateRequestConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_tim4.c	/^void TIM4_UpdateRequestConfig(TIM4_UpdateSource_TypeDef TIM4_UpdateSource)$/;"	f
TIM4_UpdateSource_Global	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_UpdateSource_Global = ((uint8_t)0x00), \/*!< Global Update request source *\/$/;"	e	enum:__anon4
TIM4_UpdateSource_Regular	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^  TIM4_UpdateSource_Regular = ((uint8_t)0x01)  \/*!< Regular Update request source *\/$/;"	e	enum:__anon4
TIM4_UpdateSource_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	/^}TIM4_UpdateSource_TypeDef;$/;"	t	typeref:enum:__anon4
TIM4_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct TIM4_struct$/;"	s
TIM_ARRH_ARR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1039;"	d
TIM_ARRH_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	947;"	d
TIM_ARRL_ARR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1040;"	d
TIM_ARRL_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	948;"	d
TIM_BKR_AOE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1054;"	d
TIM_BKR_BKE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1056;"	d
TIM_BKR_BKP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1055;"	d
TIM_BKR_LOCK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1058;"	d
TIM_BKR_MOE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1053;"	d
TIM_BKR_OSSI	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1057;"	d
TIM_BKR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	955;"	d
TIM_CCER1_CC1E	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1029;"	d
TIM_CCER1_CC1P	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1028;"	d
TIM_CCER1_CC2E	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1027;"	d
TIM_CCER1_CC2P	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1026;"	d
TIM_CCER1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	941;"	d
TIM_CCMR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	938;"	d
TIM_CCMR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	939;"	d
TIM_CCMR_CCxS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1022;"	d
TIM_CCMR_ICxF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1018;"	d
TIM_CCMR_ICxPSC	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1017;"	d
TIM_CCMR_OCM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1019;"	d
TIM_CCMR_OCxFE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1021;"	d
TIM_CCMR_OCxPE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1020;"	d
TIM_CCMR_TIxDirect_Set	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1023;"	d
TIM_CCR1H_CCR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1044;"	d
TIM_CCR1H_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	950;"	d
TIM_CCR1L_CCR1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1045;"	d
TIM_CCR1L_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	951;"	d
TIM_CCR2H_CCR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1048;"	d
TIM_CCR2H_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	952;"	d
TIM_CCR2L_CCR2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1049;"	d
TIM_CCR2L_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	953;"	d
TIM_CNTRH_CNT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1032;"	d
TIM_CNTRH_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	943;"	d
TIM_CNTRL_CNT	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1033;"	d
TIM_CNTRL_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	944;"	d
TIM_CR1_ARPE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	966;"	d
TIM_CR1_CEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	972;"	d
TIM_CR1_CMS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	967;"	d
TIM_CR1_DIR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	968;"	d
TIM_CR1_OPM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	969;"	d
TIM_CR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	930;"	d
TIM_CR1_UDIS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	971;"	d
TIM_CR1_URS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	970;"	d
TIM_CR2_MMS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	976;"	d
TIM_CR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	931;"	d
TIM_CR2_TI1S	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	975;"	d
TIM_EGR_BG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1010;"	d
TIM_EGR_CC1G	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1013;"	d
TIM_EGR_CC2G	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1012;"	d
TIM_EGR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	937;"	d
TIM_EGR_TG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1011;"	d
TIM_EGR_UG	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1014;"	d
TIM_ETR_ECE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	985;"	d
TIM_ETR_ETF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	988;"	d
TIM_ETR_ETP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	986;"	d
TIM_ETR_ETPS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	987;"	d
TIM_ETR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	933;"	d
TIM_IER_BIE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	992;"	d
TIM_IER_CC1IE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	995;"	d
TIM_IER_CC2IE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	994;"	d
TIM_IER_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	934;"	d
TIM_IER_TIE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	993;"	d
TIM_IER_UIE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	996;"	d
TIM_OISR_OIS1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1062;"	d
TIM_OISR_OIS2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1061;"	d
TIM_OISR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	956;"	d
TIM_PSCR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	946;"	d
TIM_PSC_PSC	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1036;"	d
TIM_SMCR_MSM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	979;"	d
TIM_SMCR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	932;"	d
TIM_SMCR_SMS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	981;"	d
TIM_SMCR_TS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	980;"	d
TIM_SR1_BIF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	999;"	d
TIM_SR1_CC1IF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1002;"	d
TIM_SR1_CC2IF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1001;"	d
TIM_SR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	935;"	d
TIM_SR1_TIF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1000;"	d
TIM_SR1_UIF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1003;"	d
TIM_SR2_CC1OF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1007;"	d
TIM_SR2_CC2OF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1006;"	d
TIM_SR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	936;"	d
TIM_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^TIM_TypeDef;$/;"	t	typeref:struct:TIM_struct
TIM_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct TIM_struct$/;"	s
TINY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	57;"	d
TINY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	63;"	d
TINY	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	70;"	d
TRISER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^  __IO uint8_t TRISER; \/*!< I2C maximum rise time register *\/$/;"	m	struct:I2C_struct
TRUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {FALSE = 0, TRUE = !FALSE} bool;$/;"	e	enum:__anon12
U16_MAX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	163;"	d
U32_MAX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	166;"	d
U8_MAX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	160;"	d
USART	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1291;"	d
USART_ADDRESS_MAX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	277;"	d
USART_BRR1_DIVM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1194;"	d
USART_BRR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1172;"	d
USART_BRR2_DIVF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1196;"	d
USART_BRR2_DIVM	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1195;"	d
USART_BRR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1173;"	d
USART_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1238;"	d
USART_CPHA_1Edge	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_CPHA_1Edge     = (uint8_t)0x00,  \/*!< 0x00 The first clock transition is the first data capture edge*\/$/;"	e	enum:__anon44
USART_CPHA_2Edge	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_CPHA_2Edge     = (uint8_t)0x02   \/*!< 0x02 The second clock transition is the first data capture edge*\/$/;"	e	enum:__anon44
USART_CPHA_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^} USART_CPHA_TypeDef;$/;"	t	typeref:enum:__anon44
USART_CPOL_High	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_CPOL_High     = (uint8_t)0x04   \/*!< 0x04 SCK to 1 when idle.*\/$/;"	e	enum:__anon43
USART_CPOL_Low	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_CPOL_Low      = (uint8_t)0x00,  \/*!< 0x00 SCK to 0 when idle *\/$/;"	e	enum:__anon43
USART_CPOL_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^} USART_CPOL_TypeDef;$/;"	t	typeref:enum:__anon43
USART_CR1_M	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1200;"	d
USART_CR1_PCEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1202;"	d
USART_CR1_PIEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1204;"	d
USART_CR1_PS	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1203;"	d
USART_CR1_R8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1197;"	d
USART_CR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1174;"	d
USART_CR1_T8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1198;"	d
USART_CR1_USARTD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1199;"	d
USART_CR1_WAKE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1201;"	d
USART_CR2_ILIEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1208;"	d
USART_CR2_REN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1210;"	d
USART_CR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1175;"	d
USART_CR2_RIEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1207;"	d
USART_CR2_RWU	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1211;"	d
USART_CR2_SBK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1212;"	d
USART_CR2_TCIEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1206;"	d
USART_CR2_TEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1209;"	d
USART_CR2_TIEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1205;"	d
USART_CR3_CLKEN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1215;"	d
USART_CR3_CPHA	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1217;"	d
USART_CR3_CPOL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1216;"	d
USART_CR3_LBCL	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1218;"	d
USART_CR3_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1176;"	d
USART_CR3_Reserved	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1213;"	d
USART_CR3_STOP	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1214;"	d
USART_CR4_ADD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1220;"	d
USART_CR4_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1177;"	d
USART_CR4_Reserved	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1219;"	d
USART_ClearFlag	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_ClearFlag(void)$/;"	f
USART_ClearITPendingBit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_ClearITPendingBit(void)$/;"	f
USART_ClockInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_ClockInit(USART_Clock_TypeDef USART_Clock, USART_CPOL_TypeDef USART_CPOL,$/;"	f
USART_Clock_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_Clock_Disable    = (uint8_t)0x00,  \/*!< 0x00 SLK pin disabled *\/$/;"	e	enum:__anon42
USART_Clock_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_Clock_Enable     = (uint8_t)0x08   \/*!< 0x08 SLK pin enabled *\/$/;"	e	enum:__anon42
USART_Clock_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^} USART_Clock_TypeDef;$/;"	t	typeref:enum:__anon42
USART_Cmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_Cmd(FunctionalState NewState)$/;"	f
USART_DATA_9BITS_MAX	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	285;"	d
USART_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_DeInit(void)$/;"	f
USART_FLAG_FE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_FLAG_FE    = (uint16_t)0x0002, \/*!< Framing Error flag *\/$/;"	e	enum:__anon35
USART_FLAG_IDLE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_FLAG_IDLE  = (uint16_t)0x0010, \/*!< Idle line detected flag *\/$/;"	e	enum:__anon35
USART_FLAG_NF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_FLAG_NF    = (uint16_t)0x0004, \/*!< Noise error flag *\/$/;"	e	enum:__anon35
USART_FLAG_OR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_FLAG_OR    = (uint16_t)0x0008, \/*!< OverRun error flag *\/$/;"	e	enum:__anon35
USART_FLAG_PE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_FLAG_PE    = (uint16_t)0x0001, \/*!< Parity Error flag *\/$/;"	e	enum:__anon35
USART_FLAG_RXNE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_FLAG_RXNE  = (uint16_t)0x0020, \/*!< Read Data Register Not Empty flag *\/$/;"	e	enum:__anon35
USART_FLAG_SBK	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_FLAG_SBK   = (uint16_t)0x0101  \/*!< Send Break characters Flag *\/$/;"	e	enum:__anon35
USART_FLAG_TC	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_FLAG_TC    = (uint16_t)0x0040, \/*!< Transmission Complete flag *\/$/;"	e	enum:__anon35
USART_FLAG_TXE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^typedef enum { USART_FLAG_TXE   = (uint16_t)0x0080, \/*!< Transmit Data Register Empty flag *\/$/;"	e	enum:__anon35
USART_FLAG_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^             } USART_FLAG_TypeDef;$/;"	t	typeref:enum:__anon35
USART_GetFlagStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^FlagStatus USART_GetFlagStatus(USART_FLAG_TypeDef USART_FLAG)$/;"	f
USART_GetITStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^ITStatus USART_GetITStatus(USART_IT_TypeDef USART_IT)$/;"	f
USART_ITConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_ITConfig(USART_IT_TypeDef USART_IT, FunctionalState NewState)$/;"	f
USART_IT_IDLE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_IT_IDLE       = (uint16_t)0x0244, \/*!< IDLE line interrupt *\/$/;"	e	enum:__anon36
USART_IT_OR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_IT_OR         = (uint16_t)0x0235, \/*!< Overrun Error interrupt *\/$/;"	e	enum:__anon36
USART_IT_PE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_IT_PE         = (uint16_t)0x0100 \/*!< Parity Error interrupt *\/$/;"	e	enum:__anon36
USART_IT_RXNE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_IT_RXNE       = (uint16_t)0x0255, \/*!< Receive interrupt *\/$/;"	e	enum:__anon36
USART_IT_TC	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^               USART_IT_TC         = (uint16_t)0x0266, \/*!< Transmission Complete interrupt *\/$/;"	e	enum:__anon36
USART_IT_TXE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^typedef enum { USART_IT_TXE        = (uint16_t)0x0277, \/*!< Transmit interrupt *\/$/;"	e	enum:__anon36
USART_IT_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^             } USART_IT_TypeDef;$/;"	t	typeref:enum:__anon36
USART_Init	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_Init(uint32_t BaudRate, USART_WordLength_TypeDef USART_WordLength,$/;"	f
USART_LastBit_Disable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_LastBit_Disable  = (uint8_t)0x00,  \/*!< 0x00 The clock pulse of the last data bit is not output to the SCLK pin.*\/$/;"	e	enum:__anon45
USART_LastBit_Enable	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_LastBit_Enable   = (uint8_t)0x01   \/*!< 0x02 The clock pulse of the last data bit is output to the SCLK pin.*\/$/;"	e	enum:__anon45
USART_LastBit_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^} USART_LastBit_TypeDef;$/;"	t	typeref:enum:__anon45
USART_Mode_Rx	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_Mode_Rx    = (uint8_t)0x04,  \/*!< 0x04 Receive Enable *\/$/;"	e	enum:__anon41
USART_Mode_Tx	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_Mode_Tx    = (uint8_t)0x08   \/*!< 0x08 Transmit Enable *\/$/;"	e	enum:__anon41
USART_Mode_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^} USART_Mode_TypeDef;$/;"	t	typeref:enum:__anon41
USART_Parity_Even	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_Parity_Even = (uint8_t)0x04,      \/*!< Even Parity*\/$/;"	e	enum:__anon39
USART_Parity_No	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_Parity_No   = (uint8_t)0x00,      \/*!< No Parity*\/$/;"	e	enum:__anon39
USART_Parity_Odd	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_Parity_Odd = (uint8_t)0x06       \/*!< Odd Parity*\/$/;"	e	enum:__anon39
USART_Parity_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^} USART_Parity_TypeDef;$/;"	t	typeref:enum:__anon39
USART_RX_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  USART_RX_IRQn                 = (uint8_t)28,  \/*!< USART RX interrupt *\/$/;"	e	enum:__anon56
USART_ReceiveData8	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^uint8_t USART_ReceiveData8(void)$/;"	f
USART_ReceiveData9	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^uint16_t USART_ReceiveData9(void)$/;"	f
USART_ReceiverWakeUpCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_ReceiverWakeUpCmd(FunctionalState NewState)$/;"	f
USART_SR_FE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1192;"	d
USART_SR_IDLE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1189;"	d
USART_SR_NF	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1191;"	d
USART_SR_OR	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1190;"	d
USART_SR_PE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1193;"	d
USART_SR_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1171;"	d
USART_SR_RXNE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1188;"	d
USART_SR_TC	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1187;"	d
USART_SR_TXE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1186;"	d
USART_SendBreak	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_SendBreak(void)$/;"	f
USART_SendData8	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_SendData8(uint8_t Data)$/;"	f
USART_SendData9	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_SendData9(uint16_t Data)$/;"	f
USART_SetAddress	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_SetAddress(uint8_t Address)$/;"	f
USART_StopBits_1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_StopBits_1   = (uint8_t)0x00,   \/*!< One stop bit is  transmitted at the end of frame *\/$/;"	e	enum:__anon38
USART_StopBits_2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_StopBits_2   = (uint8_t)0x20    \/*!< Two stop bits are  transmitted at the end of frame *\/$/;"	e	enum:__anon38
USART_StopBits_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^} USART_StopBits_TypeDef;$/;"	t	typeref:enum:__anon38
USART_TX_IRQn	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	/^  USART_TX_IRQn                 = (uint8_t)27,  \/*!< USART TX interrupt *\/$/;"	e	enum:__anon56
USART_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^USART_TypeDef;$/;"	t	typeref:struct:USART_struct
USART_WakeUpConfig	./STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c	/^void USART_WakeUpConfig(USART_WakeUp_TypeDef USART_WakeUp)$/;"	f
USART_WakeUp_AddressMark	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_WakeUp_AddressMark    = (uint8_t)0x08  \/*!< 0x02 Address Mark wake up *\/$/;"	e	enum:__anon37
USART_WakeUp_IdleLine	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_WakeUp_IdleLine      = (uint8_t)0x00, \/*!< 0x01 Idle Line wake up *\/$/;"	e	enum:__anon37
USART_WakeUp_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^} USART_WakeUp_TypeDef;$/;"	t	typeref:enum:__anon37
USART_WordLength_8D	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_WordLength_8D = (uint8_t)0x00,  \/*!< 0x00 8 bits Data *\/$/;"	e	enum:__anon40
USART_WordLength_9D	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^  USART_WordLength_9D = (uint8_t)0x10   \/*!< 0x10 9 bits Data *\/$/;"	e	enum:__anon40
USART_WordLength_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	/^} USART_WordLength_TypeDef;$/;"	t	typeref:enum:__anon40
USART_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct USART_struct$/;"	s
USE_STDPERIPH_DRIVER	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	51;"	d
VECTOR_ID	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1359;"	d
ValBit	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1402;"	d
WAK_GPIO_PIN	./main.c	64;"	d	file:
WAK_GPIO_PORT	./main.c	63;"	d	file:
WFE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1286;"	d
WFE_BaseAddress	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1250;"	d
WFE_CR1_EXTI_EV0	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	763;"	d
WFE_CR1_EXTI_EV1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	762;"	d
WFE_CR1_EXTI_EV2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	761;"	d
WFE_CR1_EXTI_EV3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	760;"	d
WFE_CR1_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	750;"	d
WFE_CR1_TIM2_EV0	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	765;"	d
WFE_CR1_TIM2_EV1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	764;"	d
WFE_CR2_EXTI_EV4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	772;"	d
WFE_CR2_EXTI_EV5	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	771;"	d
WFE_CR2_EXTI_EV6	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	770;"	d
WFE_CR2_EXTI_EV7	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	769;"	d
WFE_CR2_EXTI_EVB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	768;"	d
WFE_CR2_EXTI_EVD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	767;"	d
WFE_CR2_RESET_VALUE	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	751;"	d
WFE_DeInit	./STM8L10x_StdPeriph_Driver/src/stm8l10x_wfe.c	/^void WFE_DeInit(void)$/;"	f
WFE_GetWakeUpSourceEventStatus	./STM8L10x_StdPeriph_Driver/src/stm8l10x_wfe.c	/^FunctionalState WFE_GetWakeUpSourceEventStatus(WFE_Source_TypeDef WFE_Source)$/;"	f
WFE_Source_EXTI_EV0	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_EXTI_EV0   = (uint16_t)0x0110, \/*!< I\/O port interrupt from Pins 0          *\/$/;"	e	enum:__anon34
WFE_Source_EXTI_EV1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_EXTI_EV1   = (uint16_t)0x0120, \/*!< I\/O port interrupt from Pins 1          *\/$/;"	e	enum:__anon34
WFE_Source_EXTI_EV2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_EXTI_EV2   = (uint16_t)0x0140, \/*!< I\/O port interrupt from Pins 2          *\/$/;"	e	enum:__anon34
WFE_Source_EXTI_EV3	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_EXTI_EV3   = (uint16_t)0x0180, \/*!< I\/O port interrupt from Pins 3          *\/$/;"	e	enum:__anon34
WFE_Source_EXTI_EV4	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_EXTI_EV4   = (uint16_t)0x0201, \/*!< I\/O port interrupt from Pins 4          *\/$/;"	e	enum:__anon34
WFE_Source_EXTI_EV5	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_EXTI_EV5   = (uint16_t)0x0202, \/*!< I\/O port interrupt from Pins 5          *\/$/;"	e	enum:__anon34
WFE_Source_EXTI_EV6	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_EXTI_EV6   = (uint16_t)0x0204, \/*!< I\/O port interrupt from Pins 6          *\/$/;"	e	enum:__anon34
WFE_Source_EXTI_EV7	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_EXTI_EV7   = (uint16_t)0x0208, \/*!< I\/O port interrupt from Pins 7          *\/$/;"	e	enum:__anon34
WFE_Source_EXTI_EVB	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_EXTI_EVB   = (uint16_t)0x0210, \/*!< I\/O port interrupt from port B          *\/$/;"	e	enum:__anon34
WFE_Source_EXTI_EVD	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_EXTI_EVD   = (uint16_t)0x0220 \/*!< I\/O port interrupt from Pins D          *\/$/;"	e	enum:__anon34
WFE_Source_TIM2_EV0	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_TIM2_EV0   = (uint16_t)0x0101, \/*!< Tim2 Upadte\/Trigger and Break interrupt *\/$/;"	e	enum:__anon34
WFE_Source_TIM2_EV1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^  WFE_Source_TIM2_EV1   = (uint16_t)0x0102, \/*!< Tim2 Capture\/Compare interrupt          *\/$/;"	e	enum:__anon34
WFE_Source_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	/^} WFE_Source_TypeDef;$/;"	t	typeref:enum:__anon34
WFE_TypeDef	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^WFE_TypeDef;$/;"	t	typeref:struct:WFE_struct
WFE_WakeUpSourceEventCmd	./STM8L10x_StdPeriph_Driver/src/stm8l10x_wfe.c	/^void WFE_WakeUpSourceEventCmd(WFE_Source_TypeDef WFE_Source, FunctionalState NewState)$/;"	f
WFE_struct	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef struct WFE_struct$/;"	s
_COSMIC_	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	38;"	d
_IAR_	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	42;"	d
_RAISONANCE_	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	40;"	d
__CONST	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	78;"	d
__I	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	126;"	d
__IO	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	128;"	d
__O	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	127;"	d
__STM8L10X_AWU_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_awu.h	31;"	d
__STM8L10X_BEEP_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_beep.h	31;"	d
__STM8L10X_CLK_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_clk.h	31;"	d
__STM8L10X_EXTI_H__	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_exti.h	31;"	d
__STM8L10X_FLASH_H__	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_flash.h	31;"	d
__STM8L10X_GPIO_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_gpio.h	31;"	d
__STM8L10X_ITC_H__	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_itc.h	31;"	d
__STM8L10X_IWDG_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_iwdg.h	31;"	d
__STM8L10X_RST_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_rst.h	31;"	d
__STM8L10X_SPI_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_spi.h	31;"	d
__STM8L10X_STDPERIPH_VERSION	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	105;"	d
__STM8L10X_STDPERIPH_VERSION_MAIN	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	101;"	d
__STM8L10X_STDPERIPH_VERSION_RC	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	104;"	d
__STM8L10X_STDPERIPH_VERSION_SUB1	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	102;"	d
__STM8L10X_STDPERIPH_VERSION_SUB2	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	103;"	d
__STM8L10X_TIM2_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim2.h	31;"	d
__STM8L10X_TIM3_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim3.h	31;"	d
__STM8L10X_TIM4_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_tim4.h	31;"	d
__STM8L10X_USART_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_usart.h	31;"	d
__STM8L10X_WFE_H__	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_wfe.h	31;"	d
__STM8L10x_COMP_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_comp.h	31;"	d
__STM8L10x_CONF_H	./stm8l10x_conf.h	30;"	d
__STM8L10x_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	30;"	d
__STM8L10x_I2C_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_i2c.h	31;"	d
__STM8L10x_IRTIM_H	./STM8L10x_StdPeriph_Driver/inc/stm8l10x_irtim.h	31;"	d
__STM8L10x_IT_H	./stm8l10x_it.h	30;"	d
assert_param	./stm8l10x_conf.h	72;"	d
assert_param	./stm8l10x_conf.h	76;"	d
bool	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef enum {FALSE = 0, TRUE = !FALSE} bool;$/;"	t	typeref:enum:__anon12
clock_init	./main.c	/^static void  clock_init(CLK_MasterPrescaler_TypeDef div) {$/;"	f	file:
delay_count	./main.c	/^static 	int delay_count                         = 1000;   $/;"	v	file:
disableInterrupts	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1314;"	d
disableInterrupts	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1324;"	d
disableInterrupts	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1335;"	d
disable_int	./main.c	/^static void disable_int() {$/;"	f	file:
enableInterrupts	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1313;"	d
enableInterrupts	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1323;"	d
enableInterrupts	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1334;"	d
enable_int	./main.c	/^static void enable_int() {$/;"	f	file:
event	./main.c	/^static u8 event					= 0;$/;"	v	file:
ext_init	./main.c	/^static void ext_init() {$/;"	f	file:
flen	./main.c	/^static u8 flen = 0;$/;"	v	file:
fmaster	./main.c	/^static uint32_t   fmaster =0;$/;"	v	file:
frame	./main.c	/^static u8 frame[MAX_FRAME_LEN - 5];$/;"	v	file:
halt	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1321;"	d
halt	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1331;"	d
halt	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1342;"	d
has_person	./main_bak.c	/^static u8 has_person = 0;$/;"	v	file:
hexPrintf	./main.c	/^static void hexPrintf(u8 data)$/;"	f	file:
int16_t	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef   signed short    int16_t;$/;"	t
int32_t	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef   signed long     int32_t;$/;"	t
int8_t	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef   signed char     int8_t;$/;"	t
io_init	./main.c	/^static void io_init() {$/;"	f	file:
key_init	./main.c	/^static void key_init() {$/;"	f	file:
key_pressed	./main_bak.c	/^static u8 key_pressed;$/;"	v	file:
led_disable	./main.c	/^stativ void led_disable() {$/;"	f
led_enable	./main.c	/^static void led_enable() {$/;"	f	file:
led_init	./main.c	/^static void led_init() {$/;"	f	file:
led_off	./main.c	/^static void led_off() {$/;"	f	file:
led_on	./main.c	/^static void led_on() {$/;"	f	file:
led_toggle	./main.c	/^static void led_toggle() {$/;"	f	file:
len	./main.c	/^static u8 len = 0;$/;"	v	file:
main	./main.c	/^int main() {$/;"	f
main	./main_bak.c	/^int main() {$/;"	f
mdelay	./main.c	/^static void mdelay(__IO uint16_t ms) {$/;"	f	file:
min_timeout_15	./main_bak.c	/^static u8 min_timeout_15	= 0;$/;"	v	file:
min_timeout_2	./main_bak.c	/^static u8 min_timeout_2		= 0;$/;"	v	file:
msg_frame_send	./main.c	/^static void msg_frame_send(u8 cmd1, u8 cmd2, u8 *msg, u8 len) {$/;"	f	file:
msg_init	./main.c	/^static void msg_init() {$/;"	f	file:
msg_post	./main.c	/^static void msg_post(u8 x, u8 y) {$/;"	f	file:
msg_post_done	./main.c	/^static void msg_post_done() {$/;"	f	file:
msg_post_key	./main.c	/^static void msg_post_key() {$/;"	f	file:
msg_post_msg	./main.c	/^static void msg_post_msg(u8 cmd1, u8 cmd2, u8 *msg, u8 len) {$/;"	f	file:
msg_post_pir	./main.c	/^static void msg_post_pir(u8 pir) {$/;"	f	file:
nop	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1317;"	d
nop	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1327;"	d
nop	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1338;"	d
pir	./main_bak.c	/^static u8 pir;$/;"	v	file:
pir_init	./main.c	/^static void pir_init() {$/;"	f	file:
pir_old	./main_bak.c	/^static u8 pir_old;$/;"	v	file:
post_msg	./main_bak.c	/^void post_msg(u8 x, u8 y) {$/;"	f
rim	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1315;"	d
rim	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1325;"	d
rim	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1336;"	d
rlen	./main.c	/^static u8 rlen = 0;$/;"	v	file:
s16	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef int16_t s16;$/;"	t
s32	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef int32_t  s32;$/;"	t
s8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef int8_t  s8;$/;"	t
sim	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1316;"	d
sim	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1326;"	d
sim	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1337;"	d
sleep	./main.c	/^static void sleep(AWU_Timebase_TypeDef ms) {$/;"	f	file:
sleep_60s	./main.c	/^static void sleep_60s()$/;"	f	file:
sleep_init	./main.c	/^static void sleep_init() {$/;"	f	file:
state	./main.c	/^static u8 state					= S_NO_PERSON;$/;"	v	file:
state_reset	./main.c	/^static void state_reset() {$/;"	f	file:
sts	./main.c	/^static u8 sts = 0;$/;"	v	file:
sum	./main.c	/^static u8 sum = 0;$/;"	v	file:
test_init	./main.c	/^static void test_init(void) {$/;"	f	file:
test_msg_led	./main.c	/^static void test_msg_led(u8 on) {$/;"	f	file:
timcnt	./main.c	/^static u8 timcnt				= 0;$/;"	v	file:
timcnt_has2no	./main.c	/^static u8 timcnt_has2no	= 0;$/;"	v	file:
trap	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1318;"	d
trap	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1328;"	d
trap	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1339;"	d
u16	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef uint16_t u16;$/;"	t
u32	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef uint32_t  u32;$/;"	t
u8	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef uint8_t  u8;$/;"	t
uart_init	./main.c	/^static void uart_init(uint32_t buad) {$/;"	f	file:
uart_send	./main.c	/^static void uart_send(u8 *data, u8 len) {$/;"	f	file:
uart_sendstr	./main.c	/^static void uart_sendstr(u8 *str) {$/;"	f	file:
udelay_0p68	./main.c	/^static void udelay_0p68(__IO uint16_t nCount) {$/;"	f	file:
uint16_t	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef unsigned short    uint16_t;$/;"	t
uint32_t	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef unsigned long     uint32_t;$/;"	t
uint8_t	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	/^typedef unsigned char     uint8_t;$/;"	t
wait_msg_ack	./main.c	/^static u8 wait_msg_ack                          = 0;$/;"	v	file:
wait_rsp_cmd	./main.c	/^static u8 wait_rsp_cmd                          = 0;$/;"	v	file:
wfe	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1320;"	d
wfe	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1330;"	d
wfe	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1341;"	d
wfi	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1319;"	d
wfi	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1329;"	d
wfi	./STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	1340;"	d
